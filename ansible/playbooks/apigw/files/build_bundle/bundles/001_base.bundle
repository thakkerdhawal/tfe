<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<l7:Bundle xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management">
    <l7:References>
        <l7:Item>
            <l7:Name>Root Node</l7:Name>
            <l7:Id>0000000000000000ffffffffffffec76</l7:Id>
            <l7:Type>FOLDER</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.247-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Folder id="0000000000000000ffffffffffffec76" version="0">
                    <l7:Name>Root Node</l7:Name>
                </l7:Folder>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>System Policies</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf367081130d6b</l7:Id>
            <l7:Type>FOLDER</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.248-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Folder folderId="0000000000000000ffffffffffffec76" id="fb3f1ba1a929b3396bcf367081130d6b" version="0">
                    <l7:Name>System Policies</l7:Name>
                </l7:Folder>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>eCommerce Checks</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf36708113137e</l7:Id>
            <l7:Type>FOLDER</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.248-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Folder folderId="0000000000000000ffffffffffffec76" id="fb3f1ba1a929b3396bcf36708113137e" version="0">
                    <l7:Name>eCommerce Checks</l7:Name>
                </l7:Folder>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>SecurityServices</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf3670811314c5</l7:Id>
            <l7:Type>FOLDER</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.248-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Folder folderId="0000000000000000ffffffffffffec76" id="fb3f1ba1a929b3396bcf3670811314c5" version="0">
                    <l7:Name>SecurityServices</l7:Name>
                </l7:Folder>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Shared Policies</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf367081131506</l7:Id>
            <l7:Type>FOLDER</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.248-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Folder folderId="fb3f1ba1a929b3396bcf3670811314c5" id="fb3f1ba1a929b3396bcf367081131506" version="0">
                    <l7:Name>Shared Policies</l7:Name>
                </l7:Folder>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Service templates</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf367081131690</l7:Id>
            <l7:Type>FOLDER</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.248-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Folder folderId="fb3f1ba1a929b3396bcf3670811314c5" id="fb3f1ba1a929b3396bcf367081131690" version="0">
                    <l7:Name>Service templates</l7:Name>
                </l7:Folder>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Template Backups</l7:Name>
            <l7:Id>63805bece54f5987d66ab52a8499463b</l7:Id>
            <l7:Type>FOLDER</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.248-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Folder folderId="fb3f1ba1a929b3396bcf367081131690" id="63805bece54f5987d66ab52a8499463b" version="0">
                    <l7:Name>Template Backups</l7:Name>
                </l7:Folder>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>[Internal Audit Sink Policy]</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf367081130e57</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.591-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="f2e6e0fc-fd31-4c5c-9e78-29ce4a3179c7" id="fb3f1ba1a929b3396bcf367081130e57" version="0">
                    <l7:PolicyDetail folderId="fb3f1ba1a929b3396bcf367081130d6b" guid="f2e6e0fc-fd31-4c5c-9e78-29ce4a3179c7" id="fb3f1ba1a929b3396bcf367081130e57" version="0">
                        <l7:Name>[Internal Audit Sink Policy]</l7:Name>
                        <l7:PolicyType>Internal</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="tag">
                                <l7:StringValue>audit-sink</l7:StringValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="A simple audit sink policy could convert the audit record to XML, then post it somewhere via HTTP"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditRecordToXml/&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Enable the below routing assertion or replace it with something else"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:HttpRoutingAssertion&gt;
            &lt;L7p:Enabled booleanValue="false"/&gt;
            &lt;L7p:ProtectedServiceUrl stringValue="${gateway.audit.sink.url}"/&gt;
            &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                &lt;L7p:Rules httpPassthroughRules="included"&gt;
                    &lt;L7p:item httpPassthroughRule="included"&gt;
                        &lt;L7p:Name stringValue="Cookie"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item httpPassthroughRule="included"&gt;
                        &lt;L7p:Name stringValue="SOAPAction"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Rules&gt;
            &lt;/L7p:RequestHeaderRules&gt;
            &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                &lt;L7p:ForwardAll booleanValue="true"/&gt;
                &lt;L7p:Rules httpPassthroughRules="included"/&gt;
            &lt;/L7p:RequestParamRules&gt;
            &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                &lt;L7p:Rules httpPassthroughRules="included"&gt;
                    &lt;L7p:item httpPassthroughRule="included"&gt;
                        &lt;L7p:Name stringValue="Set-Cookie"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Rules&gt;
            &lt;/L7p:ResponseHeaderRules&gt;
        &lt;/L7p:HttpRoutingAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="The below Stop Processing causes this sink policy to always fail."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This will (by default) cause the record to be saved to the internal audit database."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Remove it once you have customized the audit sink policy."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:FalseAssertion&gt;
            &lt;L7p:Enabled booleanValue="false"/&gt;
        &lt;/L7p:FalseAssertion&gt;
        &lt;L7p:TrueAssertion/&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>[Internal Audit Lookup Policy]</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf367081130e6a</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.593-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="df27b3b8-2184-487c-b937-f21ee70c64d8" id="fb3f1ba1a929b3396bcf367081130e6a" version="0">
                    <l7:PolicyDetail folderId="fb3f1ba1a929b3396bcf367081130d6b" guid="df27b3b8-2184-487c-b937-f21ee70c64d8" id="fb3f1ba1a929b3396bcf367081130e6a" version="0">
                        <l7:Name>[Internal Audit Lookup Policy]</l7:Name>
                        <l7:PolicyType>Internal</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="tag">
                                <l7:StringValue>audit-lookup</l7:StringValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Version 1.00 - DK - 2018/01/15 - Adding Set Context variable to remove warning message from logs. See Jira DIGIENG-9778"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="MA=="/&gt;
            &lt;L7p:DataType variableDataType="int"/&gt;
            &lt;L7p:VariableToSet stringValue="recordQuery.queryresult.count"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:Detail stringValue="Internal Policy: [Internal Audit Lookup Policy]"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>[Internal Debug Trace Policy]</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf367081130f1d</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.595-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="2a38dc49-6442-4b55-b2ea-df77fa5f638e" id="fb3f1ba1a929b3396bcf367081130f1d" version="0">
                    <l7:PolicyDetail folderId="fb3f1ba1a929b3396bcf367081130d6b" guid="2a38dc49-6442-4b55-b2ea-df77fa5f638e" id="fb3f1ba1a929b3396bcf367081130f1d" version="0">
                        <l7:Name>[Internal Debug Trace Policy]</l7:Name>
                        <l7:PolicyType>Internal</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="tag">
                                <l7:StringValue>debug-trace</l7:StringValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="A simple debug trace policy."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This policy will be invoked after every assertion for any service with debug tracing enabled."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="For example, we can trigger auditing of trace information about the assertion that just finished."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditAssertion&gt;
            &lt;L7p:ChangeSaveRequest booleanValue="false"/&gt;
            &lt;L7p:ChangeSaveResponse booleanValue="false"/&gt;
        &lt;/L7p:AuditAssertion&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:Detail stringValue="TRACE: service.name=${trace.service.name} assertion.number=${trace.assertion.numberstr} assertion.shortname=${trace.assertion.shortname} status=${trace.status}"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Audit Scrubbing Filter</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf367081130f3f</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.605-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="88a2be20-d4cf-4b5a-a5c4-69d58b3991e0" id="fb3f1ba1a929b3396bcf367081130f3f" version="0">
                    <l7:PolicyDetail folderId="fb3f1ba1a929b3396bcf367081130d6b" guid="88a2be20-d4cf-4b5a-a5c4-69d58b3991e0" id="fb3f1ba1a929b3396bcf367081130f3f" version="0">
                        <l7:Name>Audit Scrubbing Filter</l7:Name>
                        <l7:PolicyType>Internal</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="tag">
                                <l7:StringValue>audit-message-filter</l7:StringValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Add policy logic to scrub / protect the request or response messages before they are audited."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Policy is invoked by the audit sub system post service and global policy processing."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:XslTransformation&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Use stylesheet to implement the scrubbing"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

  &lt;!-- Identity transform --&gt;
  &lt;xsl:template match="@*|*|processing-instruction()|comment()"&gt;
    &lt;xsl:copy&gt;
      &lt;xsl:apply-templates select="*|@*|text()|processing-instruction()|comment()"/&gt;
    &lt;/xsl:copy&gt;
  &lt;/xsl:template&gt;
  
  &lt;!-- Add templates to scrub sensitive fields here.--&gt;
  
  &lt;!-- Scrub Password in the http://www.rbsmarkets.com/infrastructure/webservices/ssoclient.asmx namespace --&gt;
  &lt;xsl:template match="//ssoc:Password" xmlns:ssoc="http://www.rbsmarkets.com/infrastructure/webservices/ssoclient.asmx"&gt;
  &lt;ssoc:Password&gt;*******&lt;/ssoc:Password&gt;
  
 
  &lt;/xsl:template&gt;  
  
&lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
            &lt;/L7p:ResourceInfo&gt;
            &lt;L7p:TransformName stringValue=""/&gt;
        &lt;/L7p:XslTransformation&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>hostname.code</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf367081130c2a</l7:Id>
            <l7:Type>CLUSTER_PROPERTY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.605-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ClusterProperty id="fb3f1ba1a929b3396bcf367081130c2a" version="0">
                    <l7:Name>hostname.code</l7:Name>
                    <l7:Value>14d</l7:Value>
                </l7:ClusterProperty>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Message Received Global Policy</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf367081131590</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.609-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="2e2f3121-cf31-407f-8eea-1a4f55967195" id="fb3f1ba1a929b3396bcf367081131590" version="0">
                    <l7:PolicyDetail folderId="fb3f1ba1a929b3396bcf367081130d6b" guid="2e2f3121-cf31-407f-8eea-1a4f55967195" id="fb3f1ba1a929b3396bcf367081131590" version="0">
                        <l7:Name>Message Received Global Policy</l7:Name>
                        <l7:PolicyType>Global</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="tag">
                                <l7:StringValue>message-received</l7:StringValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Message Received Global Policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** This policy is executed for every message received, whether it resolves to a service or not. It is also"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**    the first policy to &amp;quot;touch&amp;quot; a message."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Note: Context variables set here do not scope outside of this policy."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.00 - Jay MacDonald - 2012-10-03"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.01 - Sam Waymouth - 2014-03-19"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** Use the Apply Rate Limit Assertion to monitor when the system concurrency is approaching the"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     core concurrency value and send an alert. The requests per second is intentionally very high"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     since we are trapping concurrency. Also ensure that the &amp;quot;cluster wide&amp;quot; boxes are NOT checked"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     since concurrency limits are node specific."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:RateLimit&gt;
                &lt;L7p:CounterName stringValue="${gateway.hostname.code}-message-received"/&gt;
                &lt;L7p:LogOnly booleanValue="true"/&gt;
                &lt;L7p:MaxConcurrency stringValue="${gateway.io.httpCoreConcurrency}"/&gt;
                &lt;L7p:MaxRequestsPerSecond stringValue="100000"/&gt;
                &lt;L7p:SplitConcurrencyLimitAcrossNodes booleanValue="false"/&gt;
                &lt;L7p:SplitRateLimitAcrossNodes booleanValue="false"/&gt;
            &lt;/L7p:RateLimit&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="** Currently we'll just send a log event to the Gateway log"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:CustomLoggerSuffix stringValue="concurrency"/&gt;
                    &lt;L7p:Detail stringValue="${ssgnode.name} is exceeding the io.httpCoreConcurrency (${gateway.io.httpCoreConcurrency})"/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                    &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Send the alert"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Monitor for http threads over the io.httpCoreConcurrency value"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Pre Service Global Policy</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf3670811315bf</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.616-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="5ea29718-bd2e-4759-8fb0-bd1d364dd84b" id="fb3f1ba1a929b3396bcf3670811315bf" version="0">
                    <l7:PolicyDetail folderId="fb3f1ba1a929b3396bcf367081130d6b" guid="5ea29718-bd2e-4759-8fb0-bd1d364dd84b" id="fb3f1ba1a929b3396bcf3670811315bf" version="0">
                        <l7:Name>Pre Service Global Policy</l7:Name>
                        <l7:PolicyType>Global</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="tag">
                                <l7:StringValue>pre-service</l7:StringValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="***************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Pre Service Global Policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** This policy is executed immediately prior to every service policy. It is not executed for requests that"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**    that do not resolve to a service. Use it for managing global rate limit for &amp;quot;real&amp;quot; requests"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Note: Context variables set here to not scope outside of this policy."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Currently only sends alert to syslog with globalRateLimit tag."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.00 - Jay MacDonald - 2012-09-27"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.01 - Sam Waymouth - 2014-03-19"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="***************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="MTUwMA=="/&gt;
                    &lt;L7p:VariableToSet stringValue="globalRateLimit"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:RateLimit&gt;
                    &lt;L7p:CounterName stringValue="${gateway.hostname.code}-pre-service"/&gt;
                    &lt;L7p:LogOnly booleanValue="true"/&gt;
                    &lt;L7p:MaxRequestsPerSecond stringValue="${globalRateLimit}"/&gt;
                    &lt;L7p:SplitRateLimitAcrossNodes booleanValue="false"/&gt;
                &lt;/L7p:RateLimit&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Set the limit, check the rate"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:CustomLoggerSuffix stringValue="globalRateLimit"/&gt;
                    &lt;L7p:Detail stringValue="globalRateLimit:${requestId} ${ssgnode.name} has exceeded the global rate limit (${globalRateLimit})"/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Handle the exception (alert somewhere)"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:AuditDetailAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Fall back on internal audit"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CustomLoggerSuffix stringValue="globalRateLimit"/&gt;
                &lt;L7p:Detail stringValue="globalRateLimit:${requestId} ${ssgnode.name} has exceeded the global rate limit (${globalRateLimit})"/&gt;
                &lt;L7p:Level stringValue="WARNING"/&gt;
                &lt;L7p:LoggingOnly booleanValue="true"/&gt;
            &lt;/L7p:AuditDetailAssertion&gt;
        &lt;/wsp:OneOrMore&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Internal Identity Provider</l7:Name>
            <l7:Id>0000000000000000fffffffffffffffe</l7:Id>
            <l7:Type>ID_PROVIDER_CONFIG</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.616-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:IdentityProvider id="0000000000000000fffffffffffffffe" version="0">
                    <l7:Name>Internal Identity Provider</l7:Name>
                    <l7:IdentityProviderType>Internal</l7:IdentityProviderType>
                </l7:IdentityProvider>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Gateway Management Service</l7:Name>
            <l7:Id>3ab0ba38f0101c67d9c46ad05f5b3d73</l7:Id>
            <l7:Type>SERVICE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.644-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Service id="3ab0ba38f0101c67d9c46ad05f5b3d73" version="2">
                    <l7:ServiceDetail folderId="fb3f1ba1a929b3396bcf367081130d6b" id="3ab0ba38f0101c67d9c46ad05f5b3d73" version="2">
                        <l7:Name>Gateway Management Service</l7:Name>
                        <l7:Enabled>true</l7:Enabled>
                        <l7:ServiceMappings>
                            <l7:HttpMapping>
                                <l7:UrlPattern>/wsman</l7:UrlPattern>
                                <l7:Verbs>
                                    <l7:Verb>POST</l7:Verb>
                                </l7:Verbs>
                            </l7:HttpMapping>
                            <l7:SoapMapping>
                                <l7:Lax>false</l7:Lax>
                            </l7:SoapMapping>
                        </l7:ServiceMappings>
                        <l7:Properties>
                            <l7:Property key="internal">
                                <l7:BooleanValue>true</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="policyRevision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>true</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="soapVersion">
                                <l7:StringValue>1.2</l7:StringValue>
                            </l7:Property>
                            <l7:Property key="tracingEnabled">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="wssProcessingEnabled">
                                <l7:BooleanValue>true</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:ServiceDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy" version="0">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:SslAssertion/&gt;
        &lt;L7p:HttpBasic/&gt;
        &lt;L7p:Authentication&gt;
            &lt;L7p:IdentityProviderOid goidValue="0000000000000000fffffffffffffffe"/&gt;
        &lt;/L7p:Authentication&gt;
        &lt;L7p:GatewayManagement/&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                        <l7:ResourceSet rootUrl="file://__ssginternal/gateway-management-8_2_00.wsdl" tag="wsdl">
                            <l7:Resource sourceUrl="file://__ssginternal/gateway-management-8_2_00.wsdl" type="wsdl">&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;definitions targetNamespace="http://ns.l7tech.com/2010/04/gateway-management" tns:targetNamespace="http://ns.l7tech.com/2010/04/gateway-management" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:wsen="http://schemas.xmlsoap.org/ws/2004/09/enumeration" xmlns:wxf="http://schemas.xmlsoap.org/ws/2004/09/transfer" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:wse="http://schemas.xmlsoap.org/ws/2004/08/eventing" xmlns:tns="http://ns.l7tech.com/2010/04/gateway-management" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:wsman="http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd" xmlns:wsoap12="http://schemas.xmlsoap.org/wsdl/soap12/"&gt;
  &lt;!-- Imports --&gt;
  &lt;import namespace="http://schemas.xmlsoap.org/ws/2004/09/transfer" location="http://schemas.xmlsoap.org/ws/2004/09/transfer/transfer.wsdl"/&gt;
  &lt;import namespace="http://schemas.xmlsoap.org/ws/2004/09/enumeration" location="http://schemas.xmlsoap.org/ws/2004/09/enumeration/enumeration.wsdl"/&gt;
  &lt;import namespace="http://schemas.xmlsoap.org/ws/2004/08/eventing" location="http://schemas.xmlsoap.org/ws/2004/08/eventing/eventing.wsdl"/&gt;
  &lt;types&gt;
    &lt;xs:schema elementFormDefault="qualified" blockDefault="#all"&gt;
      &lt;xs:import namespace="http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd" schemaLocation="http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd"/&gt;
    &lt;/xs:schema&gt;
    &lt;xs:schema elementFormDefault="qualified" blockDefault="#all"&gt;
      &lt;xs:import namespace="http://ns.l7tech.com/2010/04/gateway-management" schemaLocation="gateway-management.xsd"/&gt;
    &lt;/xs:schema&gt;
  &lt;/types&gt;
  &lt;!-- WS-Management Messages --&gt;
  &lt;message name="ResourceURIMessage"&gt;
    &lt;part name="ResourceURIPart" element="wsman:ResourceURI"/&gt;
  &lt;/message&gt;
  &lt;message name="SelectorSetMessage"&gt;
    &lt;part name="SelectorSetPart" element="wsman:SelectorSet"/&gt;
  &lt;/message&gt;
  &lt;message name="OptionSetMessage"&gt;
    &lt;part name="OptionSetPart" element="wsman:OptionSet"/&gt;
  &lt;/message&gt;
  &lt;message name="OperationTimeoutMessage"&gt;
    &lt;part name="OperationTimeoutPart" element="wsman:OperationTimeout"/&gt;
  &lt;/message&gt;
  &lt;message name="RequestTotalItemsCountEstimateMessage"&gt;
    &lt;part name="RequestTotalItemsCountEstimatePart" element="wsman:RequestTotalItemsCountEstimate"/&gt;
  &lt;/message&gt;
  &lt;message name="TotalItemsCountEstimateMessage"&gt;
    &lt;part name="TotalItemsCountEstimatePart" element="wsman:TotalItemsCountEstimate"/&gt;
  &lt;/message&gt;
  &lt;message name="FragmentTransferMessage"&gt;
    &lt;part name="FragmentTransferPart" element="wsman:FragmentTransfer"/&gt;
  &lt;/message&gt;
  &lt;!-- Resource Messages --&gt;
  &lt;message name="Message"&gt;
    &lt;part name="Part" element="tns:"/&gt;
  &lt;/message&gt;
  &lt;message name="ActiveConnectorMessage"&gt;
    &lt;part name="ActiveConnectorPart" element="tns:ActiveConnector"/&gt;
  &lt;/message&gt;
  &lt;message name="AddAssignmentsContextMessage"&gt;
    &lt;part name="AddAssignmentsContextPart" element="tns:AddAssignmentsContext"/&gt;
  &lt;/message&gt;
  &lt;message name="AssertionSecurityZoneMessage"&gt;
    &lt;part name="AssertionSecurityZonePart" element="tns:AssertionSecurityZone"/&gt;
  &lt;/message&gt;
  &lt;message name="ClusterPropertyMessage"&gt;
    &lt;part name="ClusterPropertyPart" element="tns:ClusterProperty"/&gt;
  &lt;/message&gt;
  &lt;message name="CustomKeyValueMessage"&gt;
    &lt;part name="CustomKeyValuePart" element="tns:CustomKeyValue"/&gt;
  &lt;/message&gt;
  &lt;message name="EmailListenerMessage"&gt;
    &lt;part name="EmailListenerPart" element="tns:EmailListener"/&gt;
  &lt;/message&gt;
  &lt;message name="EncapsulatedAssertionMessage"&gt;
    &lt;part name="EncapsulatedAssertionPart" element="tns:EncapsulatedAssertion"/&gt;
  &lt;/message&gt;
  &lt;message name="EncapsulatedAssertionExportResultMessage"&gt;
    &lt;part name="EncapsulatedAssertionExportResultPart" element="tns:EncapsulatedAssertionExportResult"/&gt;
  &lt;/message&gt;
  &lt;message name="EncapsulatedAssertionImportResultMessage"&gt;
    &lt;part name="EncapsulatedAssertionImportResultPart" element="tns:EncapsulatedAssertionImportResult"/&gt;
  &lt;/message&gt;
  &lt;message name="EncassImportContextMessage"&gt;
    &lt;part name="EncassImportContextPart" element="tns:EncassImportContext"/&gt;
  &lt;/message&gt;
  &lt;message name="FolderMessage"&gt;
    &lt;part name="FolderPart" element="tns:Folder"/&gt;
  &lt;/message&gt;
  &lt;message name="GenericEntityMessage"&gt;
    &lt;part name="GenericEntityPart" element="tns:GenericEntity"/&gt;
  &lt;/message&gt;
  &lt;message name="HttpConfigurationMessage"&gt;
    &lt;part name="HttpConfigurationPart" element="tns:HttpConfiguration"/&gt;
  &lt;/message&gt;
  &lt;message name="IdentityProviderMessage"&gt;
    &lt;part name="IdentityProviderPart" element="tns:IdentityProvider"/&gt;
  &lt;/message&gt;
  &lt;message name="InterfaceTagMessage"&gt;
    &lt;part name="InterfaceTagPart" element="tns:InterfaceTag"/&gt;
  &lt;/message&gt;
  &lt;message name="JDBCConnectionMessage"&gt;
    &lt;part name="JDBCConnectionPart" element="tns:JDBCConnection"/&gt;
  &lt;/message&gt;
  &lt;message name="JMSDestinationMessage"&gt;
    &lt;part name="JMSDestinationPart" element="tns:JMSDestination"/&gt;
  &lt;/message&gt;
  &lt;message name="ListenPortMessage"&gt;
    &lt;part name="ListenPortPart" element="tns:ListenPort"/&gt;
  &lt;/message&gt;
  &lt;message name="PolicyMessage"&gt;
    &lt;part name="PolicyPart" element="tns:Policy"/&gt;
  &lt;/message&gt;
  &lt;message name="PolicyAliasMessage"&gt;
    &lt;part name="PolicyAliasPart" element="tns:PolicyAlias"/&gt;
  &lt;/message&gt;
  &lt;message name="PolicyExportResultMessage"&gt;
    &lt;part name="PolicyExportResultPart" element="tns:PolicyExportResult"/&gt;
  &lt;/message&gt;
  &lt;message name="PolicyImportContextMessage"&gt;
    &lt;part name="PolicyImportContextPart" element="tns:PolicyImportContext"/&gt;
  &lt;/message&gt;
  &lt;message name="PolicyImportResultMessage"&gt;
    &lt;part name="PolicyImportResultPart" element="tns:PolicyImportResult"/&gt;
  &lt;/message&gt;
  &lt;message name="PolicyValidationContextMessage"&gt;
    &lt;part name="PolicyValidationContextPart" element="tns:PolicyValidationContext"/&gt;
  &lt;/message&gt;
  &lt;message name="PolicyValidationResultMessage"&gt;
    &lt;part name="PolicyValidationResultPart" element="tns:PolicyValidationResult"/&gt;
  &lt;/message&gt;
  &lt;message name="PrivateKeyMessage"&gt;
    &lt;part name="PrivateKeyPart" element="tns:PrivateKey"/&gt;
  &lt;/message&gt;
  &lt;message name="PrivateKeyCreationContextMessage"&gt;
    &lt;part name="PrivateKeyCreationContextPart" element="tns:PrivateKeyCreationContext"/&gt;
  &lt;/message&gt;
  &lt;message name="PrivateKeyExportContextMessage"&gt;
    &lt;part name="PrivateKeyExportContextPart" element="tns:PrivateKeyExportContext"/&gt;
  &lt;/message&gt;
  &lt;message name="PrivateKeyExportResultMessage"&gt;
    &lt;part name="PrivateKeyExportResultPart" element="tns:PrivateKeyExportResult"/&gt;
  &lt;/message&gt;
  &lt;message name="PrivateKeyGenerateCsrContextMessage"&gt;
    &lt;part name="PrivateKeyGenerateCsrContextPart" element="tns:PrivateKeyGenerateCsrContext"/&gt;
  &lt;/message&gt;
  &lt;message name="PrivateKeyGenerateCsrResultMessage"&gt;
    &lt;part name="PrivateKeyGenerateCsrResultPart" element="tns:PrivateKeyGenerateCsrResult"/&gt;
  &lt;/message&gt;
  &lt;message name="PrivateKeyImportContextMessage"&gt;
    &lt;part name="PrivateKeyImportContextPart" element="tns:PrivateKeyImportContext"/&gt;
  &lt;/message&gt;
  &lt;message name="PrivateKeySpecialPurposeContextMessage"&gt;
    &lt;part name="PrivateKeySpecialPurposeContextPart" element="tns:PrivateKeySpecialPurposeContext"/&gt;
  &lt;/message&gt;
  &lt;message name="RemoveAssignmentsContextMessage"&gt;
    &lt;part name="RemoveAssignmentsContextPart" element="tns:RemoveAssignmentsContext"/&gt;
  &lt;/message&gt;
  &lt;message name="ResourceDocumentMessage"&gt;
    &lt;part name="ResourceDocumentPart" element="tns:ResourceDocument"/&gt;
  &lt;/message&gt;
  &lt;message name="RevocationCheckingPolicyMessage"&gt;
    &lt;part name="RevocationCheckingPolicyPart" element="tns:RevocationCheckingPolicy"/&gt;
  &lt;/message&gt;
  &lt;message name="RoleMessage"&gt;
    &lt;part name="RolePart" element="tns:Role"/&gt;
  &lt;/message&gt;
  &lt;message name="SecurityZoneMessage"&gt;
    &lt;part name="SecurityZonePart" element="tns:SecurityZone"/&gt;
  &lt;/message&gt;
  &lt;message name="ServiceMessage"&gt;
    &lt;part name="ServicePart" element="tns:Service"/&gt;
  &lt;/message&gt;
  &lt;message name="ServiceAliasMessage"&gt;
    &lt;part name="ServiceAliasPart" element="tns:ServiceAlias"/&gt;
  &lt;/message&gt;
  &lt;message name="SiteMinderConfigurationMessage"&gt;
    &lt;part name="SiteMinderConfigurationPart" element="tns:SiteMinderConfiguration"/&gt;
  &lt;/message&gt;
  &lt;message name="StoredPasswordMessage"&gt;
    &lt;part name="StoredPasswordPart" element="tns:StoredPassword"/&gt;
  &lt;/message&gt;
  &lt;message name="TrustedCertificateMessage"&gt;
    &lt;part name="TrustedCertificatePart" element="tns:TrustedCertificate"/&gt;
  &lt;/message&gt;
  &lt;message name="VersionCommentMessage"&gt;
    &lt;part name="VersionCommentPart" element="tns:VersionComment"/&gt;
  &lt;/message&gt;
  &lt;!-- PortTypes --&gt;
  &lt;portType name="GatewayManagementPortType"&gt;
    &lt;!--  WS-Transfer Operations --&gt;
    &lt;operation name="Create"&gt;
      &lt;input message="wxf:AnyXmlMessage" wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/Create"/&gt;
      &lt;output message="wxf:CreateResponseMessage" wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/CreateResponse"/&gt;
    &lt;/operation&gt;
    &lt;operation name="Get"&gt;
      &lt;input message="wxf:EmptyMessage" wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/Get"/&gt;
      &lt;output message="wxf:AnyXmlMessage" wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/GetResponse"/&gt;
    &lt;/operation&gt;
    &lt;operation name="Put"&gt;
      &lt;input message="wxf:AnyXmlMessage" wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/Put"/&gt;
      &lt;output message="wxf:OptionalXmlMessage" wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/PutResponse"/&gt;
    &lt;/operation&gt;
    &lt;operation name="Delete"&gt;
      &lt;input message="wxf:EmptyMessage" wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/Delete"/&gt;
      &lt;output message="wxf:EmptyMessage" wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/DeleteResponse"/&gt;
    &lt;/operation&gt;
    &lt;!-- Resource Operations --&gt;
    &lt;operation name="encapsulatedAssertionsExportEncass"&gt;
      &lt;input message="wxf:EmptyMessage" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/encapsulatedAssertions/ExportEncass"/&gt;
      &lt;output message="tns:EncapsulatedAssertionExportResultMessage" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/encapsulatedAssertions/ExportEncassResponse"/&gt;
    &lt;/operation&gt;
    &lt;operation name="encapsulatedAssertionsImportEncass"&gt;
      &lt;input message="tns:EncassImportContextMessage" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/encapsulatedAssertions/ImportEncass"/&gt;
      &lt;output message="tns:EncapsulatedAssertionImportResultMessage" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/encapsulatedAssertions/ImportEncassResponse"/&gt;
    &lt;/operation&gt;
    &lt;operation name="policiesExportPolicy"&gt;
      &lt;input message="wxf:EmptyMessage" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/policies/ExportPolicy"/&gt;
      &lt;output message="tns:PolicyExportResultMessage" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/policies/ExportPolicyResponse"/&gt;
    &lt;/operation&gt;
    &lt;operation name="policiesImportPolicy"&gt;
      &lt;input message="tns:PolicyImportContextMessage" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/policies/ImportPolicy"/&gt;
      &lt;output message="tns:PolicyImportResultMessage" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/policies/ImportPolicyResponse"/&gt;
    &lt;/operation&gt;
    &lt;operation name="policiesSetVersionComment"&gt;
      &lt;input message="tns:VersionCommentMessage" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/policies/SetVersionComment"/&gt;
      &lt;output message="tns:Message" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/policies/SetVersionCommentResponse"/&gt;
    &lt;/operation&gt;
    &lt;operation name="policiesValidatePolicy"&gt;
      &lt;input message="tns:PolicyValidationContextMessage" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/policies/ValidatePolicy"/&gt;
      &lt;output message="tns:PolicyValidationResultMessage" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/policies/ValidatePolicyResponse"/&gt;
    &lt;/operation&gt;
    &lt;operation name="privateKeysCreateKey"&gt;
      &lt;input message="tns:PrivateKeyCreationContextMessage" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/privateKeys/CreateKey"/&gt;
      &lt;output message="tns:PrivateKeyMessage" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/privateKeys/CreateKeyResponse"/&gt;
    &lt;/operation&gt;
    &lt;operation name="privateKeysExportKey"&gt;
      &lt;input message="tns:PrivateKeyExportContextMessage" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/privateKeys/ExportKey"/&gt;
      &lt;output message="tns:PrivateKeyExportResultMessage" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/privateKeys/ExportKeyResponse"/&gt;
    &lt;/operation&gt;
    &lt;operation name="privateKeysGenerateCSR"&gt;
      &lt;input message="tns:PrivateKeyGenerateCsrContextMessage" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/privateKeys/GenerateCSR"/&gt;
      &lt;output message="tns:PrivateKeyGenerateCsrResultMessage" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/privateKeys/GenerateCSRResponse"/&gt;
    &lt;/operation&gt;
    &lt;operation name="privateKeysImportKey"&gt;
      &lt;input message="tns:PrivateKeyImportContextMessage" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/privateKeys/ImportKey"/&gt;
      &lt;output message="tns:PrivateKeyMessage" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/privateKeys/ImportKeyResponse"/&gt;
    &lt;/operation&gt;
    &lt;operation name="privateKeysSetSpecialPurposes"&gt;
      &lt;input message="tns:PrivateKeySpecialPurposeContextMessage" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/privateKeys/SetSpecialPurposes"/&gt;
      &lt;output message="tns:PrivateKeyMessage" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/privateKeys/SetSpecialPurposesResponse"/&gt;
    &lt;/operation&gt;
    &lt;operation name="rolesAddAssignments"&gt;
      &lt;input message="tns:AddAssignmentsContextMessage" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/roles/AddAssignments"/&gt;
      &lt;output message="tns:Message" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/roles/AddAssignmentsResponse"/&gt;
    &lt;/operation&gt;
    &lt;operation name="rolesRemoveAssignments"&gt;
      &lt;input message="tns:RemoveAssignmentsContextMessage" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/roles/RemoveAssignments"/&gt;
      &lt;output message="tns:Message" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/roles/RemoveAssignmentsResponse"/&gt;
    &lt;/operation&gt;
    &lt;operation name="servicesExportPolicy"&gt;
      &lt;input message="wxf:EmptyMessage" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/services/ExportPolicy"/&gt;
      &lt;output message="tns:PolicyExportResultMessage" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/services/ExportPolicyResponse"/&gt;
    &lt;/operation&gt;
    &lt;operation name="servicesImportPolicy"&gt;
      &lt;input message="tns:PolicyImportContextMessage" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/services/ImportPolicy"/&gt;
      &lt;output message="tns:PolicyImportResultMessage" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/services/ImportPolicyResponse"/&gt;
    &lt;/operation&gt;
    &lt;operation name="servicesSetVersionComment"&gt;
      &lt;input message="tns:VersionCommentMessage" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/services/SetVersionComment"/&gt;
      &lt;output message="tns:Message" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/services/SetVersionCommentResponse"/&gt;
    &lt;/operation&gt;
    &lt;operation name="servicesValidatePolicy"&gt;
      &lt;input message="tns:PolicyValidationContextMessage" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/services/ValidatePolicy"/&gt;
      &lt;output message="tns:PolicyValidationResultMessage" wsa:Action="http://ns.l7tech.com/2010/04/gateway-management/services/ValidatePolicyResponse"/&gt;
    &lt;/operation&gt;
    &lt;!--  WS-Enumeration Operations --&gt;
    &lt;operation name="EnumerateOp"&gt;
      &lt;input message="wsen:EnumerateMessage" wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/Enumerate"/&gt;
      &lt;output message="wsen:EnumerateResponseMessage" wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/EnumerateResponse"/&gt;
    &lt;/operation&gt;
    &lt;operation name="PullOp"&gt;
      &lt;input message="wsen:PullMessage" wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/Pull"/&gt;
      &lt;output message="wsen:PullResponseMessage" wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/PullResponse"/&gt;
    &lt;/operation&gt;
    &lt;operation name="RenewOp"&gt;
      &lt;input message="wsen:RenewMessage" wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/Renew"/&gt;
      &lt;output message="wsen:RenewResponseMessage" wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/RenewResponse"/&gt;
    &lt;/operation&gt;
    &lt;operation name="GetStatusOp"&gt;
      &lt;input message="wsen:GetStatusMessage" wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/GetStatus"/&gt;
      &lt;output message="wsen:GetStatusResponseMessage" wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/GetStatusResponse"/&gt;
    &lt;/operation&gt;
    &lt;operation name="ReleaseOp"&gt;
      &lt;input message="wsen:ReleaseMessage" wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/Release"/&gt;
      &lt;output message="wsen:ReleaseResponseMessage" wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/ReleaseResponse"/&gt;
    &lt;/operation&gt;
  &lt;/portType&gt;
  &lt;!-- Bindings --&gt;
  &lt;binding name="GatewayManagementBinding" type="tns:GatewayManagementPortType"&gt;
    &lt;wsoap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/&gt;
    &lt;!--  WS-Transfer Operations --&gt;
    &lt;operation name="Get"&gt;
      &lt;wsoap12:operation soapAction="http://schemas.xmlsoap.org/ws/2004/09/transfer/Get"/&gt;
      &lt;input&gt;
        &lt;wsoap12:header message="tns:ResourceURIMessage" part="ResourceURIPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:SelectorSetMessage" part="SelectorSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OptionSetMessage" part="OptionSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OperationTimeoutMessage" part="OperationTimeoutPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:FragmentTransferMessage" part="FragmentTransferPart" use="literal"/&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/input&gt;
      &lt;output&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/output&gt;
    &lt;/operation&gt;
    &lt;operation name="Put"&gt;
      &lt;wsoap12:operation soapAction="http://schemas.xmlsoap.org/ws/2004/09/transfer/Put"/&gt;
      &lt;input&gt;
        &lt;wsoap12:header message="tns:ResourceURIMessage" part="ResourceURIPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:SelectorSetMessage" part="SelectorSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OptionSetMessage" part="OptionSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OperationTimeoutMessage" part="OperationTimeoutPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:FragmentTransferMessage" part="FragmentTransferPart" use="literal"/&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/input&gt;
      &lt;output&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/output&gt;
    &lt;/operation&gt;
    &lt;operation name="Delete"&gt;
      &lt;wsoap12:operation soapAction="http://schemas.xmlsoap.org/ws/2004/09/transfer/Delete"/&gt;
      &lt;input&gt;
        &lt;wsoap12:header message="tns:ResourceURIMessage" part="ResourceURIPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:SelectorSetMessage" part="SelectorSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OptionSetMessage" part="OptionSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OperationTimeoutMessage" part="OperationTimeoutPart" use="literal"/&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/input&gt;
      &lt;output&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/output&gt;
    &lt;/operation&gt;
    &lt;operation name="Create"&gt;
      &lt;wsoap12:operation soapAction="http://schemas.xmlsoap.org/ws/2004/09/transfer/Create"/&gt;
      &lt;input&gt;
        &lt;wsoap12:header message="tns:ResourceURIMessage" part="ResourceURIPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:SelectorSetMessage" part="SelectorSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OptionSetMessage" part="OptionSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OperationTimeoutMessage" part="OperationTimeoutPart" use="literal"/&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/input&gt;
      &lt;output&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/output&gt;
    &lt;/operation&gt;
    &lt;!-- Resource Operations --&gt;
    &lt;operation name="encapsulatedAssertionsExportEncass"&gt;
      &lt;wsoap12:operation soapAction="http://ns.l7tech.com/2010/04/gateway-management/encapsulatedAssertions/ExportEncass"/&gt;
      &lt;input&gt;
        &lt;wsoap12:header message="tns:ResourceURIMessage" part="ResourceURIPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:SelectorSetMessage" part="SelectorSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OptionSetMessage" part="OptionSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OperationTimeoutMessage" part="OperationTimeoutPart" use="literal"/&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/input&gt;
      &lt;output&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/output&gt;
    &lt;/operation&gt;
    &lt;operation name="encapsulatedAssertionsImportEncass"&gt;
      &lt;wsoap12:operation soapAction="http://ns.l7tech.com/2010/04/gateway-management/encapsulatedAssertions/ImportEncass"/&gt;
      &lt;input&gt;
        &lt;wsoap12:header message="tns:ResourceURIMessage" part="ResourceURIPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:SelectorSetMessage" part="SelectorSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OptionSetMessage" part="OptionSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OperationTimeoutMessage" part="OperationTimeoutPart" use="literal"/&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/input&gt;
      &lt;output&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/output&gt;
    &lt;/operation&gt;
    &lt;operation name="policiesExportPolicy"&gt;
      &lt;wsoap12:operation soapAction="http://ns.l7tech.com/2010/04/gateway-management/policies/ExportPolicy"/&gt;
      &lt;input&gt;
        &lt;wsoap12:header message="tns:ResourceURIMessage" part="ResourceURIPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:SelectorSetMessage" part="SelectorSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OptionSetMessage" part="OptionSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OperationTimeoutMessage" part="OperationTimeoutPart" use="literal"/&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/input&gt;
      &lt;output&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/output&gt;
    &lt;/operation&gt;
    &lt;operation name="policiesImportPolicy"&gt;
      &lt;wsoap12:operation soapAction="http://ns.l7tech.com/2010/04/gateway-management/policies/ImportPolicy"/&gt;
      &lt;input&gt;
        &lt;wsoap12:header message="tns:ResourceURIMessage" part="ResourceURIPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:SelectorSetMessage" part="SelectorSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OptionSetMessage" part="OptionSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OperationTimeoutMessage" part="OperationTimeoutPart" use="literal"/&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/input&gt;
      &lt;output&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/output&gt;
    &lt;/operation&gt;
    &lt;operation name="policiesSetVersionComment"&gt;
      &lt;wsoap12:operation soapAction="http://ns.l7tech.com/2010/04/gateway-management/policies/SetVersionComment"/&gt;
      &lt;input&gt;
        &lt;wsoap12:header message="tns:ResourceURIMessage" part="ResourceURIPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:SelectorSetMessage" part="SelectorSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OptionSetMessage" part="OptionSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OperationTimeoutMessage" part="OperationTimeoutPart" use="literal"/&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/input&gt;
      &lt;output&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/output&gt;
    &lt;/operation&gt;
    &lt;operation name="policiesValidatePolicy"&gt;
      &lt;wsoap12:operation soapAction="http://ns.l7tech.com/2010/04/gateway-management/policies/ValidatePolicy"/&gt;
      &lt;input&gt;
        &lt;wsoap12:header message="tns:ResourceURIMessage" part="ResourceURIPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:SelectorSetMessage" part="SelectorSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OptionSetMessage" part="OptionSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OperationTimeoutMessage" part="OperationTimeoutPart" use="literal"/&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/input&gt;
      &lt;output&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/output&gt;
    &lt;/operation&gt;
    &lt;operation name="privateKeysCreateKey"&gt;
      &lt;wsoap12:operation soapAction="http://ns.l7tech.com/2010/04/gateway-management/privateKeys/CreateKey"/&gt;
      &lt;input&gt;
        &lt;wsoap12:header message="tns:ResourceURIMessage" part="ResourceURIPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:SelectorSetMessage" part="SelectorSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OptionSetMessage" part="OptionSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OperationTimeoutMessage" part="OperationTimeoutPart" use="literal"/&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/input&gt;
      &lt;output&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/output&gt;
    &lt;/operation&gt;
    &lt;operation name="privateKeysExportKey"&gt;
      &lt;wsoap12:operation soapAction="http://ns.l7tech.com/2010/04/gateway-management/privateKeys/ExportKey"/&gt;
      &lt;input&gt;
        &lt;wsoap12:header message="tns:ResourceURIMessage" part="ResourceURIPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:SelectorSetMessage" part="SelectorSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OptionSetMessage" part="OptionSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OperationTimeoutMessage" part="OperationTimeoutPart" use="literal"/&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/input&gt;
      &lt;output&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/output&gt;
    &lt;/operation&gt;
    &lt;operation name="privateKeysGenerateCSR"&gt;
      &lt;wsoap12:operation soapAction="http://ns.l7tech.com/2010/04/gateway-management/privateKeys/GenerateCSR"/&gt;
      &lt;input&gt;
        &lt;wsoap12:header message="tns:ResourceURIMessage" part="ResourceURIPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:SelectorSetMessage" part="SelectorSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OptionSetMessage" part="OptionSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OperationTimeoutMessage" part="OperationTimeoutPart" use="literal"/&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/input&gt;
      &lt;output&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/output&gt;
    &lt;/operation&gt;
    &lt;operation name="privateKeysImportKey"&gt;
      &lt;wsoap12:operation soapAction="http://ns.l7tech.com/2010/04/gateway-management/privateKeys/ImportKey"/&gt;
      &lt;input&gt;
        &lt;wsoap12:header message="tns:ResourceURIMessage" part="ResourceURIPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:SelectorSetMessage" part="SelectorSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OptionSetMessage" part="OptionSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OperationTimeoutMessage" part="OperationTimeoutPart" use="literal"/&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/input&gt;
      &lt;output&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/output&gt;
    &lt;/operation&gt;
    &lt;operation name="privateKeysSetSpecialPurposes"&gt;
      &lt;wsoap12:operation soapAction="http://ns.l7tech.com/2010/04/gateway-management/privateKeys/SetSpecialPurposes"/&gt;
      &lt;input&gt;
        &lt;wsoap12:header message="tns:ResourceURIMessage" part="ResourceURIPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:SelectorSetMessage" part="SelectorSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OptionSetMessage" part="OptionSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OperationTimeoutMessage" part="OperationTimeoutPart" use="literal"/&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/input&gt;
      &lt;output&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/output&gt;
    &lt;/operation&gt;
    &lt;operation name="rolesAddAssignments"&gt;
      &lt;wsoap12:operation soapAction="http://ns.l7tech.com/2010/04/gateway-management/roles/AddAssignments"/&gt;
      &lt;input&gt;
        &lt;wsoap12:header message="tns:ResourceURIMessage" part="ResourceURIPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:SelectorSetMessage" part="SelectorSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OptionSetMessage" part="OptionSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OperationTimeoutMessage" part="OperationTimeoutPart" use="literal"/&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/input&gt;
      &lt;output&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/output&gt;
    &lt;/operation&gt;
    &lt;operation name="rolesRemoveAssignments"&gt;
      &lt;wsoap12:operation soapAction="http://ns.l7tech.com/2010/04/gateway-management/roles/RemoveAssignments"/&gt;
      &lt;input&gt;
        &lt;wsoap12:header message="tns:ResourceURIMessage" part="ResourceURIPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:SelectorSetMessage" part="SelectorSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OptionSetMessage" part="OptionSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OperationTimeoutMessage" part="OperationTimeoutPart" use="literal"/&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/input&gt;
      &lt;output&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/output&gt;
    &lt;/operation&gt;
    &lt;operation name="servicesExportPolicy"&gt;
      &lt;wsoap12:operation soapAction="http://ns.l7tech.com/2010/04/gateway-management/services/ExportPolicy"/&gt;
      &lt;input&gt;
        &lt;wsoap12:header message="tns:ResourceURIMessage" part="ResourceURIPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:SelectorSetMessage" part="SelectorSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OptionSetMessage" part="OptionSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OperationTimeoutMessage" part="OperationTimeoutPart" use="literal"/&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/input&gt;
      &lt;output&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/output&gt;
    &lt;/operation&gt;
    &lt;operation name="servicesImportPolicy"&gt;
      &lt;wsoap12:operation soapAction="http://ns.l7tech.com/2010/04/gateway-management/services/ImportPolicy"/&gt;
      &lt;input&gt;
        &lt;wsoap12:header message="tns:ResourceURIMessage" part="ResourceURIPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:SelectorSetMessage" part="SelectorSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OptionSetMessage" part="OptionSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OperationTimeoutMessage" part="OperationTimeoutPart" use="literal"/&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/input&gt;
      &lt;output&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/output&gt;
    &lt;/operation&gt;
    &lt;operation name="servicesSetVersionComment"&gt;
      &lt;wsoap12:operation soapAction="http://ns.l7tech.com/2010/04/gateway-management/services/SetVersionComment"/&gt;
      &lt;input&gt;
        &lt;wsoap12:header message="tns:ResourceURIMessage" part="ResourceURIPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:SelectorSetMessage" part="SelectorSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OptionSetMessage" part="OptionSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OperationTimeoutMessage" part="OperationTimeoutPart" use="literal"/&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/input&gt;
      &lt;output&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/output&gt;
    &lt;/operation&gt;
    &lt;operation name="servicesValidatePolicy"&gt;
      &lt;wsoap12:operation soapAction="http://ns.l7tech.com/2010/04/gateway-management/services/ValidatePolicy"/&gt;
      &lt;input&gt;
        &lt;wsoap12:header message="tns:ResourceURIMessage" part="ResourceURIPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:SelectorSetMessage" part="SelectorSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OptionSetMessage" part="OptionSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OperationTimeoutMessage" part="OperationTimeoutPart" use="literal"/&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/input&gt;
      &lt;output&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/output&gt;
    &lt;/operation&gt;
    &lt;!-- WS-Enumeration Operations --&gt;
    &lt;operation name="EnumerateOp"&gt;
      &lt;wsoap12:operation soapAction="http://schemas.xmlsoap.org/ws/2004/09/enumeration/Enumerate"/&gt;
      &lt;input&gt;
        &lt;wsoap12:header message="tns:ResourceURIMessage" part="ResourceURIPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:SelectorSetMessage" part="SelectorSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OptionSetMessage" part="OptionSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OperationTimeoutMessage" part="OperationTimeoutPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:RequestTotalItemsCountEstimateMessage" part="RequestTotalItemsCountEstimatePart" use="literal"/&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/input&gt;
      &lt;output&gt;
        &lt;wsoap12:header message="tns:TotalItemsCountEstimateMessage" part="TotalItemsCountEstimatePart" use="literal"/&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/output&gt;
    &lt;/operation&gt;
    &lt;operation name="PullOp"&gt;
      &lt;wsoap12:operation soapAction="http://schemas.xmlsoap.org/ws/2004/09/enumeration/Pull"/&gt;
      &lt;input&gt;
        &lt;wsoap12:header message="tns:ResourceURIMessage" part="ResourceURIPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:SelectorSetMessage" part="SelectorSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OptionSetMessage" part="OptionSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OperationTimeoutMessage" part="OperationTimeoutPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:RequestTotalItemsCountEstimateMessage" part="RequestTotalItemsCountEstimatePart" use="literal"/&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/input&gt;
      &lt;output&gt;
        &lt;wsoap12:header message="tns:TotalItemsCountEstimateMessage" part="TotalItemsCountEstimatePart" use="literal"/&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/output&gt;
    &lt;/operation&gt;
    &lt;operation name="RenewOp"&gt;
      &lt;wsoap12:operation soapAction="http://schemas.xmlsoap.org/ws/2004/09/enumeration/Renew"/&gt;
      &lt;input&gt;
        &lt;wsoap12:header message="tns:ResourceURIMessage" part="ResourceURIPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:SelectorSetMessage" part="SelectorSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OptionSetMessage" part="OptionSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OperationTimeoutMessage" part="OperationTimeoutPart" use="literal"/&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/input&gt;
      &lt;output&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/output&gt;
    &lt;/operation&gt;
    &lt;operation name="GetStatusOp"&gt;
      &lt;wsoap12:operation soapAction="http://schemas.xmlsoap.org/ws/2004/09/enumeration/GetStatus"/&gt;
      &lt;input&gt;
        &lt;wsoap12:header message="tns:ResourceURIMessage" part="ResourceURIPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:SelectorSetMessage" part="SelectorSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OptionSetMessage" part="OptionSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OperationTimeoutMessage" part="OperationTimeoutPart" use="literal"/&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/input&gt;
      &lt;output&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/output&gt;
    &lt;/operation&gt;
    &lt;operation name="ReleaseOp"&gt;
      &lt;wsoap12:operation soapAction="http://schemas.xmlsoap.org/ws/2004/09/enumeration/Release"/&gt;
      &lt;input&gt;
        &lt;wsoap12:header message="tns:ResourceURIMessage" part="ResourceURIPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:SelectorSetMessage" part="SelectorSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OptionSetMessage" part="OptionSetPart" use="literal"/&gt;
        &lt;wsoap12:header message="tns:OperationTimeoutMessage" part="OperationTimeoutPart" use="literal"/&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/input&gt;
      &lt;output&gt;
        &lt;wsoap12:body use="literal"/&gt;
      &lt;/output&gt;
    &lt;/operation&gt;
  &lt;/binding&gt;
  &lt;!-- Services --&gt;
  &lt;service name="GatewayManagementService"&gt;
    &lt;!--
                   Service for management of the following resources:
                   
                        http://ns.l7tech.com/2010/04/gateway-management/activeConnectors
                        http://ns.l7tech.com/2010/04/gateway-management/assertionSecurityZones
                        http://ns.l7tech.com/2010/04/gateway-management/clusterProperties
                        http://ns.l7tech.com/2010/04/gateway-management/customKeyValues
                        http://ns.l7tech.com/2010/04/gateway-management/emailListeners
                        http://ns.l7tech.com/2010/04/gateway-management/encapsulatedAssertions
                        http://ns.l7tech.com/2010/04/gateway-management/folders
                        http://ns.l7tech.com/2010/04/gateway-management/genericEntities
                        http://ns.l7tech.com/2010/04/gateway-management/httpConfigurations
                        http://ns.l7tech.com/2010/04/gateway-management/identityProviders
                        http://ns.l7tech.com/2010/04/gateway-management/interfaceTags
                        http://ns.l7tech.com/2010/04/gateway-management/jdbcConnections
                        http://ns.l7tech.com/2010/04/gateway-management/jmsDestinations
                        http://ns.l7tech.com/2010/04/gateway-management/listenPorts
                        http://ns.l7tech.com/2010/04/gateway-management/policies
                        http://ns.l7tech.com/2010/04/gateway-management/policyAliases
                        http://ns.l7tech.com/2010/04/gateway-management/privateKeys
                        http://ns.l7tech.com/2010/04/gateway-management/resources
                        http://ns.l7tech.com/2010/04/gateway-management/revocationCheckingPolicies
                        http://ns.l7tech.com/2010/04/gateway-management/roles
                        http://ns.l7tech.com/2010/04/gateway-management/securityZones
                        http://ns.l7tech.com/2010/04/gateway-management/serviceAliases
                        http://ns.l7tech.com/2010/04/gateway-management/services
                        http://ns.l7tech.com/2010/04/gateway-management/siteMinderConfigurations
                        http://ns.l7tech.com/2010/04/gateway-management/storedPasswords
                        http://ns.l7tech.com/2010/04/gateway-management/trustedCertificates
    --&gt;
    &lt;port name="GatewayManagementPort" binding="tns:GatewayManagementBinding"&gt;
      &lt;wsoap12:address location="http://127.0.0.1:8080/wsman"/&gt;
    &lt;/port&gt;
  &lt;/service&gt;
&lt;/definitions&gt;
</l7:Resource>
                            <l7:Resource sourceUrl="http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd" type="xmlschema">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;!--
Notice
DSP8015
Document: WS-Management protocol XML Schema
Version: 1.0.0
Status: Final
Date: 01/20/2008
Author: Bryan Murray, et al.
Description: XML Schema for WS-Management protocol

Copyright © 2008 Distributed Management Task Force, Inc. (DMTF). All rights reserved. DMTF is a not-for-profit association of industry members dedicated to promoting enterprise and systems management and interoperability. Members and non-members may reproduce DMTF specifications and documents for uses consistent with this purpose, provided that correct attribution is given. As DMTF specifications may be revised from time to time, the particular version and release date should always be noted. Implementation of certain elements of this standard or proposed standard may be subject to third party patent rights, including provisional patent rights (herein "patent rights"). DMTF makes no representations to users of the standard as to the existence of such rights, and is not responsible to recognize, disclose, or identify any or all such third party patent right, owners or claimants, nor for any incomplete or inaccurate identification or disclosure of such rights, owners or claimants. DMTF shall have no liability to any party, in any manner or circumstance, under any legal theory whatsoever, for failure to recognize, disclose, or identify any such third party patent rights, or for such party’s reliance on the standard or incorporation thereof in its product, protocols or testing procedures. DMTF shall have no liability to any party implementing such standard, whether such implementation is foreseeable or not, nor to any patent owner or claimant, and shall have no liability or responsibility for costs or losses incurred if a standard is withdrawn or modified after publication, and shall be indemnified and held harmless by any party implementing the standard from any and all claims of infringement by a patent owner for such implementations. For information about patents held by third-parties which have notified the DMTF that, in their opinion, such patent may relate to or impact implementations of DMTF standards, visit http://www.dmtf.org/about/policies/disclosures.php.

Change Requests:
	None
--&gt;
&lt;xs:schema targetNamespace="http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd"
    xmlns:wsman="http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd"
    xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    elementFormDefault="qualified" version="1.0.0e"&gt;

  &lt;xs:import namespace="http://schemas.xmlsoap.org/ws/2004/08/addressing"
             schemaLocation="http://schemas.xmlsoap.org/ws/2004/08/addressing/addressing.xsd"/&gt;
  &lt;xs:import namespace="http://www.w3.org/XML/1998/namespace"
             schemaLocation="http://www.w3.org/2001/xml.xsd"/&gt;

  &lt;xs:complexType name="attributableURI"&gt;
    &lt;xs:simpleContent&gt;
      &lt;xs:extension base="xs:anyURI"&gt;
        &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;

      &lt;/xs:extension&gt;
    &lt;/xs:simpleContent&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:element name="ResourceURI" type="wsman:attributableURI"/&gt;

  &lt;xs:complexType name="SelectorType"&gt;
    &lt;xs:annotation&gt;
      &lt;xs:documentation&gt;
        Instances of this type can be only simple types or EPRs, not arbitrary mixed data.
      &lt;/xs:documentation&gt;

    &lt;/xs:annotation&gt;
    &lt;xs:complexContent mixed="true"&gt;
      &lt;xs:restriction base="xs:anyType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element ref="wsa:EndpointReference" minOccurs="0"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:attribute name="Name" type="xs:NCName" use="required"/&gt;
        &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
      &lt;/xs:restriction&gt;

    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:element name="Selector" type="wsman:SelectorType"/&gt;

  &lt;xs:complexType name="SelectorSetType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element ref="wsman:Selector" minOccurs="1" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;

  &lt;/xs:complexType&gt;

  &lt;xs:element name="SelectorSet" type="wsman:SelectorSetType"&gt;
    &lt;xs:unique name="oneSelectorPerName"&gt;
      &lt;xs:selector xpath="./Selector"/&gt;
      &lt;xs:field xpath="@Name"/&gt;
    &lt;/xs:unique&gt;
  &lt;/xs:element&gt;

  &lt;xs:complexType name="attributableDuration"&gt;

    &lt;xs:simpleContent&gt;
      &lt;xs:extension base="xs:duration"&gt;
        &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:simpleContent&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:element name="OperationTimeout" type="wsman:attributableDuration"/&gt;

  &lt;xs:complexType name="attributablePositiveInteger"&gt;

    &lt;xs:simpleContent&gt;
      &lt;xs:extension base="xs:positiveInteger"&gt;
        &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:simpleContent&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:simpleType name="PolicyType"&gt;
    &lt;xs:restriction base="xs:token"&gt;

      &lt;xs:enumeration value="CancelSubscription"/&gt;
      &lt;xs:enumeration value="Skip"/&gt;
      &lt;xs:enumeration value="Notify"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;

  &lt;xs:complexType name="MaxEnvelopeSizeType"&gt;
    &lt;xs:simpleContent&gt;
      &lt;xs:extension base="wsman:attributablePositiveInteger"&gt;

        &lt;xs:attribute name="Policy" type="wsman:PolicyType" default="Notify"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:simpleContent&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:element name="MaxEnvelopeSize" type="wsman:MaxEnvelopeSizeType"/&gt;

  &lt;xs:element name="Locale"&gt;
    &lt;xs:complexType&gt;
      &lt;xs:attribute ref="xml:lang" use="required"/&gt;

      &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
    &lt;/xs:complexType&gt;
  &lt;/xs:element&gt;

  &lt;xs:complexType name="OptionType"&gt;
    &lt;xs:simpleContent&gt;
      &lt;xs:extension base="xs:string"&gt;
        &lt;xs:attribute name="Name" type="xs:NCName" use="required"/&gt;
        &lt;xs:attribute name="MustComply" type="xs:boolean" default="false"/&gt;

        &lt;xs:attribute name="Type" type="xs:QName"/&gt;
        &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:simpleContent&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:element name="Option" type="wsman:OptionType"/&gt;

  &lt;xs:element name="OptionSet"&gt;
    &lt;xs:complexType&gt;

      &lt;xs:sequence&gt;
        &lt;xs:element ref="wsman:Option" minOccurs="0" maxOccurs="unbounded"/&gt;
      &lt;/xs:sequence&gt;
      &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
    &lt;/xs:complexType&gt;
  &lt;/xs:element&gt;

  &lt;xs:complexType name="attributableEmpty"&gt;
    &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;

  &lt;/xs:complexType&gt;

  &lt;xs:element name="RequestEPR" type="wsman:attributableEmpty"/&gt;
  &lt;xs:element name="EPRInvalid" type="wsman:attributableEmpty"/&gt;
  &lt;xs:element name="EPRUnknown" type="wsman:attributableEmpty"/&gt;

  &lt;xs:complexType name="RequestedEPRType"&gt;
    &lt;xs:choice&gt;
      &lt;xs:element ref="wsa:EndpointReference"/&gt;
      &lt;xs:element ref="wsman:EPRInvalid"/&gt;

      &lt;xs:element ref="wsman:EPRUnknown"/&gt;
    &lt;/xs:choice&gt;
    &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:element name="RequestedEPR" type="wsman:RequestedEPRType"/&gt;

  &lt;xs:complexType name="mixedDataType"&gt;
    &lt;xs:complexContent mixed="true"&gt;
      &lt;xs:restriction base="xs:anyType"&gt;

        &lt;xs:sequence&gt;
          &lt;xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded" processContents="skip"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
      &lt;/xs:restriction&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:complexType name="fragmentMixedDataType"&gt;

    &lt;xs:complexContent mixed="true"&gt;
      &lt;xs:extension base="wsman:mixedDataType"&gt;
        &lt;xs:attribute name="Dialect" type="xs:anyURI" default="http://www.w3.org/TR/1999/REC-xpath-19991116"/&gt;
        &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:element name="FragmentTransfer" type="wsman:fragmentMixedDataType"/&gt;
  &lt;xs:element name="XmlFragment" type="wsman:mixedDataType"/&gt;

  &lt;xs:complexType name="attributableNonNegativeInteger"&gt;
    &lt;xs:simpleContent&gt;
      &lt;xs:extension base="xs:nonNegativeInteger"&gt;
        &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:simpleContent&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:element name="TotalItemsCountEstimate" type="wsman:attributableNonNegativeInteger" nillable="true"/&gt;

  &lt;xs:element name="RequestTotalItemsCountEstimate" type="wsman:attributableEmpty"/&gt;

  &lt;xs:element name="OptimizeEnumeration" type="wsman:attributableEmpty"/&gt;
  &lt;xs:element name="MaxElements" type="wsman:attributablePositiveInteger"/&gt;

  &lt;xs:simpleType name="EnumerationModeType"&gt;
    &lt;xs:restriction base="xs:token"&gt;
      &lt;xs:enumeration value="EnumerateEPR"/&gt;
      &lt;xs:enumeration value="EnumerateObjectAndEPR"/&gt;
    &lt;/xs:restriction&gt;

  &lt;/xs:simpleType&gt;
  &lt;xs:element name="EnumerationMode" type="wsman:EnumerationModeType"/&gt;

  &lt;xs:complexType name="mixedDataFilterType" mixed="true"&gt;
    &lt;xs:complexContent mixed="true"&gt;
      &lt;xs:restriction base="xs:anyType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:any namespace="##any" processContents="skip" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;

        &lt;xs:anyAttribute namespace="##any" processContents="lax"/&gt;
      &lt;/xs:restriction&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:complexType name="filterMixedDataType" mixed="true"&gt;
    &lt;xs:complexContent mixed="true"&gt;
      &lt;xs:extension base="wsman:mixedDataFilterType"&gt;
        &lt;xs:attribute name="Dialect" type="xs:anyURI" default="http://www.w3.org/TR/1999/REC-xpath-19991116"/&gt;

        &lt;xs:anyAttribute namespace="##any" processContents="lax"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:element name="Filter" type="wsman:filterMixedDataType"/&gt;

  &lt;xs:complexType name="ObjectAndEPRType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:any namespace="##any" processContents="lax"/&gt;

      &lt;xs:element ref="wsa:EndpointReference"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:element name="Item" type="wsman:ObjectAndEPRType"/&gt;

  &lt;xs:complexType name="anyListType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
    &lt;/xs:sequence&gt;

    &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:element name="Items" type="wsman:anyListType"/&gt;
  &lt;xs:element name="EndOfSequence" type="wsman:attributableEmpty"/&gt;

  &lt;xs:complexType name="attributableLanguage"&gt;
    &lt;xs:simpleContent&gt;
      &lt;xs:extension base="xs:language"&gt;
        &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;

      &lt;/xs:extension&gt;
    &lt;/xs:simpleContent&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:element name="ContentEncoding" type="wsman:attributableLanguage"/&gt;

  &lt;xs:complexType name="ConnectionRetryType"&gt;
    &lt;xs:simpleContent&gt;
      &lt;xs:extension base="wsman:attributableDuration"&gt;
        &lt;xs:attribute name="Total" type="xs:unsignedLong"/&gt;

      &lt;/xs:extension&gt;
    &lt;/xs:simpleContent&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:element name="ConnectionRetry" type="wsman:ConnectionRetryType"/&gt;

  &lt;xs:element name="Heartbeats" type="wsman:attributableDuration"/&gt;
  &lt;xs:element name="SendBookmarks" type="wsman:attributableEmpty"/&gt;

  &lt;xs:complexType name="attributableAny"&gt;
    &lt;xs:sequence&gt;

      &lt;xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:element name="Bookmark" type="wsman:mixedDataType"/&gt;
  &lt;xs:element name="MaxTime" type="wsman:attributableDuration"/&gt;

  &lt;xs:complexType name="EventType"&gt;
    &lt;xs:complexContent&gt;

      &lt;xs:extension base="wsman:attributableAny"&gt;
        &lt;xs:attribute name="Action" type="xs:anyURI" use="required"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:element name="Event" type="wsman:EventType"/&gt;

  &lt;xs:complexType name="EventsType"&gt;
    &lt;xs:sequence&gt;

      &lt;xs:element ref="wsman:Event" minOccurs="1" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:element name="Events" type="wsman:EventsType"/&gt;

  &lt;xs:element name="AckRequested" type="wsman:attributableEmpty"/&gt;

  &lt;xs:complexType name="attributableInt"&gt;
    &lt;xs:simpleContent&gt;

      &lt;xs:extension base="xs:int"&gt;
        &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:simpleContent&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:complexType name="DroppedEventsType"&gt;
    &lt;xs:simpleContent&gt;
      &lt;xs:extension base="wsman:attributableInt"&gt;

        &lt;xs:attribute name="Action" type="xs:anyURI" use="required"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:simpleContent&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:element name="DroppedEvents" type="wsman:DroppedEventsType"/&gt;

  &lt;xs:simpleType name="restrictedProfileType"&gt;
    &lt;xs:restriction base="xs:anyURI"&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/secprofile/http/basic"/&gt;

      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/secprofile/http/digest"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/secprofile/https/basic"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/secprofile/https/digest"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/secprofile/https/mutual"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/secprofile/https/mutual/basic"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/secprofile/https/mutual/digest"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/secprofile/https/spnego-kerberos"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/secprofile/https/mutual/spnego-kerberos"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/secprofile/http/spnego-kerberos"/&gt;

    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;

  &lt;xs:simpleType name="ProfileType"&gt;
    &lt;xs:union memberTypes="wsman:restrictedProfileType xs:anyURI"/&gt;
  &lt;/xs:simpleType&gt;

  &lt;xs:complexType name="AuthType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="wsman:attributableEmpty"&gt;

        &lt;xs:attribute name="Profile" type="wsman:ProfileType" use="required"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:element name="Auth" type="wsman:AuthType"/&gt;

  &lt;xs:simpleType name="ThumbprintType"&gt;
      &lt;xs:restriction base="xs:string"&gt;
          &lt;xs:pattern value="[0-9a-fA-F]{40}"/&gt;

      &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
  &lt;xs:element name="CertificateThumbprint" type="wsman:ThumbprintType"/&gt;


  &lt;xs:simpleType name="restrictedFaultDetailType"&gt;
    &lt;xs:restriction base="xs:anyURI"&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/ActionMismatch"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/Ack"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/AddressingMode"/&gt;

      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/AsynchronousRequest"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/Bookmarks"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/CharacterSet"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/DeliveryRetries"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/DuplicateSelectors"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/EncodingType"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/EnumerationMode"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/ExpirationTime"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/Expired"/&gt;

      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/FilteringRequired"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/FormatMismatch"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/FragmentLevelAccess"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/Heartbeats"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/InsecureAddress"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/InsufficientSelectors"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/Invalid"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/InvalidName"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/InvalidFragment"/&gt;

      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/InvalidNamespace"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/InvalidResourceURI"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/InvalidValue"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/InvalidValues"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/Locale"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/MaxElements"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/MaxEnvelopePolicy"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/MaxEnvelopeSize"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/MaxTime"/&gt;

      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/MinimumEnvelopeLimit"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/MissingValues"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/NotSupported"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/OperationTimeout"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/OptionLimit"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/ResourceOffline"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/SelectorLimit"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/ServiceEnvelopeLimit"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/TypeMismatch"/&gt;

      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/UnexpectedSelectors"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/UnreportableSuccess"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/UnsupportedCharacter"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/UnusableAddress"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/URILimitExceeded"/&gt;
      &lt;xs:enumeration value="http://schemas.dmtf.org/wbem/wsman/1/wsman/faultDetail/Whitespace"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;

  &lt;xs:simpleType name="FaultDetailType"&gt;
    &lt;xs:union memberTypes="wsman:restrictedFaultDetailType xs:anyURI"/&gt;
  &lt;/xs:simpleType&gt;

  &lt;xs:element name="FaultDetail" type="wsman:FaultDetailType"/&gt;
  &lt;xs:element name="FragmentDialect" type="wsman:attributableURI"/&gt;
  &lt;xs:element name="SupportedSelectorName" type="xs:NCName"/&gt;

  &lt;!-- Master Fault Table subcode QNames --&gt;
  &lt;xs:element name="AccessDenied"&gt;&lt;xs:complexType/&gt;&lt;/xs:element&gt;

  &lt;xs:element name="AlreadyExists"&gt;&lt;xs:complexType/&gt;&lt;/xs:element&gt;
  &lt;xs:element name="CannotProcessFilter"&gt;&lt;xs:complexType/&gt;&lt;/xs:element&gt;
  &lt;xs:element name="Concurrency"&gt;&lt;xs:complexType/&gt;&lt;/xs:element&gt;
  &lt;xs:element name="DeliveryRefused"&gt;&lt;xs:complexType/&gt;&lt;/xs:element&gt;
  &lt;xs:element name="EncodingLimit"&gt;&lt;xs:complexType/&gt;&lt;/xs:element&gt;
  &lt;xs:element name="EventDeliverToUnusable"&gt;&lt;xs:complexType/&gt;&lt;/xs:element&gt;
  &lt;xs:element name="FragmentDialectNotSupported"&gt;&lt;xs:complexType/&gt;&lt;/xs:element&gt;
  &lt;xs:element name="InternalError"&gt;&lt;xs:complexType/&gt;&lt;/xs:element&gt;
  &lt;xs:element name="InvalidBookmark"&gt;&lt;xs:complexType/&gt;&lt;/xs:element&gt;

  &lt;xs:element name="InvalidOptions"&gt;&lt;xs:complexType/&gt;&lt;/xs:element&gt;
  &lt;xs:element name="InvalidParameter"&gt;&lt;xs:complexType/&gt;&lt;/xs:element&gt;
  &lt;xs:element name="InvalidSelectors"&gt;&lt;xs:complexType/&gt;&lt;/xs:element&gt;
  &lt;xs:element name="NoAck"&gt;&lt;xs:complexType/&gt;&lt;/xs:element&gt;
  &lt;xs:element name="QuotaLimit"&gt;&lt;xs:complexType/&gt;&lt;/xs:element&gt;
  &lt;xs:element name="SchemaValidationError"&gt;&lt;xs:complexType/&gt;&lt;/xs:element&gt;
  &lt;xs:element name="TimedOut"&gt;&lt;xs:complexType/&gt;&lt;/xs:element&gt;
  &lt;xs:element name="UnsupportedFeature"&gt;&lt;xs:complexType/&gt;&lt;/xs:element&gt;

&lt;/xs:schema&gt;</l7:Resource>
                            <l7:Resource sourceUrl="http://schemas.xmlsoap.org/ws/2004/08/eventing/eventing.xsd" type="xmlschema">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&#13;
&lt;!-- &#13;
(c) 2004 BEA Systems Inc., International Business Machines Corporation, Microsoft Corporation, Inc, Sun Microsystems, Inc, and TIBCO Software Inc. All rights reserved.&#13;
&#13;
BEA Systems Inc., International Business Machines Corporation, Microsoft Corporation, Inc, Sun Microsystems, Inc, and TIBCO Software Inc (collectively, the "Authors") hereby grant you permission to copy and display the WS-Eventing Specification (the "Specification", which includes WSDL and schema documents), in any medium without fee or royalty, provided that you include the following on ALL copies of the Specification, that you make:&#13;
&#13;
1.	A link or URL to the WS-Eventing Specification at one of the Authors' websites &#13;
2.	The copyright notice as shown in the WS-Eventing Specification. &#13;
&#13;
BEA, IBM, Microsoft, Sun, and TIBCO (collectively, the "Authors") each agree to grant you a license, under royalty-free and otherwise reasonable, non-discriminatory terms and conditions, to their respective essential patent claims that they deem necessary to implement the Specification. &#13;
&#13;
THE SPECIFICATION IS PROVIDED "AS IS," AND THE AUTHORS MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THE SPECIFICATION ARE SUITABLE FOR ANY PURPOSE; NOR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY THIRD PARTY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS. &#13;
&#13;
THE AUTHORS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THE SPECIFICATION. &#13;
&#13;
The name and trademarks of the Authors may NOT be used in any manner, including advertising or publicity pertaining to the Specification or its contents without specific, written prior permission. Title to copyright in the Specification will at all times remain with the Authors. &#13;
&#13;
No other rights are granted by implication, estoppel or otherwise.&#13;
--&gt;&#13;
&lt;xs:schema&#13;
  targetNamespace="http://schemas.xmlsoap.org/ws/2004/08/eventing" &#13;
  xmlns:tns="http://schemas.xmlsoap.org/ws/2004/08/eventing"&#13;
  xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing"&#13;
  xmlns:xs="http://www.w3.org/2001/XMLSchema" &#13;
  elementFormDefault="qualified" &#13;
  blockDefault="#all"&gt;&#13;
  &#13;
  &lt;xs:import namespace="http://www.w3.org/XML/1998/namespace"&#13;
	schemaLocation="http://www.w3.org/2001/xml.xsd" /&gt;&#13;
&#13;
  &lt;xs:import namespace="http://schemas.xmlsoap.org/ws/2004/08/addressing" &#13;
	schemaLocation="http://schemas.xmlsoap.org/ws/2004/08/addressing/addressing.xsd" /&gt;&#13;
&#13;
  &lt;!-- Types and global elements --&gt;&#13;
  &lt;xs:complexType name="DeliveryType" mixed="true"&gt;&#13;
    &lt;xs:sequence&gt;&#13;
      &lt;xs:any namespace="##any" processContents="lax" &#13;
        minOccurs="0" maxOccurs="unbounded" /&gt;&#13;
    &lt;/xs:sequence&gt;&#13;
    &lt;xs:attribute name="Mode" type="xs:anyURI" use="optional" /&gt;&#13;
    &lt;xs:anyAttribute namespace="##other" processContents="lax" /&gt;&#13;
  &lt;/xs:complexType&gt;&#13;
&#13;
  &lt;xs:element name="NotifyTo" type="wsa:EndpointReferenceType" /&gt;&#13;
&#13;
  &lt;xs:simpleType name="NonNegativeDurationType"&gt;&#13;
    &lt;xs:restriction base="xs:duration"&gt;&#13;
      &lt;xs:minInclusive value="P0Y0M0DT0H0M0S" /&gt;&#13;
    &lt;/xs:restriction&gt;&#13;
  &lt;/xs:simpleType&gt;&#13;
&#13;
  &lt;xs:simpleType name="ExpirationType"&gt;&#13;
      &lt;xs:union memberTypes="xs:dateTime tns:NonNegativeDurationType" /&gt;&#13;
  &lt;/xs:simpleType&gt;&#13;
&#13;
  &lt;xs:complexType name="FilterType" mixed="true"&gt;&#13;
    &lt;xs:sequence&gt;&#13;
      &lt;xs:any namespace="##other" processContents="lax" &#13;
        minOccurs="0" maxOccurs="unbounded" /&gt;&#13;
    &lt;/xs:sequence&gt;&#13;
    &lt;xs:attribute name="Dialect" type="xs:anyURI" use="optional" /&gt;&#13;
    &lt;xs:anyAttribute namespace="##other" processContents="lax" /&gt;&#13;
  &lt;/xs:complexType&gt;&#13;
&#13;
  &lt;xs:complexType name="LanguageSpecificStringType"&gt;&#13;
    &lt;xs:simpleContent&gt;&#13;
      &lt;xs:extension base="xs:string"&gt;&#13;
        &lt;xs:attribute ref="xml:lang" /&gt;&#13;
        &lt;xs:anyAttribute namespace="##other" processContents="lax" /&gt;&#13;
      &lt;/xs:extension&gt;&#13;
    &lt;/xs:simpleContent&gt;&#13;
  &lt;/xs:complexType&gt;&#13;
&#13;
  &lt;!-- Subscribe request --&gt;&#13;
  &lt;xs:element name="Subscribe"&gt;&#13;
    &lt;xs:complexType&gt;&#13;
      &lt;xs:sequence&gt;&#13;
        &lt;xs:element name="EndTo" type="wsa:EndpointReferenceType" &#13;
          minOccurs="0" /&gt;&#13;
        &lt;xs:element name="Delivery" type="tns:DeliveryType" /&gt;&#13;
        &lt;xs:element name="Expires" type="tns:ExpirationType" &#13;
          minOccurs="0" /&gt;&#13;
        &lt;xs:element name="Filter" type="tns:FilterType" minOccurs="0" /&gt;&#13;
        &lt;xs:any namespace="##other" processContents="lax" &#13;
          minOccurs="0" maxOccurs="unbounded" /&gt;&#13;
      &lt;/xs:sequence&gt;&#13;
      &lt;xs:anyAttribute namespace="##other" processContents="lax" /&gt;&#13;
    &lt;/xs:complexType&gt;&#13;
  &lt;/xs:element&gt;&#13;
&#13;
  &lt;xs:element name="Identifier" type="xs:anyURI" /&gt;&#13;
 &#13;
  &lt;!-- Subscribe response --&gt;&#13;
  &lt;xs:element name="SubscribeResponse"&gt;&#13;
    &lt;xs:complexType&gt;&#13;
      &lt;xs:sequence&gt;&#13;
	  &lt;xs:element name="SubscriptionManager" &#13;
                    type="wsa:EndpointReferenceType" /&gt;&#13;
        &lt;xs:element name="Expires" type="tns:ExpirationType" /&gt;&#13;
        &lt;xs:any namespace="##other" processContents="lax" &#13;
          minOccurs="0" maxOccurs="unbounded" /&gt;&#13;
      &lt;/xs:sequence&gt;&#13;
      &lt;xs:anyAttribute namespace="##other" processContents="lax" /&gt;&#13;
    &lt;/xs:complexType&gt;&#13;
  &lt;/xs:element&gt;&#13;
&#13;
  &lt;!-- Used in a fault if there's an unsupported dialect --&gt;&#13;
  &lt;xs:element name="SupportedDialect" type="xs:anyURI" /&gt;&#13;
&#13;
  &lt;!-- Used in a fault if there's an unsupported delivery mode --&gt;&#13;
  &lt;xs:element name="SupportedDeliveryMode" type="xs:anyURI" /&gt;&#13;
&#13;
  &lt;!-- Renew request --&gt;&#13;
  &lt;xs:element name="Renew"&gt;&#13;
    &lt;xs:complexType&gt;&#13;
      &lt;xs:sequence&gt;&#13;
        &lt;xs:element name="Expires" type="tns:ExpirationType" &#13;
          minOccurs="0" /&gt;&#13;
        &lt;xs:any namespace="##other" processContents="lax" &#13;
          minOccurs="0" maxOccurs="unbounded" /&gt;&#13;
      &lt;/xs:sequence&gt;&#13;
      &lt;xs:anyAttribute namespace="##other" processContents="lax" /&gt;&#13;
    &lt;/xs:complexType&gt;&#13;
  &lt;/xs:element&gt;&#13;
&#13;
  &lt;!-- Renew response --&gt;&#13;
  &lt;xs:element name="RenewResponse"&gt;&#13;
    &lt;xs:complexType&gt;&#13;
      &lt;xs:sequence&gt;&#13;
        &lt;xs:element name="Expires" type="tns:ExpirationType" &#13;
          minOccurs="0" /&gt;&#13;
        &lt;xs:any namespace="##other" processContents="lax" &#13;
          minOccurs="0" maxOccurs="unbounded" /&gt;&#13;
      &lt;/xs:sequence&gt;&#13;
      &lt;xs:anyAttribute namespace="##other" processContents="lax" /&gt;&#13;
    &lt;/xs:complexType&gt;&#13;
  &lt;/xs:element&gt;&#13;
&#13;
  &lt;!-- GetStatus request --&gt;&#13;
  &lt;xs:element name="GetStatus"&gt;&#13;
    &lt;xs:complexType&gt;&#13;
      &lt;xs:sequence&gt;&#13;
        &lt;xs:any namespace="##other" processContents="lax" &#13;
          minOccurs="0" maxOccurs="unbounded" /&gt;&#13;
      &lt;/xs:sequence&gt;&#13;
      &lt;xs:anyAttribute namespace="##other" processContents="lax" /&gt;&#13;
    &lt;/xs:complexType&gt;&#13;
  &lt;/xs:element&gt;&#13;
&#13;
  &lt;!-- GetStatus response --&gt;&#13;
  &lt;xs:element name="GetStatusResponse"&gt;&#13;
    &lt;xs:complexType&gt;&#13;
      &lt;xs:sequence&gt;&#13;
        &lt;xs:element name="Expires" type="tns:ExpirationType" &#13;
          minOccurs="0" /&gt;&#13;
        &lt;xs:any namespace="##other" processContents="lax" &#13;
          minOccurs="0" maxOccurs="unbounded" /&gt;&#13;
      &lt;/xs:sequence&gt;&#13;
      &lt;xs:anyAttribute namespace="##other" processContents="lax" /&gt;&#13;
    &lt;/xs:complexType&gt;&#13;
  &lt;/xs:element&gt;&#13;
&#13;
  &lt;!-- Unsubscribe request --&gt;&#13;
  &lt;xs:element name="Unsubscribe"&gt;&#13;
    &lt;xs:complexType&gt;&#13;
      &lt;xs:sequence&gt;&#13;
        &lt;xs:any namespace="##other" processContents="lax" &#13;
          minOccurs="0" maxOccurs="unbounded" /&gt;&#13;
      &lt;/xs:sequence&gt;&#13;
      &lt;xs:anyAttribute namespace="##other" processContents="lax" /&gt;&#13;
    &lt;/xs:complexType&gt;&#13;
  &lt;/xs:element&gt;&#13;
&#13;
  &lt;!-- count(/s:Envelope/s:Body/*) = 0 for Unsubscribe response --&gt;&#13;
&#13;
  &lt;!-- SubscriptionEnd message --&gt;&#13;
  &lt;xs:element name="SubscriptionEnd"&gt;&#13;
    &lt;xs:complexType&gt;&#13;
      &lt;xs:sequence&gt;&#13;
        &lt;xs:element name="SubscriptionManager" &#13;
                    type="wsa:EndpointReferenceType" /&gt;&#13;
        &lt;xs:element name="Status" type="tns:OpenSubscriptionEndCodeType" /&gt;&#13;
        &lt;xs:element name="Reason" type="tns:LanguageSpecificStringType" &#13;
          minOccurs="0" maxOccurs="unbounded" /&gt;&#13;
        &lt;xs:any namespace="##other" processContents="lax" &#13;
          minOccurs="0" maxOccurs="unbounded" /&gt;&#13;
      &lt;/xs:sequence&gt;&#13;
      &lt;xs:anyAttribute namespace="##other" processContents="lax" /&gt;&#13;
    &lt;/xs:complexType&gt;&#13;
  &lt;/xs:element&gt;&#13;
&#13;
  &lt;xs:simpleType name="SubscriptionEndCodeType"&gt;&#13;
    &lt;xs:restriction base="xs:anyURI"&gt;&#13;
      &lt;xs:enumeration value="http://schemas.xmlsoap.org/ws/2004/08/eventing/DeliveryFailure" /&gt;&#13;
      &lt;xs:enumeration value="http://schemas.xmlsoap.org/ws/2004/08/eventing/SourceShuttingDown" /&gt;&#13;
      &lt;xs:enumeration value="http://schemas.xmlsoap.org/ws/2004/08/eventing/SourceCancelling" /&gt;&#13;
    &lt;/xs:restriction&gt;&#13;
  &lt;/xs:simpleType&gt;&#13;
&#13;
  &lt;xs:simpleType name="OpenSubscriptionEndCodeType"&gt;&#13;
    &lt;xs:union memberTypes="tns:SubscriptionEndCodeType xs:anyURI" /&gt;&#13;
  &lt;/xs:simpleType&gt;&#13;
&#13;
  &lt;xs:attribute name="EventSource" type="xs:boolean" /&gt;&#13;
&#13;
&lt;/xs:schema&gt;&#13;
</l7:Resource>
                            <l7:Resource sourceUrl="http://schemas.xmlsoap.org/ws/2004/09/enumeration/enumeration.wsdl" type="wsdl">&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#13;
&lt;!-- &#13;
(c) 2004 BEA Systems Inc., Computer Associates, Microsoft Corporation, Inc., Sonic Software, and Systinet Corporation. All rights reserved.&#13;
&#13;
Permission to copy and display the WS-Enumeration (the "Specification", which includes WSDL and schema documents), in any medium without fee or royalty is hereby granted, provided that you include the following on ALL copies of the Specification that you make:&#13;
&#13;
1.	A link or URL to the Specification at one of the Co-Developers' websites.&#13;
2.	The copyright notice as shown in the Specification.&#13;
&#13;
BEA Systems, Computer Associates, Microsoft, Sonic Software, and Systinet (collectively, the "Co-Developers") each agree to grant you a license, under royalty-free and otherwise reasonable, non-discriminatory terms and conditions, to their respective essential patent claims that they deem necessary to implement the Specification.&#13;
&#13;
THE SPECIFICATION IS PROVIDED "AS IS," AND THE CO-DEVELOPERS MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THE SPECIFICATION ARE SUITABLE FOR ANY PURPOSE; NOR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY THIRD PARTY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.&#13;
&#13;
THE CO-DEVELOPERS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THE SPECIFICATIONS.&#13;
&#13;
The name and trademarks of the Co-Developers may NOT be used in any manner, including advertising or publicity pertaining to the Specifications or their contents without specific, written prior permission. Title to copyright in the Specifications will at all times remain with the Co-Developers.&#13;
No other rights are granted by implication, estoppel or otherwise.&#13;
--&gt;&#13;
&lt;wsdl:definitions&#13;
    targetNamespace="http://schemas.xmlsoap.org/ws/2004/09/enumeration" &#13;
    xmlns:wsen="http://schemas.xmlsoap.org/ws/2004/09/enumeration"&#13;
    xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing" &#13;
    xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" &#13;
    xmlns:xs="http://www.w3.org/2001/XMLSchema" &gt;&#13;
&#13;
  &lt;wsdl:types&gt;&#13;
    &lt;xs:schema&gt;&#13;
      &lt;xs:import&#13;
        namespace="http://schemas.xmlsoap.org/ws/2004/09/enumeration"&#13;
        schemaLocation="http://schemas.xmlsoap.org/ws/2004/09/enumeration/enumeration.xsd" /&gt;&#13;
    &lt;/xs:schema&gt;&#13;
  &lt;/wsdl:types&gt;&#13;
&#13;
  &lt;wsdl:message name="EnumerateMessage"&gt;&#13;
    &lt;wsdl:part name="Body" element="wsen:Enumerate" /&gt;&#13;
  &lt;/wsdl:message&gt;&#13;
  &lt;wsdl:message name="EnumerateResponseMessage"&gt;&#13;
    &lt;wsdl:part name="Body" element="wsen:EnumerateResponse" /&gt;&#13;
  &lt;/wsdl:message&gt;&#13;
  &lt;wsdl:message name="PullMessage"&gt;&#13;
    &lt;wsdl:part name="Body" element="wsen:Pull" /&gt;&#13;
  &lt;/wsdl:message&gt;&#13;
  &lt;wsdl:message name="PullResponseMessage"&gt;&#13;
    &lt;wsdl:part name="Body" element="wsen:PullResponse" /&gt;&#13;
  &lt;/wsdl:message&gt;&#13;
  &lt;wsdl:message name="RenewMessage" &gt;&#13;
    &lt;wsdl:part name="Body" element="wsen:Renew" /&gt;&#13;
  &lt;/wsdl:message&gt;&#13;
  &lt;wsdl:message name="RenewResponseMessage" &gt;&#13;
    &lt;wsdl:part name="Body" element="wsen:RenewResponse" /&gt;&#13;
  &lt;/wsdl:message&gt;&#13;
  &lt;wsdl:message name="GetStatusMessage" &gt;&#13;
    &lt;wsdl:part name="Body" element="wsen:GetStatus" /&gt;&#13;
  &lt;/wsdl:message&gt;&#13;
  &lt;wsdl:message name="GetStatusResponseMessage" &gt;&#13;
    &lt;wsdl:part name="Body" element="wsen:GetStatusResponse" /&gt;&#13;
  &lt;/wsdl:message&gt;&#13;
  &lt;wsdl:message name="ReleaseMessage"&gt;&#13;
    &lt;wsdl:part name="Body" element="wsen:Release" /&gt;&#13;
  &lt;/wsdl:message&gt;&#13;
  &lt;wsdl:message name="ReleaseResponseMessage" /&gt;&#13;
  &lt;wsdl:message name="EnumerationEndMessage" &gt;&#13;
    &lt;wsdl:part name="Body" element="wsen:EnumerationEnd" /&gt;&#13;
  &lt;/wsdl:message&gt;&#13;
&#13;
  &lt;wsdl:portType name="DataSource"&gt;&#13;
    &lt;wsdl:operation name="EnumerateOp"&gt;&#13;
      &lt;wsdl:input &#13;
        message="wsen:EnumerateMessage" &#13;
        wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/Enumerate"&#13;
        /&gt;&#13;
      &lt;wsdl:output &#13;
        message="wsen:EnumerateResponseMessage" &#13;
        wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/EnumerateResponse"&#13;
        /&gt;&#13;
    &lt;/wsdl:operation&gt;&#13;
    &lt;wsdl:operation name="PullOp"&gt;&#13;
      &lt;wsdl:input &#13;
        message="wsen:PullMessage" &#13;
        wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/Pull"&#13;
        /&gt;&#13;
      &lt;wsdl:output &#13;
        message="wsen:PullResponseMessage"&#13;
        wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/PullResponse"&#13;
        /&gt;&#13;
    &lt;/wsdl:operation&gt;&#13;
    &lt;wsdl:operation name="RenewOp" &gt;&#13;
      &lt;wsdl:input &#13;
        message="wsen:RenewMessage"&#13;
        wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/Renew"&#13;
        /&gt;&#13;
      &lt;wsdl:output &#13;
        message="wsen:RenewResponseMessage"&#13;
        wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/RenewResponse"&#13;
        /&gt;&#13;
    &lt;/wsdl:operation&gt;&#13;
    &lt;wsdl:operation name="GetStatusOp" &gt;&#13;
      &lt;wsdl:input &#13;
        message="wsen:GetStatusMessage"&#13;
        wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/GetStatus"&#13;
        /&gt;&#13;
      &lt;wsdl:output &#13;
        message="wsen:GetStatusResponseMessage" &#13;
        wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/GetStatusResponse"&#13;
        /&gt;&#13;
    &lt;/wsdl:operation&gt;&#13;
    &lt;wsdl:operation name="ReleaseOp"&gt;&#13;
      &lt;wsdl:input &#13;
        message="wsen:ReleaseMessage" &#13;
        wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/Release"&#13;
        /&gt;&#13;
      &lt;wsdl:output &#13;
        message="wsen:ReleaseResponseMessage" &#13;
        wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/ReleaseResponse"&#13;
        /&gt;&#13;
    &lt;/wsdl:operation&gt;&#13;
    &lt;wsdl:operation name="EnumerationEndOp" &gt;&#13;
      &lt;wsdl:output &#13;
        message="wsen:EnumerationEndMessage" &#13;
        wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/EnumerationEnd"&#13;
        /&gt;&#13;
    &lt;/wsdl:operation&gt;&#13;
  &lt;/wsdl:portType&gt;&#13;
&lt;/wsdl:definitions&gt;</l7:Resource>
                            <l7:Resource sourceUrl="http://schemas.xmlsoap.org/ws/2004/09/enumeration/enumeration.xsd" type="xmlschema">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&#13;
&lt;!-- &#13;
(c) 2004 BEA Systems Inc., Computer Associates, Microsoft Corporation, Inc., Sonic Software, and Systinet Corporation. All rights reserved.&#13;
&#13;
Permission to copy and display the WS-Enumeration (the "Specification", which includes WSDL and schema documents), in any medium without fee or royalty is hereby granted, provided that you include the following on ALL copies of the Specification that you make:&#13;
&#13;
1.	A link or URL to the Specification at one of the Co-Developers' websites.&#13;
2.	The copyright notice as shown in the Specification.&#13;
&#13;
BEA Systems, Computer Associates, Microsoft, Sonic Software, and Systinet (collectively, the "Co-Developers") each agree to grant you a license, under royalty-free and otherwise reasonable, non-discriminatory terms and conditions, to their respective essential patent claims that they deem necessary to implement the Specification.&#13;
&#13;
THE SPECIFICATION IS PROVIDED "AS IS," AND THE CO-DEVELOPERS MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THE SPECIFICATION ARE SUITABLE FOR ANY PURPOSE; NOR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY THIRD PARTY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.&#13;
&#13;
THE CO-DEVELOPERS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THE SPECIFICATIONS.&#13;
&#13;
The name and trademarks of the Co-Developers may NOT be used in any manner, including advertising or publicity pertaining to the Specifications or their contents without specific, written prior permission. Title to copyright in the Specifications will at all times remain with the Co-Developers.&#13;
No other rights are granted by implication, estoppel or otherwise.&#13;
--&gt;&#13;
&lt;xs:schema&#13;
	targetNamespace="http://schemas.xmlsoap.org/ws/2004/09/enumeration"&#13;
	xmlns:tns="http://schemas.xmlsoap.org/ws/2004/09/enumeration"&#13;
	xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing"&#13;
	xmlns:xs="http://www.w3.org/2001/XMLSchema" &#13;
	elementFormDefault="qualified" &#13;
	blockDefault="#all"&gt;&#13;
&#13;
	&lt;xs:import namespace='http://www.w3.org/XML/1998/namespace' &#13;
                   schemaLocation="http://www.w3.org/2001/xml.xsd"/&gt;&#13;
	&lt;xs:import namespace="http://schemas.xmlsoap.org/ws/2004/08/addressing" &#13;
                   schemaLocation="http://schemas.xmlsoap.org/ws/2004/08/addressing/addressing.xsd"/&gt;&#13;
&#13;
	&lt;!-- Types and global elements --&gt;&#13;
	&lt;xs:complexType name="FilterType" mixed="true"&gt;&#13;
		&lt;xs:sequence&gt;&#13;
			&lt;xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" /&gt;&#13;
		&lt;/xs:sequence&gt;&#13;
		&lt;xs:attribute name="Dialect" type="xs:anyURI" /&gt;&#13;
		&lt;xs:anyAttribute namespace="##other" processContents="lax" /&gt;&#13;
	&lt;/xs:complexType&gt;&#13;
	&#13;
	&lt;xs:simpleType name="PositiveDurationType"&gt;&#13;
		&lt;xs:restriction base="xs:duration"&gt;&#13;
			&lt;xs:minExclusive value="P0Y0M0DT0H0M0S" /&gt;&#13;
		&lt;/xs:restriction&gt;&#13;
	&lt;/xs:simpleType&gt;&#13;
&#13;
	&lt;xs:simpleType name="NonNegativeDurationType"&gt;&#13;
		&lt;xs:restriction base="xs:duration"&gt;&#13;
			&lt;xs:minInclusive value="P0Y0M0DT0H0M0S" /&gt;&#13;
		&lt;/xs:restriction&gt;&#13;
	&lt;/xs:simpleType&gt;&#13;
&#13;
	&lt;xs:simpleType name="ExpirationType"&gt;&#13;
		&lt;xs:union memberTypes="xs:dateTime tns:NonNegativeDurationType" /&gt;&#13;
	&lt;/xs:simpleType&gt;&#13;
&#13;
	&lt;xs:complexType name="EnumerationContextType"&gt;&#13;
		&lt;xs:complexContent mixed="true"&gt;&#13;
			&lt;xs:restriction base="xs:anyType"&gt;&#13;
				&lt;xs:sequence&gt;&#13;
					&lt;xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" /&gt;&#13;
				&lt;/xs:sequence&gt;&#13;
				&lt;xs:anyAttribute namespace="##other" processContents="lax" /&gt;&#13;
			&lt;/xs:restriction&gt;&#13;
		&lt;/xs:complexContent&gt;&#13;
	&lt;/xs:complexType&gt;&#13;
	&#13;
	&lt;xs:complexType name="ItemListType"&gt;&#13;
		&lt;xs:sequence maxOccurs="unbounded"&gt;&#13;
			&lt;xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" /&gt;&#13;
		&lt;/xs:sequence&gt;&#13;
	&lt;/xs:complexType&gt;&#13;
&#13;
	&lt;xs:complexType name="LanguageSpecificStringType"&gt;&#13;
		&lt;xs:simpleContent&gt;&#13;
			&lt;xs:extension base="xs:string"&gt;&#13;
				&lt;xs:attribute ref="xml:lang" /&gt;&#13;
				&lt;xs:anyAttribute namespace="##other" processContents="lax" /&gt;&#13;
			&lt;/xs:extension&gt;&#13;
		&lt;/xs:simpleContent&gt;&#13;
	&lt;/xs:complexType&gt;&#13;
&#13;
	&lt;!-- Enumerate request --&gt;&#13;
	&lt;xs:element name="Enumerate"&gt;&#13;
		&lt;xs:complexType&gt;&#13;
			&lt;xs:sequence&gt;&#13;
				&lt;xs:element name="EndTo" type="wsa:EndpointReferenceType" minOccurs="0" /&gt;&#13;
				&lt;xs:element name="Expires" type="tns:ExpirationType" minOccurs="0" /&gt;&#13;
				&lt;xs:element name="Filter" type="tns:FilterType" minOccurs="0" /&gt;&#13;
				&lt;xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" /&gt;&#13;
			&lt;/xs:sequence&gt;&#13;
			&lt;xs:anyAttribute namespace="##other" processContents="lax" /&gt;&#13;
		&lt;/xs:complexType&gt;&#13;
	&lt;/xs:element&gt;&#13;
	&#13;
	&lt;!-- Used for a fault response --&gt;&#13;
	&lt;xs:element name="SupportedDialect" type="xs:anyURI" /&gt;&#13;
	&#13;
	&lt;!-- Enumerate response --&gt;&#13;
	&lt;xs:element name="EnumerateResponse"&gt;&#13;
		&lt;xs:complexType&gt;&#13;
			&lt;xs:sequence&gt;&#13;
				&lt;xs:element name="Expires" type="tns:ExpirationType" minOccurs="0" /&gt;&#13;
				&lt;xs:element name="EnumerationContext" type="tns:EnumerationContextType" /&gt;&#13;
				&lt;xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" /&gt;&#13;
			&lt;/xs:sequence&gt;&#13;
			&lt;xs:anyAttribute namespace="##other" processContents="lax" /&gt;&#13;
		&lt;/xs:complexType&gt;&#13;
	&lt;/xs:element&gt;&#13;
	&#13;
	&lt;!-- Pull request --&gt;&#13;
	&lt;xs:element name="Pull"&gt;&#13;
		&lt;xs:complexType&gt;&#13;
			&lt;xs:sequence&gt;&#13;
				&lt;xs:element name="EnumerationContext" type="tns:EnumerationContextType" /&gt;&#13;
				&lt;xs:element name="MaxTime" type="tns:PositiveDurationType" minOccurs="0" /&gt;&#13;
				&lt;xs:element name="MaxElements" type="xs:positiveInteger" minOccurs="0" /&gt;&#13;
				&lt;xs:element name="MaxCharacters" type="xs:positiveInteger" minOccurs="0" /&gt;&#13;
				&lt;xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" /&gt;&#13;
			&lt;/xs:sequence&gt;&#13;
			&lt;xs:anyAttribute namespace="##other" processContents="lax" /&gt;&#13;
		&lt;/xs:complexType&gt;&#13;
	&lt;/xs:element&gt;&#13;
	&#13;
	&lt;!-- Pull response --&gt;&#13;
	&lt;xs:element name="PullResponse"&gt;&#13;
		&lt;xs:complexType&gt;&#13;
			&lt;xs:sequence&gt;&#13;
				&lt;xs:element name="EnumerationContext" type="tns:EnumerationContextType" minOccurs="0" /&gt;&#13;
				&lt;xs:element name="Items" type="tns:ItemListType" minOccurs="0" /&gt;&#13;
				&lt;xs:element name="EndOfSequence" minOccurs="0" /&gt;&#13;
			&lt;/xs:sequence&gt;&#13;
			&lt;xs:anyAttribute namespace="##other" processContents="lax" /&gt;&#13;
		&lt;/xs:complexType&gt;&#13;
	&lt;/xs:element&gt;&#13;
	&#13;
	&lt;!-- Renew request --&gt;&#13;
	&lt;xs:element name="Renew"&gt;&#13;
		&lt;xs:complexType&gt;&#13;
			&lt;xs:sequence&gt;&#13;
				&lt;xs:element name="EnumerationContext" type="tns:EnumerationContextType" /&gt;&#13;
				&lt;xs:element name="Expires" type="tns:ExpirationType" minOccurs="0" /&gt;&#13;
				&lt;xs:any namespace="##other" processContents="lax" &#13;
					minOccurs="0" maxOccurs="unbounded" /&gt;&#13;
			&lt;/xs:sequence&gt;&#13;
			&lt;xs:anyAttribute namespace="##other" processContents="lax" /&gt;&#13;
		&lt;/xs:complexType&gt;&#13;
	&lt;/xs:element&gt;&#13;
&#13;
	&lt;!-- Renew response --&gt;&#13;
	&lt;xs:element name="RenewResponse"&gt;&#13;
		&lt;xs:complexType&gt;&#13;
			&lt;xs:sequence&gt;&#13;
				&lt;xs:element name="Expires" type="tns:ExpirationType" minOccurs="0" /&gt;&#13;
				&lt;xs:element name="EnumerationContext" type="tns:EnumerationContextType" minOccurs="0" /&gt;&#13;
				&lt;xs:any namespace="##other" processContents="lax" &#13;
					minOccurs="0" maxOccurs="unbounded" /&gt;&#13;
			&lt;/xs:sequence&gt;&#13;
			&lt;xs:anyAttribute namespace="##other" processContents="lax" /&gt;&#13;
		&lt;/xs:complexType&gt;&#13;
	&lt;/xs:element&gt;&#13;
&#13;
	&lt;!-- GetStatus request --&gt;&#13;
	&lt;xs:element name="GetStatus"&gt;&#13;
		&lt;xs:complexType&gt;&#13;
			&lt;xs:sequence&gt;&#13;
				&lt;xs:element name="EnumerationContext" type="tns:EnumerationContextType" /&gt;&#13;
				&lt;xs:any namespace="##other" processContents="lax" &#13;
					minOccurs="0" maxOccurs="unbounded" /&gt;&#13;
			&lt;/xs:sequence&gt;&#13;
			&lt;xs:anyAttribute namespace="##other" processContents="lax" /&gt;&#13;
		&lt;/xs:complexType&gt;&#13;
	&lt;/xs:element&gt;&#13;
&#13;
	&lt;!-- GetStatus response --&gt;&#13;
	&lt;xs:element name="GetStatusResponse"&gt;&#13;
		&lt;xs:complexType&gt;&#13;
			&lt;xs:sequence&gt;&#13;
				&lt;xs:element name="Expires" type="tns:ExpirationType" minOccurs="0" /&gt;&#13;
				&lt;xs:any namespace="##other" processContents="lax" &#13;
					minOccurs="0" maxOccurs="unbounded" /&gt;&#13;
			&lt;/xs:sequence&gt;&#13;
			&lt;xs:anyAttribute namespace="##other" processContents="lax" /&gt;&#13;
		&lt;/xs:complexType&gt;&#13;
	&lt;/xs:element&gt;&#13;
&#13;
	&lt;!-- Release request --&gt;&#13;
	&lt;xs:element name="Release"&gt;&#13;
		&lt;xs:complexType&gt;&#13;
			&lt;xs:sequence&gt;&#13;
				&lt;xs:element name="EnumerationContext" type="tns:EnumerationContextType" /&gt;&#13;
			&lt;/xs:sequence&gt;&#13;
			&lt;xs:anyAttribute namespace="##other" processContents="lax" /&gt;&#13;
		&lt;/xs:complexType&gt;&#13;
	&lt;/xs:element&gt;&#13;
	&#13;
	&lt;!-- Release response has an empty body --&gt;&#13;
	&#13;
	&lt;!-- EnumerationEnd message --&gt;&#13;
	&lt;xs:element name="EnumerationEnd"&gt;&#13;
		&lt;xs:complexType&gt;&#13;
		&lt;xs:sequence&gt;&#13;
			&lt;xs:element name="EnumerationContext" type="tns:EnumerationContextType" /&gt;&#13;
			&lt;xs:element name="Code" type="tns:OpenEnumerationEndCodeType" /&gt;&#13;
			&lt;xs:element name="Reason" type="tns:LanguageSpecificStringType" minOccurs="0" maxOccurs="unbounded" /&gt;&#13;
			&lt;xs:any namespace="##other" processContents="lax" &#13;
			minOccurs="0" maxOccurs="unbounded" /&gt;&#13;
		&lt;/xs:sequence&gt;&#13;
		&lt;xs:anyAttribute namespace="##other" processContents="lax" /&gt;&#13;
		&lt;/xs:complexType&gt;&#13;
	&lt;/xs:element&gt;&#13;
&#13;
	&lt;xs:simpleType name="EnumerationEndCodeType"&gt;&#13;
		&lt;xs:restriction base="xs:anyURI"&gt;&#13;
		&lt;xs:enumeration value="http://schemas.xmlsoap.org/ws/2004/09/enumeration/SourceShuttingDown" /&gt;&#13;
		&lt;xs:enumeration value="http://schemas.xmlsoap.org/ws/2004/09/enumeration/SourceCancelling" /&gt;&#13;
		&lt;/xs:restriction&gt;&#13;
	&lt;/xs:simpleType&gt;&#13;
&#13;
	&lt;xs:simpleType name="OpenEnumerationEndCodeType"&gt;&#13;
		&lt;xs:union memberTypes="tns:EnumerationEndCodeType xs:anyURI" /&gt;&#13;
	&lt;/xs:simpleType&gt;&#13;
&lt;/xs:schema&gt;&#13;
</l7:Resource>
                            <l7:Resource sourceUrl="http://schemas.xmlsoap.org/ws/2004/09/transfer/transfer.xsd" type="xmlschema">&lt;xs:schema&#13;
    targetNamespace="http://schemas.xmlsoap.org/ws/2004/09/transfer"&#13;
    xmlns:tns="http://schemas.xmlsoap.org/ws/2004/09/transfer"&#13;
    xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing"&#13;
    xmlns:xs="http://www.w3.org/2001/XMLSchema"&#13;
    elementFormDefault="qualified"&#13;
    blockDefault="#all" &gt;&#13;
&#13;
  &lt;xs:import&#13;
    namespace="http://schemas.xmlsoap.org/ws/2004/08/addressing"&#13;
    schemaLocation="http://schemas.xmlsoap.org/ws/2004/08/addressing/addressing.xsd"&#13;
    /&gt;&#13;
&#13;
  &lt;xs:complexType name="AnyXmlType"&gt;&#13;
    &lt;xs:sequence&gt;&#13;
      &lt;xs:any namespace="##other" processContents="lax" /&gt;&#13;
    &lt;/xs:sequence&gt;&#13;
  &lt;/xs:complexType&gt;&#13;
&#13;
  &lt;xs:complexType name="AnyXmlOptionalType"&gt;&#13;
    &lt;xs:sequence&gt;&#13;
      &lt;xs:any namespace="##other" processContents="lax"&#13;
              minOccurs="0"/&gt;&#13;
    &lt;/xs:sequence&gt;&#13;
  &lt;/xs:complexType&gt;&#13;
&#13;
  &lt;xs:complexType name="CreateResponseType"&gt;&#13;
    &lt;xs:sequence&gt;&#13;
      &lt;xs:element ref="tns:ResourceCreated" /&gt;&#13;
      &lt;xs:any namespace="##other" processContents="lax"&#13;
              minOccurs="0"/&gt;&#13;
    &lt;/xs:sequence&gt;&#13;
  &lt;/xs:complexType&gt;&#13;
&#13;
  &lt;xs:element name="ResourceCreated" type="wsa:EndpointReferenceType" /&gt;&#13;
&#13;
&lt;/xs:schema&gt;</l7:Resource>
                            <l7:Resource sourceUrl="http://schemas.xmlsoap.org/ws/2004/09/transfer/transfer.wsdl" type="wsdl">&lt;?xml version="1.0" encoding="utf-8"?&gt;&#13;
&lt;!--&#13;
(c) 2006 BEA Systems Inc., Computer Associates, Microsoft Corporation, Inc., Sonic Software, and Systinet Corporation. All rights reserved.&#13;
&#13;
Permission to copy and display the WS-Transfer specification (the "Specification", which includes WSDL and schema documents), in any medium without fee or royalty is hereby granted, provided that you include the following on ALL copies of the Specification that you make:&#13;
&#13;
1.	A link or URL to the Specification at one of the Co-Developers' websites.&#13;
2.	The copyright notice as shown in the Specification.&#13;
&#13;
BEA Systems, Computer Associates, Microsoft, Sonic Software, and Systinet (collectively, the "Co-Developers") each agree to grant you a license, under royalty-free and otherwise reasonable, non-discriminatory terms and conditions, to their respective essential patent claims that they deem necessary to implement the Specification.&#13;
&#13;
THE SPECIFICATION IS PROVIDED "AS IS," AND THE CO-DEVELOPERS MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THE SPECIFICATION ARE SUITABLE FOR ANY PURPOSE; NOR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY THIRD PARTY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.&#13;
&#13;
THE CO-DEVELOPERS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THE SPECIFICATIONS.&#13;
&#13;
The name and trademarks of the Co-Developers may NOT be used in any manner, including advertising or publicity pertaining to the Specifications or their contents without specific, written prior permission. Title to copyright in the Specifications will at all times remain with the Co-Developers.&#13;
&#13;
No other rights are granted by implication, estoppel or otherwise.&#13;
--&gt;&#13;
&lt;wsdl:definitions &#13;
    targetNamespace="http://schemas.xmlsoap.org/ws/2004/09/transfer" &#13;
    xmlns:tns="http://schemas.xmlsoap.org/ws/2004/09/transfer" &#13;
    xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing" &#13;
    xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" &#13;
    xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;&#13;
 &#13;
  &lt;wsdl:types&gt;&#13;
    &lt;xs:schema&gt;&#13;
      &lt;xs:import &#13;
        namespace="http://schemas.xmlsoap.org/ws/2004/09/transfer"&#13;
        schemaLocation="http://schemas.xmlsoap.org/ws/2004/09/transfer/transfer.xsd"&#13;
        /&gt;&#13;
    &lt;/xs:schema&gt;&#13;
  &lt;/wsdl:types&gt;&#13;
 &#13;
  &lt;wsdl:message name="EmptyMessage"/&gt;&#13;
  &lt;wsdl:message name="AnyXmlMessage"&gt;&#13;
    &lt;wsdl:part name="Body" type="tns:AnyXmlType"/&gt;&#13;
  &lt;/wsdl:message&gt;&#13;
  &lt;wsdl:message name="OptionalXmlMessage"&gt;&#13;
    &lt;wsdl:part name="Body" type="tns:AnyXmlOptionalType"/&gt;&#13;
  &lt;/wsdl:message&gt;&#13;
  &lt;wsdl:message name="CreateResponseMessage"&gt;&#13;
    &lt;wsdl:part name="Body" type="tns:CreateResponseType"/&gt;&#13;
  &lt;/wsdl:message&gt;&#13;
 &#13;
  &lt;wsdl:portType name="Resource"&gt;&#13;
    &lt;wsdl:documentation&gt;&#13;
      This port type defines a resource that may be read, &#13;
      written, and deleted.&#13;
    &lt;/wsdl:documentation&gt;&#13;
    &lt;wsdl:operation name="Get"&gt;&#13;
      &lt;wsdl:input &#13;
        message="tns:OptionalXmlMessage"&#13;
        wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/Get"/&gt;&#13;
      &lt;wsdl:output &#13;
        message="tns:AnyXmlMessage"&#13;
        wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/GetResponse" /&gt;&#13;
    &lt;/wsdl:operation&gt;&#13;
    &lt;wsdl:operation name="Put"&gt;&#13;
      &lt;wsdl:input &#13;
        message="tns:AnyXmlMessage"&#13;
        wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/Put" /&gt;&#13;
      &lt;wsdl:output &#13;
        message="tns:OptionalXmlMessage"&#13;
        wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/PutResponse" /&gt;&#13;
    &lt;/wsdl:operation&gt;&#13;
    &lt;wsdl:operation name="Delete"&gt;&#13;
      &lt;wsdl:input &#13;
        message="tns:EmptyMessage"&#13;
        wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/Delete" /&gt;&#13;
      &lt;wsdl:output &#13;
        message="tns:OptionalXmlMessage"&#13;
        wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/DeleteResponse" /&gt;&#13;
    &lt;/wsdl:operation&gt;&#13;
  &lt;/wsdl:portType&gt;&#13;
 &#13;
  &lt;wsdl:portType name="ResourceFactory"&gt;&#13;
    &lt;wsdl:documentation&gt;&#13;
      This port type defines a Web service that can create new &#13;
      resources.&#13;
    &lt;/wsdl:documentation&gt;&#13;
    &lt;wsdl:operation name="Create"&gt;&#13;
      &lt;wsdl:input &#13;
        message="tns:AnyXmlMessage"&#13;
        wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/Create" /&gt;&#13;
      &lt;wsdl:output &#13;
        message="tns:CreateResponseMessage"&#13;
        wsa:Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/CreateResponse" /&gt;&#13;
    &lt;/wsdl:operation&gt;&#13;
  &lt;/wsdl:portType&gt;&#13;
&lt;/wsdl:definitions&gt;&#13;
</l7:Resource>
                            <l7:Resource sourceUrl="file://__ssginternal/gateway-management.xsd" type="xmlschema">&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://ns.l7tech.com/2010/04/gateway-management" xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" elementFormDefault="qualified" version="1.0" targetNamespace="http://ns.l7tech.com/2010/04/gateway-management"&gt;
            
  &lt;xs:element name="ActiveConnector" type="tns:ActiveConnector"/&gt;
            
  &lt;xs:element name="AddAssignmentsContext" type="tns:AddAssignmentsContextType"/&gt;
            
  &lt;xs:element name="AssertionSecurityZone" type="tns:AssertionAccessType"/&gt;
            
  &lt;xs:element name="BooleanValue" type="tns:BooleanValueType"/&gt;
            
  &lt;xs:element name="Bundle" type="tns:Bundle"/&gt;
            
  &lt;xs:element name="CassandraConnection" type="tns:CassandraConnectionType"/&gt;
            
  &lt;xs:element name="CertificateData" type="tns:CertificateDataType"/&gt;
            
  &lt;xs:element name="ClusterProperty" type="tns:ClusterPropertyType"/&gt;
            
  &lt;xs:element name="CustomKeyValue" type="tns:CustomKeyValueType"/&gt;
            
  &lt;xs:element name="DateValue" type="tns:DateValueType"/&gt;
            
  &lt;xs:element name="Dependency" type="tns:dependencyMO"/&gt;
            
  &lt;xs:element name="DependencyList" type="tns:dependencyListMO"/&gt;
            
  &lt;xs:element name="EmailListener" type="tns:EmailListenerType"/&gt;
            
  &lt;xs:element name="EncapsulatedArgument" type="tns:EncapsulatedAssertionArgumentType"/&gt;
            
  &lt;xs:element name="EncapsulatedAssertion" type="tns:EncapsulatedAssertionType"/&gt;
            
  &lt;xs:element name="EncapsulatedAssertionExportResult" type="tns:EncapsulatedAssertionExportResultType"/&gt;
            
  &lt;xs:element name="EncapsulatedAssertionImportResult" type="tns:EncapsulatedAssertionImportResultType"/&gt;
            
  &lt;xs:element name="EncapsulatedResult" type="tns:EncapsulatedResultType"/&gt;
            
  &lt;xs:element name="EncassImportContext" type="tns:EncassImportContextType"/&gt;
            
  &lt;xs:element name="EntityOwnershipDescriptor" type="tns:EntityOwnershipDescriptorType"/&gt;
            
  &lt;xs:element name="Error" type="tns:Error"/&gt;
            
  &lt;xs:element name="FirewallRule" type="tns:FirewallRuleType"/&gt;
            
  &lt;xs:element name="Folder" type="tns:FolderType"/&gt;
            
  &lt;xs:element name="GenericEntity" type="tns:GenericEntityType"/&gt;
            
  &lt;xs:element name="Group" type="tns:GroupType"/&gt;
            
  &lt;xs:element name="HttpConfiguration" type="tns:HttpConfigurationType"/&gt;
            
  &lt;xs:element name="HttpMapping" type="tns:HttpServiceMappingType"/&gt;
            
  &lt;xs:element name="IdentityProvider" type="tns:IdentityProviderType"/&gt;
            
  &lt;xs:element name="IntegerValue" type="tns:IntegerValueType"/&gt;
            
  &lt;xs:element name="InterfaceTag" type="tns:InterfaceTagType"/&gt;
            
  &lt;xs:element name="Item" type="tns:ItemReferenceType"/&gt;
            
  &lt;xs:element name="JDBCConnection" type="tns:JDBCConnectionType"/&gt;
            
  &lt;xs:element name="JMSDestination" type="tns:JMSDestinationType"/&gt;
            
  &lt;xs:element name="Link" type="tns:LinkType"/&gt;
            
  &lt;xs:element name="List" type="tns:ItemsListReferenceType"/&gt;
            
  &lt;xs:element name="ListenPort" type="tns:ListenPortType"/&gt;
            
  &lt;xs:element name="LongValue" type="tns:LongValueType"/&gt;
            
  &lt;xs:element name="Mapping" type="tns:MappingType"/&gt;
            
  &lt;xs:element name="Mappings" type="tns:MappingsType"/&gt;
            
  &lt;xs:element name="Policy" type="tns:PolicyType"/&gt;
            
  &lt;xs:element name="PolicyAlias" type="tns:PolicyAliasType"/&gt;
            
  &lt;xs:element name="PolicyBackedService" type="tns:PolicyBackedServiceType"/&gt;
            
  &lt;xs:element name="PolicyBackedServiceOperation" type="tns:PolicyBackedServiceOperationArgumentType"/&gt;
            
  &lt;xs:element name="PolicyExportResult" type="tns:PolicyExportResultType"/&gt;
            
  &lt;xs:element name="PolicyImportContext" type="tns:PolicyImportContextType"/&gt;
            
  &lt;xs:element name="PolicyImportResult" type="tns:PolicyImportResultType"/&gt;
            
  &lt;xs:element name="PolicyValidationContext" type="tns:PolicyValidationContextType"/&gt;
            
  &lt;xs:element name="PolicyValidationResult" type="tns:PolicyValidationResultType"/&gt;
            
  &lt;xs:element name="PolicyVersion" type="tns:PolicyVersionType"/&gt;
            
  &lt;xs:element name="PrivateKey" type="tns:PrivateKeyType"/&gt;
            
  &lt;xs:element name="PrivateKeyCreationContext" type="tns:PrivateKeyCreationContextType"/&gt;
            
  &lt;xs:element name="PrivateKeyExportContext" type="tns:PrivateKeyExportContextType"/&gt;
            
  &lt;xs:element name="PrivateKeyExportResult" type="tns:PrivateKeyExportResultType"/&gt;
            
  &lt;xs:element name="PrivateKeyGenerateCsrContext" type="tns:PrivateKeyGenerateCsrContextType"/&gt;
            
  &lt;xs:element name="PrivateKeyGenerateCsrResult" type="tns:PrivateKeyGenerateCsrResultType"/&gt;
            
  &lt;xs:element name="PrivateKeyImportContext" type="tns:PrivateKeyImportContextType"/&gt;
            
  &lt;xs:element name="PrivateKeySignCsrResult" type="tns:PrivateKeySignCertResultType"/&gt;
            
  &lt;xs:element name="PrivateKeySpecialPurposeContext" type="tns:PrivateKeySpecialPurposeContextType"/&gt;
            
  &lt;xs:element name="RemoveAssignmentsContext" type="tns:RemoveAssignmentsContextType"/&gt;
            
  &lt;xs:element name="ResourceDocument" type="tns:ResourceDocumentType"/&gt;
            
  &lt;xs:element name="ResourceSet" type="tns:ResourceSetType"/&gt;
            
  &lt;xs:element name="RevocationCheckingPolicy" type="tns:RevocationCheckingPolicyType"/&gt;
            
  &lt;xs:element name="Role" type="tns:RbacRoleType"/&gt;
            
  &lt;xs:element name="RoleAssignment" type="tns:RoleAssignmentType"/&gt;
            
  &lt;xs:element name="RolePermission" type="tns:RolePermissionType"/&gt;
            
  &lt;xs:element name="RolePredicate" type="tns:RolePredicateType"/&gt;
            
  &lt;xs:element name="SampleMessage" type="tns:SampleMessageType"/&gt;
            
  &lt;xs:element name="ScheduledTask" type="tns:ScheduledTaskType"/&gt;
            
  &lt;xs:element name="SecurityZone" type="tns:SecurityZoneType"/&gt;
            
  &lt;xs:element name="ServerModuleFile" type="tns:ServerModuleFileType"/&gt;
            
  &lt;xs:element name="Service" type="tns:ServiceType"/&gt;
            
  &lt;xs:element name="ServiceAlias" type="tns:ServiceAliasType"/&gt;
            
  &lt;xs:element name="SiteMinderConfiguration" type="tns:SiteMinderConfigurationType"/&gt;
            
  &lt;xs:element name="SoapMapping" type="tns:SoapServiceMappingType"/&gt;
            
  &lt;xs:element name="SolutionKit" type="tns:SolutionKitType"/&gt;
            
  &lt;xs:element name="StoredPassword" type="tns:StoredPasswordType"/&gt;
            
  &lt;xs:element name="StringValue" type="tns:StringValueType"/&gt;
            
  &lt;xs:element name="TrustedCertificate" type="tns:TrustedCertificateType"/&gt;
            
  &lt;xs:element name="User" type="tns:UserType"/&gt;
            
  &lt;xs:element name="Value" type="tns:ValueType"/&gt;
            
  &lt;xs:element name="VersionComment" type="tns:VersionCommentType"/&gt;
            
  &lt;xs:element name="WorkQueue" type="tns:WorkQueueType"/&gt;
            
  &lt;xs:simpleType name="action"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="NewOrExisting"/&gt;
      &lt;xs:enumeration value="NewOrUpdate"/&gt;
      &lt;xs:enumeration value="AlwaysCreateNew"/&gt;
      &lt;xs:enumeration value="Ignore"/&gt;
      &lt;xs:enumeration value="Delete"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
            
  &lt;xs:simpleType name="actionTaken"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="UsedExisting"/&gt;
      &lt;xs:enumeration value="CreatedNew"/&gt;
      &lt;xs:enumeration value="UpdatedExisting"/&gt;
      &lt;xs:enumeration value="Ignored"/&gt;
      &lt;xs:enumeration value="Deleted"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
            
  &lt;xs:complexType name="ActiveConnector"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Name" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="Enabled" type="tns:BooleanPropertyType"/&gt;
          &lt;xs:element name="Type" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="HardwiredId" type="tns:StringPropertyType" minOccurs="0"/&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="AddAssignmentsContextType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:ManagedObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="assignments" minOccurs="0"&gt;
            &lt;xs:complexType&gt;
              &lt;xs:sequence&gt;
                &lt;xs:element name="assignment" type="tns:RoleAssignmentType" minOccurs="0" maxOccurs="unbounded"/&gt;
              &lt;/xs:sequence&gt;
            &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="AssertionAccessType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Name" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="AssertionDetailType"&gt;
    &lt;xs:simpleContent&gt;
      &lt;xs:extension base="xs:string"&gt;
        &lt;xs:attribute name="position" type="xs:int" use="required"/&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:simpleContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="BigIntegerPropertyType"&gt;
    &lt;xs:simpleContent&gt;
      &lt;xs:extension base="xs:integer"&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:simpleContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="BinaryPropertyType"&gt;
    &lt;xs:simpleContent&gt;
      &lt;xs:extension base="xs:base64Binary"&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:simpleContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="BindOnlyLdapIdentityProviderDetailType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:IdentityProviderDetailType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="ServerUrls" type="tns:StringListPropertyType"/&gt;
          &lt;xs:element name="UseSslClientAuthentication" type="tns:BooleanPropertyType" minOccurs="0"/&gt;
          &lt;xs:element name="SslKeyReference" type="tns:ReferenceType" minOccurs="0"/&gt;
          &lt;xs:element name="BindPatternPrefix" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="BindPatternSuffix" type="tns:StringPropertyType"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="BooleanPropertyType"&gt;
    &lt;xs:simpleContent&gt;
      &lt;xs:extension base="xs:boolean"&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:simpleContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="BooleanValueType"&gt;
    &lt;xs:simpleContent&gt;
      &lt;xs:extension base="xs:boolean"&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:simpleContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="Bundle"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="References" minOccurs="0"&gt;
        &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
            &lt;xs:element ref="tns:Item" minOccurs="0" maxOccurs="unbounded"/&gt;
          &lt;/xs:sequence&gt;
        &lt;/xs:complexType&gt;
      &lt;/xs:element&gt;
      &lt;xs:element name="Mappings" minOccurs="0"&gt;
        &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
            &lt;xs:element ref="tns:Mapping" minOccurs="0" maxOccurs="unbounded"/&gt;
          &lt;/xs:sequence&gt;
        &lt;/xs:complexType&gt;
      &lt;/xs:element&gt;
      &lt;xs:element name="DependencyGraph" type="tns:dependencyListMO" minOccurs="0"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="CassandraConnectionType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Name" type="xs:string"/&gt;
          &lt;xs:element name="Keyspace" type="xs:string"/&gt;
          &lt;xs:element name="ContactPoint" type="xs:string"/&gt;
          &lt;xs:element name="Port" type="xs:string"/&gt;
          &lt;xs:element name="Username" type="xs:string"/&gt;
          &lt;xs:element name="PasswordId" type="xs:string" minOccurs="0"/&gt;
          &lt;xs:element name="Compression" type="xs:string"/&gt;
          &lt;xs:element name="Ssl" type="xs:boolean"/&gt;
          &lt;xs:element name="TlsCiphers" type="xs:string" minOccurs="0"/&gt;
          &lt;xs:element name="Enabled" type="xs:boolean"/&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="CertificateDataType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="IssuerName" type="tns:StringPropertyType" minOccurs="0"/&gt;
      &lt;xs:element name="SerialNumber" type="tns:BigIntegerPropertyType" minOccurs="0"/&gt;
      &lt;xs:element name="SubjectName" type="tns:StringPropertyType" minOccurs="0"/&gt;
      &lt;xs:element name="Encoded" type="tns:BinaryPropertyType"/&gt;
      &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
      &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="ClientAuthenticationPropertyType"&gt;
    &lt;xs:simpleContent&gt;
      &lt;xs:extension base="tns:ClientAuthenticationType"&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:simpleContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:simpleType name="ClientAuthenticationType"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="None"/&gt;
      &lt;xs:enumeration value="Optional"/&gt;
      &lt;xs:enumeration value="Required"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
            
  &lt;xs:complexType name="ClusterPropertyType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Name" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="Value" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="CustomKeyValueType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:ManagedObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="StoreName" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="Key" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="Value" type="tns:BinaryPropertyType"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:simpleType name="DateValueType"&gt;
    &lt;xs:restriction base="xs:dateTime"/&gt;
  &lt;/xs:simpleType&gt;
            
  &lt;xs:complexType name="dependencyListMO"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="Options" type="tns:PropertiesMapType" minOccurs="0"/&gt;
      &lt;xs:element name="Reference" type="tns:dependencyMO" minOccurs="0"/&gt;
      &lt;xs:element name="Dependencies" minOccurs="0"&gt;
        &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
            &lt;xs:element ref="tns:Dependency" minOccurs="0" maxOccurs="unbounded"/&gt;
          &lt;/xs:sequence&gt;
        &lt;/xs:complexType&gt;
      &lt;/xs:element&gt;
      &lt;xs:element name="MissingDependencies" minOccurs="0"&gt;
        &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
            &lt;xs:element name="MissingDependency" type="tns:dependencyMO" minOccurs="0" maxOccurs="unbounded"/&gt;
          &lt;/xs:sequence&gt;
        &lt;/xs:complexType&gt;
      &lt;/xs:element&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="dependencyMO"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="Name" type="xs:string" minOccurs="0"/&gt;
      &lt;xs:element name="Id" type="xs:string" minOccurs="0"/&gt;
      &lt;xs:element name="Type" type="xs:string"/&gt;
      &lt;xs:element name="Dependencies" minOccurs="0"&gt;
        &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
            &lt;xs:element ref="tns:Dependency" minOccurs="0" maxOccurs="unbounded"/&gt;
          &lt;/xs:sequence&gt;
        &lt;/xs:complexType&gt;
      &lt;/xs:element&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="EmailListenerType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Name" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="Active" type="tns:BooleanPropertyType"/&gt;
          &lt;xs:element name="Hostname" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="Port" type="tns:IntegerPropertyType"/&gt;
          &lt;xs:element name="ServerType" type="tns:EmailServerTypePropertyType"/&gt;
          &lt;xs:element name="UseSsl" type="tns:BooleanPropertyType"/&gt;
          &lt;xs:element name="DeleteOnReceive" type="tns:BooleanPropertyType"/&gt;
          &lt;xs:element name="Username" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="Password" type="tns:StringPropertyType" minOccurs="0"/&gt;
          &lt;xs:element name="Folder" type="tns:StringPropertyType" minOccurs="0"/&gt;
          &lt;xs:element name="PollInterval" type="tns:IntegerPropertyType"/&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:simpleType name="EmailServerType"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="POP3"/&gt;
      &lt;xs:enumeration value="IMAP"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
            
  &lt;xs:simpleType name="EmailServerTypePropertyType"&gt;
    &lt;xs:restriction base="tns:EmailServerType"/&gt;
  &lt;/xs:simpleType&gt;
            
  &lt;xs:complexType name="EncapsulatedArgumentListPropertyType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="EncapsulatedAssertionArgument" type="tns:EncapsulatedAssertionArgumentType" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="EncapsulatedAssertionArgumentType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="Ordinal" type="tns:IntegerPropertyType" minOccurs="0"/&gt;
      &lt;xs:element name="ArgumentName" type="tns:StringPropertyType" minOccurs="0"/&gt;
      &lt;xs:element name="ArgumentType" type="tns:StringPropertyType" minOccurs="0"/&gt;
      &lt;xs:element name="GuiLabel" type="tns:StringPropertyType" minOccurs="0"/&gt;
      &lt;xs:element name="GuiPrompt" type="tns:BooleanPropertyType" minOccurs="0"/&gt;
      &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
      &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="EncapsulatedAssertionExportResultType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:PolicyExportResultType"&gt;
        &lt;xs:sequence/&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="EncapsulatedAssertionImportResultType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:ManagedObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Warnings" minOccurs="0"&gt;
            &lt;xs:complexType&gt;
              &lt;xs:sequence&gt;
                &lt;xs:element name="Warning" type="tns:StringPropertyType" maxOccurs="unbounded"/&gt;
              &lt;/xs:sequence&gt;
            &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;xs:element name="ImportedEncapsulatedAssertion" type="tns:EncapsulatedAssertionType"/&gt;
          &lt;xs:element name="ImportedPolicyReferences" minOccurs="0"&gt;
            &lt;xs:complexType&gt;
              &lt;xs:sequence&gt;
                &lt;xs:element name="ImportedPolicyReference" type="tns:ImportedPolicyReferenceType" maxOccurs="unbounded"/&gt;
              &lt;/xs:sequence&gt;
            &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="EncapsulatedAssertionType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Name" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="Guid" type="tns:StringPropertyType" minOccurs="0"/&gt;
          &lt;xs:element name="PolicyReference" type="tns:ReferenceType" minOccurs="0"/&gt;
          &lt;xs:element name="EncapsulatedArguments" type="tns:EncapsulatedArgumentListPropertyType" minOccurs="0"/&gt;
          &lt;xs:element name="EncapsulatedResults" type="tns:EncapsulatedResultListPropertyType" minOccurs="0"/&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Resources" minOccurs="0"&gt;
            &lt;xs:complexType&gt;
              &lt;xs:sequence&gt;
                &lt;xs:element ref="tns:ResourceSet" minOccurs="0" maxOccurs="unbounded"/&gt;
              &lt;/xs:sequence&gt;
            &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="EncapsulatedResultListPropertyType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="EncapsulatedAssertionResult" type="tns:EncapsulatedResultType" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="EncapsulatedResultType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="ResultName" type="tns:StringPropertyType" minOccurs="0"/&gt;
      &lt;xs:element name="ResultType" type="tns:StringPropertyType" minOccurs="0"/&gt;
      &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
      &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="EncassImportContextType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:PolicyImportContextType"&gt;
        &lt;xs:sequence/&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="EntityOwnershipDescriptorType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:ManagedObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="EntityId" type="xs:string"/&gt;
          &lt;xs:element name="EntityType" type="xs:string"/&gt;
          &lt;xs:element name="ReadOnly" type="xs:boolean" minOccurs="0"/&gt;
          &lt;xs:element name="VersionStamp" type="xs:long" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="Error"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="Type" type="xs:string" minOccurs="0"/&gt;
      &lt;xs:element name="TimeStamp" type="xs:dateTime" minOccurs="0"/&gt;
      &lt;xs:element ref="tns:Link"/&gt;
      &lt;xs:element name="Detail" type="xs:string" minOccurs="0"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:simpleType name="errorType"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="TargetExists"/&gt;
      &lt;xs:enumeration value="TargetNotFound"/&gt;
      &lt;xs:enumeration value="TargetReadOnly"/&gt;
      &lt;xs:enumeration value="UniqueKeyConflict"/&gt;
      &lt;xs:enumeration value="CannotReplaceDependency"/&gt;
      &lt;xs:enumeration value="ImproperMapping"/&gt;
      &lt;xs:enumeration value="InvalidResource"/&gt;
      &lt;xs:enumeration value="Unknown"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
            
  &lt;xs:complexType name="ExtensionType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:any maxOccurs="unbounded" minOccurs="1" namespace="##targetNamespace" processContents="lax"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="FederatedIdentityProviderDetailType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:IdentityProviderDetailType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="CertificateReferences" type="tns:ReferenceListPropertyType" minOccurs="0"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="FirewallRuleType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:ManagedObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Name" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="Enabled" type="tns:BooleanPropertyType"/&gt;
          &lt;xs:element name="Ordinal" type="tns:IntegerPropertyType"/&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="FolderType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Name" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:attribute name="folderId" type="xs:string"/&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="GenericEntityType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:ManagedObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Name" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="Description" type="tns:StringPropertyType" minOccurs="0"/&gt;
          &lt;xs:element name="EntityClassName" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="Enabled" type="tns:BooleanPropertyType"/&gt;
          &lt;xs:element name="ValueXml" type="tns:StringPropertyType"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="GroupType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:ManagedObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Name" type="xs:string"/&gt;
          &lt;xs:element name="Description" type="xs:string" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:attribute name="providerId" type="xs:string"/&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:simpleType name="HttpConfigurationOptionType"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="default"/&gt;
      &lt;xs:enumeration value="none"/&gt;
      &lt;xs:enumeration value="custom"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
            
  &lt;xs:simpleType name="HttpConfigurationProtocolType"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="any"/&gt;
      &lt;xs:enumeration value="http"/&gt;
      &lt;xs:enumeration value="https"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
            
  &lt;xs:complexType name="HttpConfigurationType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Host" type="xs:string"/&gt;
          &lt;xs:element name="Port" type="xs:int" default="0"/&gt;
          &lt;xs:element name="Protocol" type="tns:HttpConfigurationProtocolType" default="any" minOccurs="0"/&gt;
          &lt;xs:element name="Path" type="xs:string" minOccurs="0"/&gt;
          &lt;xs:element name="Username" type="xs:string" minOccurs="0"/&gt;
          &lt;xs:element name="PasswordId" type="xs:string" minOccurs="0"/&gt;
          &lt;xs:element name="NtlmHost" type="xs:string" minOccurs="0"/&gt;
          &lt;xs:element name="NtlmDomain" type="xs:string" minOccurs="0"/&gt;
          &lt;xs:element name="TlsVersion" type="xs:string" default="ANY" minOccurs="0"/&gt;
          &lt;xs:element name="TlsKeyUse" type="tns:HttpConfigurationOptionType" default="default" minOccurs="0"/&gt;
          &lt;xs:element name="TlsKeystoreId" type="xs:string" minOccurs="0"/&gt;
          &lt;xs:element name="TlsKeystoreAlias" type="xs:string" minOccurs="0"/&gt;
          &lt;xs:element name="TlsCipherSuites" type="xs:string" minOccurs="0"/&gt;
          &lt;xs:element name="ConnectTimeout" type="xs:int" default="-1"/&gt;
          &lt;xs:element name="ReadTimeout" type="xs:int" default="-1"/&gt;
          &lt;xs:element name="FollowRedirects" type="xs:boolean" default="false"/&gt;
          &lt;xs:element name="ProxyUse" type="tns:HttpConfigurationOptionType" default="default" minOccurs="0"/&gt;
          &lt;xs:element name="ProxyConfiguration" type="tns:HttpProxyConfigurationType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="HttpProxyConfigurationType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="Host" type="xs:string" minOccurs="0"/&gt;
      &lt;xs:element name="Port" type="xs:int"/&gt;
      &lt;xs:element name="Username" type="xs:string" minOccurs="0"/&gt;
      &lt;xs:element name="PasswordId" type="xs:string" minOccurs="0"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="HttpServiceMappingType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:ServiceMappingType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="UrlPattern" type="tns:StringPropertyType" minOccurs="0"/&gt;
          &lt;xs:element name="Verbs" minOccurs="0"&gt;
            &lt;xs:complexType&gt;
              &lt;xs:sequence&gt;
                &lt;xs:element name="Verb" type="tns:StringPropertyType" minOccurs="0" maxOccurs="unbounded"/&gt;
              &lt;/xs:sequence&gt;
            &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="IdentityProviderDetailType" abstract="true"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
      &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="IdentityProviderExtensionType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:choice minOccurs="0"&gt;
        &lt;xs:element name="FederatedIdentityProviderDetail" type="tns:FederatedIdentityProviderDetailType"/&gt;
        &lt;xs:element name="LdapIdentityProviderDetail" type="tns:LdapIdentityProviderDetailType"/&gt;
        &lt;xs:element name="BindOnlyLdapIdentityProviderDetail" type="tns:BindOnlyLdapIdentityProviderDetailType"/&gt;
        &lt;xs:element name="PolicyBackedIdentityProviderDetail" type="tns:PolicyBackedIdentityProviderDetailType"/&gt;
      &lt;/xs:choice&gt;
      &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
      &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="IdentityProviderType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Name" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="IdentityProviderType" type="tns:IdentityProviderTypePropertyType"/&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:IdentityProviderExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="IdentityProviderTypePropertyType"&gt;
    &lt;xs:simpleContent&gt;
      &lt;xs:extension base="tns:IdentityProviderTypeType"&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:simpleContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:simpleType name="IdentityProviderTypeType"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="Internal"/&gt;
      &lt;xs:enumeration value="LDAP"/&gt;
      &lt;xs:enumeration value="Federated"/&gt;
      &lt;xs:enumeration value="Simple LDAP"/&gt;
      &lt;xs:enumeration value="Policy-Backed"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
            
  &lt;xs:complexType name="ImportedPolicyReferenceType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:attribute name="guid" type="xs:string"/&gt;
    &lt;xs:attribute name="id" type="xs:string" use="required"/&gt;
    &lt;xs:attribute name="referenceId" type="xs:string" use="required"/&gt;
    &lt;xs:attribute name="referenceType" type="xs:string" use="required"/&gt;
    &lt;xs:attribute name="type" type="tns:ImportedPolicyReferenceTypeType" use="required"/&gt;
    &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:simpleType name="ImportedPolicyReferenceTypeType"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="Created"/&gt;
      &lt;xs:enumeration value="Mapped"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
            
  &lt;xs:complexType name="IntegerPropertyType"&gt;
    &lt;xs:simpleContent&gt;
      &lt;xs:extension base="xs:int"&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:simpleContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="IntegerValueType"&gt;
    &lt;xs:simpleContent&gt;
      &lt;xs:extension base="xs:int"&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:simpleContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="InterfaceTagType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Name" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="AddressPatterns" type="tns:StringListPropertyType"/&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="ItemReferenceType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="Name" type="xs:string" minOccurs="0"/&gt;
      &lt;xs:element name="Id" type="xs:string" minOccurs="0"/&gt;
      &lt;xs:element name="Type" type="xs:string"/&gt;
      &lt;xs:element name="TimeStamp" type="xs:dateTime" minOccurs="0"/&gt;
      &lt;xs:element ref="tns:Link" minOccurs="0" maxOccurs="unbounded"/&gt;
      &lt;xs:element name="Resource" minOccurs="0"&gt;
        &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
            &lt;xs:choice minOccurs="0" maxOccurs="unbounded"&gt;
              &lt;xs:element ref="tns:ActiveConnector"/&gt;
              &lt;xs:element ref="tns:AssertionSecurityZone"/&gt;
              &lt;xs:element ref="tns:TrustedCertificate"/&gt;
              &lt;xs:element ref="tns:CassandraConnection"/&gt;
              &lt;xs:element ref="tns:ClusterProperty"/&gt;
              &lt;xs:element ref="tns:CustomKeyValue"/&gt;
              &lt;xs:element ref="tns:ResourceDocument"/&gt;
              &lt;xs:element ref="tns:EmailListener"/&gt;
              &lt;xs:element ref="tns:EncapsulatedAssertion"/&gt;
              &lt;xs:element ref="tns:FirewallRule"/&gt;
              &lt;xs:element ref="tns:Folder"/&gt;
              &lt;xs:element ref="tns:GenericEntity"/&gt;
              &lt;xs:element ref="tns:HttpConfiguration"/&gt;
              &lt;xs:element ref="tns:IdentityProvider"/&gt;
              &lt;xs:element ref="tns:InterfaceTag"/&gt;
              &lt;xs:element ref="tns:JDBCConnection"/&gt;
              &lt;xs:element ref="tns:JMSDestination"/&gt;
              &lt;xs:element ref="tns:ListenPort"/&gt;
              &lt;xs:element ref="tns:PolicyAlias"/&gt;
              &lt;xs:element ref="tns:Policy"/&gt;
              &lt;xs:element ref="tns:PolicyVersion"/&gt;
              &lt;xs:element ref="tns:PrivateKey"/&gt;
              &lt;xs:element ref="tns:PrivateKeyExportResult"/&gt;
              &lt;xs:element ref="tns:PrivateKeyGenerateCsrResult"/&gt;
              &lt;xs:element ref="tns:PrivateKeySignCsrResult"/&gt;
              &lt;xs:element ref="tns:RevocationCheckingPolicy"/&gt;
              &lt;xs:element ref="tns:Service"/&gt;
              &lt;xs:element ref="tns:Role"/&gt;
              &lt;xs:element ref="tns:SampleMessage"/&gt;
              &lt;xs:element ref="tns:SiteMinderConfiguration"/&gt;
              &lt;xs:element ref="tns:StoredPassword"/&gt;
              &lt;xs:element ref="tns:SecurityZone"/&gt;
              &lt;xs:element ref="tns:ServiceAlias"/&gt;
              &lt;xs:element ref="tns:DependencyList"/&gt;
              &lt;xs:element ref="tns:Mappings"/&gt;
              &lt;xs:element ref="tns:List"/&gt;
              &lt;xs:element ref="tns:Bundle"/&gt;
              &lt;xs:element ref="tns:User"/&gt;
              &lt;xs:element ref="tns:Group"/&gt;
              &lt;xs:element ref="tns:CertificateData"/&gt;
              &lt;xs:element ref="tns:WorkQueue"/&gt;
              &lt;xs:element ref="tns:ScheduledTask"/&gt;
              &lt;xs:element ref="tns:ServerModuleFile"/&gt;
              &lt;xs:element ref="tns:PolicyBackedService"/&gt;
              &lt;xs:element ref="tns:SolutionKit"/&gt;
              &lt;xs:any processContents="lax" namespace="##other"/&gt;
            &lt;/xs:choice&gt;
          &lt;/xs:sequence&gt;
        &lt;/xs:complexType&gt;
      &lt;/xs:element&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="ItemsListReferenceType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="Name" type="xs:string" minOccurs="0"/&gt;
      &lt;xs:element name="Id" type="xs:string" minOccurs="0"/&gt;
      &lt;xs:element name="Type" type="xs:string"/&gt;
      &lt;xs:element name="TimeStamp" type="xs:dateTime" minOccurs="0"/&gt;
      &lt;xs:element ref="tns:Link" minOccurs="0" maxOccurs="unbounded"/&gt;
      &lt;xs:element ref="tns:Item" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="JDBCConnectionType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Name" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="Enabled" type="tns:BooleanPropertyType"/&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:JdbcExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="JdbcExtensionType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="DriverClass" type="tns:StringPropertyType"/&gt;
      &lt;xs:element name="JdbcUrl" type="tns:StringPropertyType"/&gt;
      &lt;xs:element name="ConnectionProperties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
      &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
      &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="JMSConnectionType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="ProviderType" type="tns:JMSProviderTypePropertyType" minOccurs="0"/&gt;
      &lt;xs:element name="Template" type="tns:BooleanPropertyType" minOccurs="0"/&gt;
      &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
      &lt;xs:element name="ContextPropertiesTemplate" type="tns:PropertiesMapType" minOccurs="0"/&gt;
      &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
      &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:attribute name="id" type="xs:string"/&gt;
    &lt;xs:attribute name="version" type="xs:int"/&gt;
    &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="JMSDestinationDetailType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="Name" type="tns:StringPropertyType"/&gt;
      &lt;xs:element name="DestinationName" type="tns:StringPropertyType" minOccurs="0"/&gt;
      &lt;xs:element name="Inbound" type="tns:BooleanPropertyType"/&gt;
      &lt;xs:element name="Enabled" type="tns:BooleanPropertyType"/&gt;
      &lt;xs:element name="Template" type="tns:BooleanPropertyType" minOccurs="0"/&gt;
      &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
      &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
      &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:attribute name="id" type="xs:string"/&gt;
    &lt;xs:attribute name="version" type="xs:int"/&gt;
    &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="JMSDestinationType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="JMSDestinationDetail" type="tns:JMSDestinationDetailType"/&gt;
          &lt;xs:element name="JMSConnection" type="tns:JMSConnectionType" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="JMSProviderTypePropertyType"&gt;
    &lt;xs:simpleContent&gt;
      &lt;xs:extension base="tns:JMSProviderTypeType"&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:simpleContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:simpleType name="JMSProviderTypeType"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="TIBCO EMS"/&gt;
      &lt;xs:enumeration value="WebSphere MQ over LDAP"/&gt;
      &lt;xs:enumeration value="WebLogic JMS"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
            
  &lt;xs:complexType name="LdapIdentityProviderDetailType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:IdentityProviderDetailType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="SourceType" type="tns:StringPropertyType" minOccurs="0"/&gt;
          &lt;xs:element name="ServerUrls" type="tns:StringListPropertyType"/&gt;
          &lt;xs:element name="UseSslClientAuthentication" type="tns:BooleanPropertyType" minOccurs="0"/&gt;
          &lt;xs:element name="SslKeyReference" type="tns:ReferenceType" minOccurs="0"/&gt;
          &lt;xs:element name="SearchBase" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="BindDn" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="BindPassword" type="tns:StringPropertyType" minOccurs="0"/&gt;
          &lt;xs:element name="UserMappings" type="tns:LdapIdentityProviderMappingListPropertyType" minOccurs="0"/&gt;
          &lt;xs:element name="GroupMappings" type="tns:LdapIdentityProviderMappingListPropertyType" minOccurs="0"/&gt;
          &lt;xs:element name="SpecifiedAttributes" type="tns:StringListPropertyType" minOccurs="0"/&gt;
          &lt;xs:element name="NtlmProperties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="LdapIdentityProviderMappingListPropertyType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="Mapping" type="tns:LdapIdentityProviderMappingType" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="LdapIdentityProviderMappingType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="ObjectClass" type="tns:StringPropertyType"/&gt;
      &lt;xs:element name="Mappings" type="tns:PropertiesMapType"/&gt;
      &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
      &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
      &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="LinkType"&gt;
    &lt;xs:sequence/&gt;
    &lt;xs:attribute name="rel" type="xs:string" use="required"/&gt;
    &lt;xs:attribute name="uri" type="xs:string" use="required"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="ListenPortType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Name" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="Enabled" type="tns:BooleanPropertyType"/&gt;
          &lt;xs:element name="Protocol" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="Interface" type="tns:StringPropertyType" minOccurs="0"/&gt;
          &lt;xs:element name="Port" type="tns:IntegerPropertyType"/&gt;
          &lt;xs:element name="EnabledFeatures" type="tns:StringListPropertyType"/&gt;
          &lt;xs:element name="TargetServiceReference" type="tns:ReferenceType" minOccurs="0"/&gt;
          &lt;xs:element name="TlsSettings" type="tns:TlsSettingsType" minOccurs="0"/&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="LongValueType"&gt;
    &lt;xs:simpleContent&gt;
      &lt;xs:extension base="xs:long"&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:simpleContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="ManagedObjectType" abstract="true"&gt;
    &lt;xs:sequence/&gt;
    &lt;xs:attribute name="id" type="xs:string"/&gt;
    &lt;xs:attribute name="version" type="xs:int"/&gt;
    &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="MappingsType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element ref="tns:Mapping" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="MappingType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:attribute name="action" type="tns:action"/&gt;
    &lt;xs:attribute name="actionTaken" type="tns:actionTaken"/&gt;
    &lt;xs:attribute name="errorType" type="tns:errorType"/&gt;
    &lt;xs:attribute name="srcId" type="xs:string"/&gt;
    &lt;xs:attribute name="srcUri" type="xs:string"/&gt;
    &lt;xs:attribute name="targetId" type="xs:string"/&gt;
    &lt;xs:attribute name="targetUri" type="xs:string"/&gt;
    &lt;xs:attribute name="type" type="xs:string"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="PasswordFormattedType"&gt;
    &lt;xs:simpleContent&gt;
      &lt;xs:extension base="xs:string"&gt;
        &lt;xs:attribute name="bundleKey" type="xs:string"/&gt;
        &lt;xs:attribute name="format" type="xs:string"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:simpleContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="PolicyAliasType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="PolicyReference" type="tns:ReferenceType"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:attribute name="folderId" type="xs:string"/&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="PolicyBackedIdentityProviderDetailType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:IdentityProviderDetailType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="AuthenticationPolicyId" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="DefaultRoleAssignmentId" type="tns:StringPropertyType" minOccurs="0"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="PolicyBackedServiceOperationArgumentType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="PolicyId" type="tns:StringPropertyType" minOccurs="0"/&gt;
      &lt;xs:element name="OperationName" type="tns:StringPropertyType" minOccurs="0"/&gt;
      &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
      &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="PolicyBackedServiceOperationListPropertyType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element ref="tns:PolicyBackedServiceOperation" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="PolicyBackedServiceType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Name" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="InterfaceName" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="PolicyBackedServiceOperations" type="tns:PolicyBackedServiceOperationListPropertyType" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="PolicyDetailType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="Name" type="tns:StringPropertyType"/&gt;
      &lt;xs:element name="PolicyType" type="tns:PolicyTypePropertyType"/&gt;
      &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
      &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
      &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:attribute name="folderId" type="xs:string"/&gt;
    &lt;xs:attribute name="guid" type="xs:string"/&gt;
    &lt;xs:attribute name="id" type="xs:string"/&gt;
    &lt;xs:attribute name="version" type="xs:int"/&gt;
    &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="PolicyExportResultType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:ManagedObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Resource" type="tns:ResourceType"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="PolicyImportContextType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:ManagedObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Resource" type="tns:ResourceType"/&gt;
          &lt;xs:element name="PolicyReferenceInstructions" minOccurs="0"&gt;
            &lt;xs:complexType&gt;
              &lt;xs:sequence&gt;
                &lt;xs:element name="PolicyReferenceInstruction" type="tns:PolicyReferenceInstructionType" maxOccurs="unbounded"/&gt;
              &lt;/xs:sequence&gt;
            &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="PolicyImportResultType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:ManagedObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Warnings" minOccurs="0"&gt;
            &lt;xs:complexType&gt;
              &lt;xs:sequence&gt;
                &lt;xs:element name="Warning" type="tns:StringPropertyType" maxOccurs="unbounded"/&gt;
              &lt;/xs:sequence&gt;
            &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;xs:element name="ImportedPolicyReferences" minOccurs="0"&gt;
            &lt;xs:complexType&gt;
              &lt;xs:sequence&gt;
                &lt;xs:element name="ImportedPolicyReference" type="tns:ImportedPolicyReferenceType" maxOccurs="unbounded"/&gt;
              &lt;/xs:sequence&gt;
            &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="PolicyReferenceInstructionType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
      &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:attribute name="mappedName" type="xs:string"/&gt;
    &lt;xs:attribute name="mappedReferenceId" type="xs:string"/&gt;
    &lt;xs:attribute name="type" type="tns:PolicyReferenceInstructionTypeType" use="required"/&gt;
    &lt;xs:attribute name="referenceId" type="xs:string" use="required"/&gt;
    &lt;xs:attribute name="referenceType" type="xs:string" use="required"/&gt;
    &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:simpleType name="PolicyReferenceInstructionTypeType"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="Delete"/&gt;
      &lt;xs:enumeration value="Ignore"/&gt;
      &lt;xs:enumeration value="Map"/&gt;
      &lt;xs:enumeration value="Rename"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
            
  &lt;xs:complexType name="PolicyType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="PolicyDetail" type="tns:PolicyDetailType"/&gt;
          &lt;xs:element name="Resources"&gt;
            &lt;xs:complexType&gt;
              &lt;xs:sequence&gt;
                &lt;xs:element ref="tns:ResourceSet" maxOccurs="unbounded"/&gt;
              &lt;/xs:sequence&gt;
            &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:attribute name="guid" type="xs:string"/&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="PolicyTypePropertyType"&gt;
    &lt;xs:simpleContent&gt;
      &lt;xs:extension base="tns:PolicyTypeType"&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:simpleContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:simpleType name="PolicyTypeType"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="Include"/&gt;
      &lt;xs:enumeration value="Internal"/&gt;
      &lt;xs:enumeration value="Global"/&gt;
      &lt;xs:enumeration value="Identity Provider"/&gt;
      &lt;xs:enumeration value="Service Operation"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
            
  &lt;xs:complexType name="PolicyValidationContextType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:ManagedObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="PolicyType" type="tns:PolicyTypePropertyType" minOccurs="0"/&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Resources" minOccurs="0"&gt;
            &lt;xs:complexType&gt;
              &lt;xs:sequence&gt;
                &lt;xs:element ref="tns:ResourceSet" maxOccurs="unbounded"/&gt;
              &lt;/xs:sequence&gt;
            &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="PolicyValidationMessageType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="AssertionPath"&gt;
        &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
            &lt;xs:element name="Assertion" type="tns:AssertionDetailType" maxOccurs="unbounded"/&gt;
          &lt;/xs:sequence&gt;
        &lt;/xs:complexType&gt;
      &lt;/xs:element&gt;
      &lt;xs:element name="Message" type="tns:StringPropertyType"/&gt;
      &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
      &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:attribute name="assertionOrdinal" type="xs:int" use="required"/&gt;
    &lt;xs:attribute name="level" type="xs:string" use="required"/&gt;
    &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="PolicyValidationResultType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:ManagedObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="ValidationStatus" type="tns:ValidationStatusPropertyType"/&gt;
          &lt;xs:element name="ValidationMessages" minOccurs="0"&gt;
            &lt;xs:complexType&gt;
              &lt;xs:sequence&gt;
                &lt;xs:element name="ValidationMessage" type="tns:PolicyValidationMessageType" maxOccurs="unbounded"/&gt;
              &lt;/xs:sequence&gt;
            &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="PolicyVersionType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="ordinal" type="xs:long"/&gt;
          &lt;xs:element name="comment" type="xs:string" minOccurs="0"/&gt;
          &lt;xs:element name="policyId" type="xs:string" minOccurs="0"/&gt;
          &lt;xs:element name="time" type="xs:long"/&gt;
          &lt;xs:element name="active" type="xs:boolean"/&gt;
          &lt;xs:element name="xml" type="xs:string" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="PrivateKeyCreationContextType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:ManagedObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Dn" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:attribute name="securityZoneId" type="xs:string"/&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="PrivateKeyExportContextType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:ManagedObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Alias" type="tns:StringPropertyType" minOccurs="0"/&gt;
          &lt;xs:element name="Password" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="PrivateKeyExportResultType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:ManagedObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Pkcs12Data" type="tns:BinaryPropertyType"/&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="PrivateKeyGenerateCsrContextType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:ManagedObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Dn" type="tns:StringPropertyType" minOccurs="0"/&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="PrivateKeyGenerateCsrResultType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:ManagedObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="CsrData" type="tns:BinaryPropertyType"/&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="PrivateKeyImportContextType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:ManagedObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Pkcs12Data" type="tns:BinaryPropertyType"/&gt;
          &lt;xs:element name="Alias" type="tns:StringPropertyType" minOccurs="0"/&gt;
          &lt;xs:element name="Password" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:attribute name="securityZoneId" type="xs:string"/&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="PrivateKeySignCertResultType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="CertData" type="tns:StringPropertyType"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="PrivateKeySpecialPurposeContextType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:ManagedObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="SpecialPurposes" type="tns:StringListPropertyType"/&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="PrivateKeyType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="CertificateChain"&gt;
            &lt;xs:complexType&gt;
              &lt;xs:sequence&gt;
                &lt;xs:element ref="tns:CertificateData" maxOccurs="unbounded"/&gt;
              &lt;/xs:sequence&gt;
            &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:attribute name="alias" type="xs:string" use="required"/&gt;
        &lt;xs:attribute name="keystoreId" type="xs:string"/&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="PropertiesMapEntryType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:choice&gt;
        &lt;xs:element ref="tns:Value"/&gt;
        &lt;xs:element ref="tns:StringValue"/&gt;
        &lt;xs:element ref="tns:BooleanValue"/&gt;
        &lt;xs:element ref="tns:IntegerValue"/&gt;
        &lt;xs:element ref="tns:LongValue"/&gt;
        &lt;xs:element ref="tns:DateValue"/&gt;
      &lt;/xs:choice&gt;
      &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:attribute name="key" type="xs:string"/&gt;
    &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="PropertiesMapType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="Property" type="tns:PropertiesMapEntryType" minOccurs="0" maxOccurs="unbounded"/&gt;
      &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:simpleType name="RbacRolePermissionOperationType"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="CREATE"/&gt;
      &lt;xs:enumeration value="READ"/&gt;
      &lt;xs:enumeration value="UPDATE"/&gt;
      &lt;xs:enumeration value="DELETE"/&gt;
      &lt;xs:enumeration value="OTHER"/&gt;
      &lt;xs:enumeration value="NONE"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
            
  &lt;xs:simpleType name="RbacRolePredicateType"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="AttributePredicate"/&gt;
      &lt;xs:enumeration value="EntityFolderAncestryPredicate"/&gt;
      &lt;xs:enumeration value="FolderPredicate"/&gt;
      &lt;xs:enumeration value="ObjectIdentityPredicate"/&gt;
      &lt;xs:enumeration value="SecurityZonePredicate"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
            
  &lt;xs:complexType name="RbacRoleType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="name" type="xs:string"/&gt;
          &lt;xs:element name="description" type="xs:string" minOccurs="0"/&gt;
          &lt;xs:element name="userCreated" type="xs:boolean"/&gt;
          &lt;xs:element name="permissions" minOccurs="0"&gt;
            &lt;xs:complexType&gt;
              &lt;xs:sequence&gt;
                &lt;xs:element name="permission" type="tns:RolePermissionType" minOccurs="0" maxOccurs="unbounded"/&gt;
              &lt;/xs:sequence&gt;
            &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;xs:element name="assignments" minOccurs="0"&gt;
            &lt;xs:complexType&gt;
              &lt;xs:sequence&gt;
                &lt;xs:element name="assignment" type="tns:RoleAssignmentType" minOccurs="0" maxOccurs="unbounded"/&gt;
              &lt;/xs:sequence&gt;
            &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
          &lt;xs:element name="entityType" type="xs:string" minOccurs="0"/&gt;
          &lt;xs:element name="entityID" type="xs:string" minOccurs="0"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="ReferenceListPropertyType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="Reference" type="tns:ReferenceType" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:attribute name="resourceUri" type="xs:string"/&gt;
    &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="ReferenceType"&gt;
    &lt;xs:sequence/&gt;
    &lt;xs:attribute name="id" type="xs:string" use="required"/&gt;
    &lt;xs:attribute name="resourceUri" type="xs:string"/&gt;
    &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="RemoveAssignmentsContextType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:ManagedObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="assignments" minOccurs="0"&gt;
            &lt;xs:complexType&gt;
              &lt;xs:sequence&gt;
                &lt;xs:element name="assignmentId" type="xs:string" minOccurs="0" maxOccurs="unbounded"/&gt;
              &lt;/xs:sequence&gt;
            &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="ResourceDocumentType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Resource" type="tns:ResourceType" minOccurs="0"/&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="ResourceSetType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="Resource" type="tns:ResourceType" minOccurs="0" maxOccurs="unbounded"/&gt;
      &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
      &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:attribute name="rootUrl" type="xs:string"/&gt;
    &lt;xs:attribute name="tag" type="xs:string" use="required"/&gt;
    &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="ResourceType"&gt;
    &lt;xs:simpleContent&gt;
      &lt;xs:extension base="xs:string"&gt;
        &lt;xs:attribute name="id" type="xs:ID"/&gt;
        &lt;xs:attribute name="sourceUrl" type="xs:string"/&gt;
        &lt;xs:attribute name="type" type="xs:string" use="required"/&gt;
        &lt;xs:attribute name="version" type="xs:int"/&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:simpleContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="RevocationCheckingPolicyItem"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="Type" type="tns:RevocationCheckingPolicyItemType"/&gt;
      &lt;xs:element name="Url" type="xs:string"/&gt;
      &lt;xs:element name="AllowIssuerSignature" type="xs:boolean"/&gt;
      &lt;xs:element name="TrustedSigners" type="xs:string" minOccurs="0" maxOccurs="unbounded"/&gt;
      &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
      &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:simpleType name="RevocationCheckingPolicyItemType"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="CRL from certificate URL"/&gt;
      &lt;xs:enumeration value="CRL from URL"/&gt;
      &lt;xs:enumeration value="OCSP from certificate URL"/&gt;
      &lt;xs:enumeration value="OCSP from URL"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
            
  &lt;xs:complexType name="RevocationCheckingPolicyType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Name" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="DefaultPolicy" type="xs:boolean" minOccurs="0"/&gt;
          &lt;xs:element name="ContinueOnServerUnavailable" type="xs:boolean" minOccurs="0"/&gt;
          &lt;xs:element name="DefaultSuccess" type="xs:boolean" minOccurs="0"/&gt;
          &lt;xs:element name="RevocationCheckItems" type="tns:RevocationCheckingPolicyItem" minOccurs="0" maxOccurs="unbounded"/&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="RoleAssignmentType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="providerId" type="xs:string"/&gt;
          &lt;xs:element name="identityId" type="xs:string" minOccurs="0"/&gt;
          &lt;xs:element name="identityName" type="xs:string" minOccurs="0"/&gt;
          &lt;xs:element name="entityType" type="xs:string" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="RolePermissionType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="operationType" type="tns:RbacRolePermissionOperationType"/&gt;
          &lt;xs:element name="otherOperationName" type="xs:string" minOccurs="0"/&gt;
          &lt;xs:element name="entityType" type="xs:string" minOccurs="0"/&gt;
          &lt;xs:element name="predicates" minOccurs="0"&gt;
            &lt;xs:complexType&gt;
              &lt;xs:sequence&gt;
                &lt;xs:element name="predicate" type="tns:RolePredicateType" minOccurs="0" maxOccurs="unbounded"/&gt;
              &lt;/xs:sequence&gt;
            &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="RolePredicateType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="type" type="tns:RbacRolePredicateType"/&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="SampleMessageType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Name" type="xs:string"/&gt;
          &lt;xs:element name="ServiceId" type="xs:string" minOccurs="0"/&gt;
          &lt;xs:element name="Operation" type="xs:string" minOccurs="0"/&gt;
          &lt;xs:element name="Xml" type="xs:string"/&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:simpleType name="ScheduledTaskJobStatusType"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="Scheduled"/&gt;
      &lt;xs:enumeration value="Completed"/&gt;
      &lt;xs:enumeration value="Disabled"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
            
  &lt;xs:simpleType name="ScheduledTaskJobTypeType"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="One time"/&gt;
      &lt;xs:enumeration value="Recurring"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
            
  &lt;xs:complexType name="ScheduledTaskType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Name" type="xs:string"/&gt;
          &lt;xs:element name="PolicyReference" type="tns:ReferenceType"/&gt;
          &lt;xs:element name="OneNode" type="xs:boolean"/&gt;
          &lt;xs:element name="JobType" type="tns:ScheduledTaskJobTypeType"/&gt;
          &lt;xs:element name="JobStatus" type="tns:ScheduledTaskJobStatusType"/&gt;
          &lt;xs:element name="ExecutionDate" type="xs:dateTime" minOccurs="0"/&gt;
          &lt;xs:element name="CronExpression" type="xs:string" minOccurs="0"/&gt;
          &lt;xs:element name="ExecuteOnCreate" type="xs:boolean" minOccurs="0"/&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="SecurityZoneableObjectType" abstract="true"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:ManagedObjectType"&gt;
        &lt;xs:sequence/&gt;
        &lt;xs:attribute name="securityZoneId" type="xs:string"/&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="SecurityZoneType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:ManagedObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Name" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="Description" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="PermittedEntityTypes" type="tns:StringListPropertyType"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:simpleType name="ServerModuleFileModuleTypeType"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="Modular Assertion"/&gt;
      &lt;xs:enumeration value="Custom Assertion"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
            
  &lt;xs:complexType name="ServerModuleFileType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:ManagedObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Name" type="xs:string"/&gt;
          &lt;xs:element name="ModuleType" type="tns:ServerModuleFileModuleTypeType"/&gt;
          &lt;xs:element name="ModuleSha256" type="xs:string"/&gt;
          &lt;xs:element name="ModuleData" type="tns:BinaryPropertyType" minOccurs="0"/&gt;
          &lt;xs:element name="Signature" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="ServiceAliasType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="ServiceReference" type="tns:ReferenceType"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:attribute name="folderId" type="xs:string"/&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="ServiceDetailType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="Name" type="tns:StringPropertyType"/&gt;
      &lt;xs:element name="Enabled" type="tns:BooleanPropertyType"/&gt;
      &lt;xs:element name="ServiceMappings" minOccurs="0"&gt;
        &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
            &lt;xs:choice minOccurs="0" maxOccurs="unbounded"&gt;
              &lt;xs:element ref="tns:HttpMapping"/&gt;
              &lt;xs:element ref="tns:SoapMapping"/&gt;
            &lt;/xs:choice&gt;
          &lt;/xs:sequence&gt;
        &lt;/xs:complexType&gt;
      &lt;/xs:element&gt;
      &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
      &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
      &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:attribute name="folderId" type="xs:string"/&gt;
    &lt;xs:attribute name="id" type="xs:string"/&gt;
    &lt;xs:attribute name="version" type="xs:int"/&gt;
    &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="ServiceMappingType" abstract="true"&gt;
    &lt;xs:sequence/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="ServiceType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="ServiceDetail" type="tns:ServiceDetailType"/&gt;
          &lt;xs:element name="Resources"&gt;
            &lt;xs:complexType&gt;
              &lt;xs:sequence&gt;
                &lt;xs:element ref="tns:ResourceSet" maxOccurs="unbounded"/&gt;
              &lt;/xs:sequence&gt;
            &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="SiteMinderConfigurationType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Name" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="Address" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="Hostname" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="HostConfiguration" type="tns:StringPropertyType" minOccurs="0"/&gt;
          &lt;xs:element name="UserName" type="tns:StringPropertyType" minOccurs="0"/&gt;
          &lt;xs:element name="PasswordId" type="tns:StringPropertyType" minOccurs="0"/&gt;
          &lt;xs:element name="Enabled" type="tns:BooleanPropertyType"/&gt;
          &lt;xs:element name="FipsMode" type="tns:IntegerPropertyType" minOccurs="0"/&gt;
          &lt;xs:element name="IpCheck" type="tns:BooleanPropertyType"/&gt;
          &lt;xs:element name="UpdateSsoToken" type="tns:BooleanPropertyType"/&gt;
          &lt;xs:element name="ClusterThreshold" type="tns:IntegerPropertyType" minOccurs="0"/&gt;
          &lt;xs:element name="NonClusterFailover" type="tns:BooleanPropertyType"/&gt;
          &lt;xs:element name="Secret" type="tns:StringPropertyType" minOccurs="0"/&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="SoapServiceMappingType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:ServiceMappingType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Lax" type="tns:BooleanPropertyType"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="SolutionKitType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:ManagedObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Name" type="xs:string"/&gt;
          &lt;xs:element name="SolutionKitGuid" type="xs:string"/&gt;
          &lt;xs:element name="SolutionKitVersion" type="xs:string"/&gt;
          &lt;xs:element name="ParentReference" type="tns:ReferenceType" minOccurs="0"/&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="InstallProperties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="UninstallBundle" type="xs:string" minOccurs="0"/&gt;
          &lt;xs:element name="Mappings" type="xs:string"/&gt;
          &lt;xs:element name="LastUpdateTime" type="xs:long"/&gt;
          &lt;xs:element name="EntityOwnershipDescriptors" minOccurs="0"&gt;
            &lt;xs:complexType&gt;
              &lt;xs:sequence&gt;
                &lt;xs:element ref="tns:EntityOwnershipDescriptor" minOccurs="0" maxOccurs="unbounded"/&gt;
              &lt;/xs:sequence&gt;
            &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="StoredPasswordType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Name" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="Password" type="tns:StringPropertyType" minOccurs="0"/&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="StringListPropertyType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="StringValue" type="tns:StringPropertyType" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="StringPropertyType"&gt;
    &lt;xs:simpleContent&gt;
      &lt;xs:extension base="xs:string"&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:simpleContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="StringValueType"&gt;
    &lt;xs:simpleContent&gt;
      &lt;xs:extension base="xs:string"&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:simpleContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="TlsSettingsType" final="extension restriction"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="ClientAuthentication" type="tns:ClientAuthenticationPropertyType" minOccurs="0"/&gt;
      &lt;xs:element name="PrivateKeyReference" type="tns:ReferenceType" minOccurs="0"/&gt;
      &lt;xs:element name="EnabledVersions" type="tns:StringListPropertyType"/&gt;
      &lt;xs:element name="EnabledCipherSuites" type="tns:StringListPropertyType" minOccurs="0"/&gt;
      &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
      &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
      &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="TrustedCertificateExtensionType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="RevocationCheckingPolicyReference" type="tns:ReferenceType" minOccurs="0"/&gt;
      &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
      &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="TrustedCertificateType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Name" type="tns:StringPropertyType"/&gt;
          &lt;xs:element ref="tns:CertificateData"/&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:TrustedCertificateExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="UserType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:ManagedObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Login" type="xs:string"/&gt;
          &lt;xs:element name="Password" type="tns:PasswordFormattedType" minOccurs="0"/&gt;
          &lt;xs:element name="FirstName" type="xs:string" minOccurs="0"/&gt;
          &lt;xs:element name="LastName" type="xs:string" minOccurs="0"/&gt;
          &lt;xs:element name="Email" type="xs:string" minOccurs="0"/&gt;
          &lt;xs:element name="Department" type="xs:string" minOccurs="0"/&gt;
          &lt;xs:element name="SubjectDn" type="xs:string" minOccurs="0"/&gt;
          &lt;xs:element name="Properties" type="tns:PropertiesMapType" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:attribute name="providerId" type="xs:string" use="required"/&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="ValidationStatusPropertyType"&gt;
    &lt;xs:simpleContent&gt;
      &lt;xs:extension base="tns:ValidationStatusType"&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:simpleContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:simpleType name="ValidationStatusType"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="OK"/&gt;
      &lt;xs:enumeration value="Warning"/&gt;
      &lt;xs:enumeration value="Error"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
            
  &lt;xs:complexType name="ValueType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="Item" type="xs:anyType" nillable="true" minOccurs="0"/&gt;
      &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="VersionCommentType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:ManagedObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Comment" type="tns:StringPropertyType"/&gt;
          &lt;xs:element name="VersionNumber" type="tns:IntegerPropertyType" minOccurs="0"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
            
  &lt;xs:complexType name="WorkQueueType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="tns:SecurityZoneableObjectType"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="Name" type="xs:string"/&gt;
          &lt;xs:element name="MaxQueueSize" type="xs:int"/&gt;
          &lt;xs:element name="ThreadPoolMax" type="xs:int"/&gt;
          &lt;xs:element name="RejectPolicy" type="xs:string"/&gt;
          &lt;xs:element name="Extension" type="tns:ExtensionType" minOccurs="0"/&gt;
          &lt;xs:any processContents="lax" namespace="##other" minOccurs="0" maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:anyAttribute processContents="skip" namespace="##any"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
&lt;/xs:schema&gt;
</l7:Resource>
                            <l7:Resource sourceUrl="http://schemas.xmlsoap.org/ws/2004/08/eventing/eventing.wsdl" type="wsdl">&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#13;
&lt;!-- &#13;
(c) 2004 BEA Systems Inc., International Business Machines Corporation, Microsoft Corporation, Inc, Sun Microsytems, Inc, and TIBCO Software Inc. All rights reserved.&#13;
&#13;
BEA Systems Inc., International Business Machines Corporation, Microsoft Corporation, Inc, Sun Microsystems, Inc, and TIBCO Software Inc (collectively, the "Authors") hereby grant you permission to copy and display the WS-Eventing Specification (the "Specification", which includes WSDL and schema documents), in any medium without fee or royalty, provided that you include the following on ALL copies of the Specification, that you make:&#13;
&#13;
1.	A link or URL to the WS-Eventing Specification at one of the Authors' websites &#13;
2.	The copyright notice as shown in the WS-Eventing Specification. &#13;
&#13;
BEA, IBM, Microsoft, Sun, and TIBCO (collectively, the "Authors") each agree to grant you a license, under royalty-free and otherwise reasonable, non-discriminatory terms and conditions, to their respective essential patent claims that they deem necessary to implement the Specification. &#13;
&#13;
THE SPECIFICATION IS PROVIDED "AS IS," AND THE AUTHORS MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THE SPECIFICATION ARE SUITABLE FOR ANY PURPOSE; NOR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY THIRD PARTY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS. &#13;
&#13;
THE AUTHORS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THE SPECIFICATION. &#13;
&#13;
The name and trademarks of the Authors may NOT be used in any manner, including advertising or publicity pertaining to the Specification or its contents without specific, written prior permission. Title to copyright in the Specification will at all times remain with the Authors. &#13;
&#13;
No other rights are granted by implication, estoppel or otherwise.&#13;
--&gt;&#13;
&lt;wsdl:definitions&#13;
    targetNamespace='http://schemas.xmlsoap.org/ws/2004/08/eventing'&#13;
    xmlns:wse='http://schemas.xmlsoap.org/ws/2004/08/eventing'&#13;
    xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/'&#13;
    xmlns:xs='http://www.w3.org/2001/XMLSchema' &gt;&#13;
&#13;
  &lt;wsdl:types&gt;&#13;
    &lt;xs:schema&#13;
        targetNamespace='http://schemas.xmlsoap.org/ws/2004/08/eventing' &gt;&#13;
      &lt;xs:include schemaLocation='http://schemas.xmlsoap.org/ws/2004/08/eventing/eventing.xsd' /&gt;&#13;
    &lt;/xs:schema&gt;&#13;
  &lt;/wsdl:types&gt;&#13;
&#13;
  &lt;wsdl:message name='SubscribeMsg' &gt;&#13;
    &lt;wsdl:part name='body' element='wse:Subscribe' /&gt;&#13;
  &lt;/wsdl:message&gt;&#13;
  &lt;wsdl:message name='SubscribeResponseMsg' &gt;&#13;
    &lt;wsdl:part name='body' element='wse:SubscribeResponse' /&gt;&#13;
  &lt;/wsdl:message&gt;&#13;
&#13;
  &lt;wsdl:message name='RenewMsg' &gt;&#13;
    &lt;wsdl:part name='body' element='wse:Renew' /&gt;&#13;
  &lt;/wsdl:message&gt;&#13;
  &lt;wsdl:message name='RenewResponseMsg' &gt;&#13;
    &lt;wsdl:part name='body' element='wse:RenewResponse' /&gt;&#13;
  &lt;/wsdl:message&gt;&#13;
&#13;
  &lt;wsdl:message name='GetStatusMsg' &gt;&#13;
    &lt;wsdl:part name='body' element='wse:GetStatus' /&gt;&#13;
  &lt;/wsdl:message&gt;&#13;
  &lt;wsdl:message name='GetStatusResponseMsg' &gt;&#13;
    &lt;wsdl:part name='body' element='wse:GetStatusResponse' /&gt;&#13;
  &lt;/wsdl:message&gt;&#13;
&#13;
  &lt;wsdl:message name='UnsubscribeMsg' &gt;&#13;
    &lt;wsdl:part name='body' element='wse:Unsubscribe' /&gt;&#13;
  &lt;/wsdl:message&gt;&#13;
  &lt;wsdl:message name='UnsubscribeResponseMsg' /&gt;&#13;
&#13;
  &lt;wsdl:message name='SubscriptionEnd' &gt;&#13;
    &lt;wsdl:part name='body' element='wse:SubscriptionEnd' /&gt;&#13;
  &lt;/wsdl:message&gt;&#13;
&#13;
  &lt;wsdl:portType name='EventSource' &gt;&#13;
    &lt;wsdl:operation name='SubscribeOp' &gt;&#13;
      &lt;wsdl:input message='wse:SubscribeMsg' /&gt;&#13;
      &lt;wsdl:output message='wse:SubscribeResponseMsg' /&gt;&#13;
    &lt;/wsdl:operation&gt;&#13;
    &lt;wsdl:operation name='SubscriptionEnd' &gt;&#13;
      &lt;wsdl:output message='wse:SubscriptionEnd' /&gt;&#13;
    &lt;/wsdl:operation&gt;&#13;
  &lt;/wsdl:portType&gt;&#13;
&#13;
  &lt;wsdl:portType name='SubscriptionManager' &gt;&#13;
    &lt;wsdl:operation name='RenewOp' &gt;&#13;
      &lt;wsdl:input message='wse:RenewMsg' /&gt;&#13;
      &lt;wsdl:output message='wse:RenewResponseMsg' /&gt;&#13;
    &lt;/wsdl:operation&gt;&#13;
    &lt;wsdl:operation name='GetStatusOp' &gt;&#13;
      &lt;wsdl:input message='wse:GetStatusMsg' /&gt;&#13;
      &lt;wsdl:output message='wse:GetStatusResponseMsg' /&gt;&#13;
    &lt;/wsdl:operation&gt;&#13;
    &lt;wsdl:operation name='UnsubscribeOp' &gt;&#13;
      &lt;wsdl:input message='wse:UnsubscribeMsg' /&gt;&#13;
      &lt;wsdl:output message='wse:UnsubscribeResponseMsg' /&gt;&#13;
    &lt;/wsdl:operation&gt;&#13;
  &lt;/wsdl:portType&gt;&#13;
&lt;/wsdl:definitions&gt;&#13;
</l7:Resource>
                            <l7:Resource sourceUrl="http://schemas.xmlsoap.org/ws/2004/08/addressing/addressing.xsd" type="xmlschema">&lt;?xml version="1.0"?&gt;&#13;
&lt;!--&#13;
Copyright © 2002-2004 BEA Systems Inc., International Business Machines Corporation,&#13;
Microsoft Corporation, Inc, SAP AG, and Sun Microsystems, Inc.. All rights reserved.&#13;
&#13;
Permission to copy, display, perform, modify and distribute the WS-Addressing Specification,&#13;
and to authorize others to do the foregoing, in any medium without fee or royalty is hereby&#13;
granted for the purpose of developing and evaluating the WS-Addressing Specification.&#13;
&#13;
BEA, IBM, Microsoft, SAP AG, and Sun Microsystems (collectively, the "Authors") each agree&#13;
to grant a license to third parties, under royalty-free  and otherwise reasonable,&#13;
non-discriminatory terms and conditions, to their respective essential patent claims that&#13;
they deem necessary to implement the WS-Addressing Specification.&#13;
&#13;
DISCLAIMERS:&#13;
&#13;
THE WS-Addressing Specification IS PROVIDED "AS IS", AND THE AUTHORS MAKE NO REPRESENTATIONS&#13;
OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, WARRANTIES OF&#13;
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE&#13;
CONTENTS OF THE WS-Addressing Specification IS SUITABLE FOR ANY PURPOSE; NOR THAT THE&#13;
IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY THIRD PARTY PATENTS, COPYRIGHTS,&#13;
TRADEMARKS OR OTHER RIGHTS.&#13;
&#13;
THE AUTHORS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL&#13;
DAMAGES ARISING OUT OF ANY USE OF THE WS-Addressing Specification OR THE PERFORMANCE OR&#13;
IMPLEMENTATION OF THE CONTENTS THEREOF.&#13;
&#13;
You may remove these disclaimers from your modified versions of the WS-Addressing&#13;
Specification provided that you effectively disclaim all warranties and liabilities on behalf&#13;
of all copyright holders in the copies of any such modified versions you distribute.&#13;
&#13;
The name and trademarks of the Authors may NOT be used in any manner, including advertising&#13;
or publicity pertaining to the WS-Addressing Specification or its contents without specific,&#13;
written prior permission. Title to copyright in the WS-Addressing Specification will at all&#13;
times remain with the Authors.&#13;
&#13;
No other rights are granted by implication, estoppel or otherwise.&#13;
&#13;
--&gt;&#13;
&lt;xs:schema targetNamespace="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing" elementFormDefault="qualified" blockDefault="#all"&gt;&#13;
  &lt;!-- //////////////////// WS-Addressing //////////////////// --&gt;&#13;
  &lt;!-- Endpoint reference --&gt;&#13;
  &lt;xs:element name="EndpointReference" type="wsa:EndpointReferenceType"/&gt;&#13;
  &lt;xs:complexType name="EndpointReferenceType"&gt;&#13;
    &lt;xs:sequence&gt;&#13;
      &lt;xs:element name="Address" type="wsa:AttributedURI"/&gt;&#13;
      &lt;xs:element name="ReferenceProperties" type="wsa:ReferencePropertiesType" minOccurs="0"/&gt;&#13;
      &lt;xs:element name="ReferenceParameters" type="wsa:ReferenceParametersType" minOccurs="0"/&gt;&#13;
      &lt;xs:element name="PortType" type="wsa:AttributedQName" minOccurs="0"/&gt;&#13;
      &lt;xs:element name="ServiceName" type="wsa:ServiceNameType" minOccurs="0"/&gt;&#13;
      &lt;xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"&gt;&#13;
        &lt;xs:annotation&gt;&#13;
          &lt;xs:documentation&gt;&#13;
					 If "Policy" elements from namespace "http://schemas.xmlsoap.org/ws/2002/12/policy#policy" are used, they must appear first (before any extensibility elements).&#13;
					&lt;/xs:documentation&gt;&#13;
        &lt;/xs:annotation&gt;&#13;
      &lt;/xs:any&gt;&#13;
    &lt;/xs:sequence&gt;&#13;
    &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;&#13;
  &lt;/xs:complexType&gt;&#13;
  &lt;xs:complexType name="ReferencePropertiesType"&gt;&#13;
    &lt;xs:sequence&gt;&#13;
      &lt;xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/&gt;&#13;
    &lt;/xs:sequence&gt;&#13;
  &lt;/xs:complexType&gt;&#13;
  &lt;xs:complexType name="ReferenceParametersType"&gt;&#13;
    &lt;xs:sequence&gt;&#13;
      &lt;xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/&gt;&#13;
    &lt;/xs:sequence&gt;&#13;
  &lt;/xs:complexType&gt;&#13;
  &lt;xs:complexType name="ServiceNameType"&gt;&#13;
    &lt;xs:simpleContent&gt;&#13;
      &lt;xs:extension base="xs:QName"&gt;&#13;
        &lt;xs:attribute name="PortName" type="xs:NCName"/&gt;&#13;
        &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;&#13;
      &lt;/xs:extension&gt;&#13;
    &lt;/xs:simpleContent&gt;&#13;
  &lt;/xs:complexType&gt;&#13;
  &lt;!-- Message information header blocks --&gt;&#13;
  &lt;xs:element name="MessageID" type="wsa:AttributedURI"/&gt;&#13;
  &lt;xs:element name="RelatesTo" type="wsa:Relationship"/&gt;&#13;
  &lt;xs:element name="To" type="wsa:AttributedURI"/&gt;&#13;
  &lt;xs:element name="Action" type="wsa:AttributedURI"/&gt;&#13;
  &lt;xs:element name="From" type="wsa:EndpointReferenceType"/&gt;&#13;
  &lt;xs:element name="ReplyTo" type="wsa:EndpointReferenceType"/&gt;&#13;
  &lt;xs:element name="FaultTo" type="wsa:EndpointReferenceType"/&gt;&#13;
  &lt;xs:complexType name="Relationship"&gt;&#13;
    &lt;xs:simpleContent&gt;&#13;
      &lt;xs:extension base="xs:anyURI"&gt;&#13;
        &lt;xs:attribute name="RelationshipType" type="xs:QName" use="optional"/&gt;&#13;
        &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;&#13;
      &lt;/xs:extension&gt;&#13;
    &lt;/xs:simpleContent&gt;&#13;
  &lt;/xs:complexType&gt;&#13;
  &lt;xs:simpleType name="RelationshipTypeValues"&gt;&#13;
    &lt;xs:restriction base="xs:QName"&gt;&#13;
      &lt;xs:enumeration value="wsa:Reply"/&gt;&#13;
    &lt;/xs:restriction&gt;&#13;
  &lt;/xs:simpleType&gt;&#13;
  &lt;!--&#13;
    June 19, 2007: The ReplyAfter element is deprecated. The name of this element does not match the&#13;
    name (RetryAfter) used in the specification (http://www.w3.org/Submission/2004/SUBM-ws-addressing-20040810/).&#13;
  --&gt;&#13;
  &lt;xs:element name="ReplyAfter" type="wsa:ReplyAfterType"/&gt;&#13;
  &lt;xs:complexType name="ReplyAfterType"&gt;&#13;
    &lt;xs:simpleContent&gt;&#13;
      &lt;xs:extension base="xs:nonNegativeInteger"&gt;&#13;
        &lt;xs:anyAttribute namespace="##other"/&gt;&#13;
      &lt;/xs:extension&gt;&#13;
    &lt;/xs:simpleContent&gt;&#13;
  &lt;/xs:complexType&gt;&#13;
  &lt;!--&#13;
    June 19, 2007: The RetryAfter element has been added to be consistent with the specification&#13;
    (http://www.w3.org/Submission/2004/SUBM-ws-addressing-20040810/).&#13;
  --&gt;&#13;
  &lt;xs:element name="RetryAfter" type="wsa:RetryAfterType"/&gt;&#13;
  &lt;xs:complexType name="RetryAfterType"&gt;&#13;
    &lt;xs:simpleContent&gt;&#13;
      &lt;xs:extension base="xs:nonNegativeInteger"&gt;&#13;
        &lt;xs:anyAttribute namespace="##other"/&gt;&#13;
      &lt;/xs:extension&gt;&#13;
    &lt;/xs:simpleContent&gt;&#13;
  &lt;/xs:complexType&gt;&#13;
  &lt;xs:simpleType name="FaultSubcodeValues"&gt;&#13;
    &lt;xs:restriction base="xs:QName"&gt;&#13;
      &lt;xs:enumeration value="wsa:InvalidMessageInformationHeader"/&gt;&#13;
      &lt;xs:enumeration value="wsa:MessageInformationHeaderRequired"/&gt;&#13;
      &lt;xs:enumeration value="wsa:DestinationUnreachable"/&gt;&#13;
      &lt;xs:enumeration value="wsa:ActionNotSupported"/&gt;&#13;
      &lt;xs:enumeration value="wsa:EndpointUnavailable"/&gt;&#13;
    &lt;/xs:restriction&gt;&#13;
  &lt;/xs:simpleType&gt;&#13;
  &lt;xs:attribute name="Action" type="xs:anyURI"/&gt;&#13;
  &lt;!-- Common declarations and definitions --&gt;&#13;
  &lt;xs:complexType name="AttributedQName"&gt;&#13;
    &lt;xs:simpleContent&gt;&#13;
      &lt;xs:extension base="xs:QName"&gt;&#13;
        &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;&#13;
      &lt;/xs:extension&gt;&#13;
    &lt;/xs:simpleContent&gt;&#13;
  &lt;/xs:complexType&gt;&#13;
  &lt;xs:complexType name="AttributedURI"&gt;&#13;
    &lt;xs:simpleContent&gt;&#13;
      &lt;xs:extension base="xs:anyURI"&gt;&#13;
        &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;&#13;
      &lt;/xs:extension&gt;&#13;
    &lt;/xs:simpleContent&gt;&#13;
  &lt;/xs:complexType&gt;&#13;
&lt;/xs:schema&gt;&#13;
</l7:Resource>
                            <l7:Resource sourceUrl="http://www.w3.org/2001/xml.xsd" type="xmlschema">&lt;?xml version='1.0'?&gt;
&lt;xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xmlns:xs="http://www.w3.org/2001/XMLSchema" xml:lang="en"&gt;

 &lt;xs:annotation&gt;
  &lt;xs:documentation&gt;
   See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.

    This schema document describes the XML namespace, in a form
    suitable for import by other schema documents.

    Note that local names in this namespace are intended to be defined
    only by the World Wide Web Consortium or its subgroups.  The
    following names are currently defined in this namespace and should
    not be used with conflicting semantics by any Working Group,
    specification, or document instance:

    base (as an attribute name): denotes an attribute whose value
         provides a URI to be used as the base for interpreting any
         relative URIs in the scope of the element on which it
         appears; its value is inherited.  This name is reserved
         by virtue of its definition in the XML Base specification.

    id   (as an attribute name): denotes an attribute whose value
         should be interpreted as if declared to be of type ID.
         This name is reserved by virtue of its definition in the
         xml:id specification.

    lang (as an attribute name): denotes an attribute whose value
         is a language code for the natural language of the content of
         any element; its value is inherited.  This name is reserved
         by virtue of its definition in the XML specification.

    space (as an attribute name): denotes an attribute whose
         value is a keyword indicating what whitespace processing
         discipline is intended for the content of the element; its
         value is inherited.  This name is reserved by virtue of its
         definition in the XML specification.

    Father (in any context at all): denotes Jon Bosak, the chair of
         the original XML Working Group.  This name is reserved by
         the following decision of the W3C XML Plenary and
         XML Coordination groups:

             In appreciation for his vision, leadership and dedication
             the W3C XML Plenary on this 10th day of February, 2000
             reserves for Jon Bosak in perpetuity the XML name
             xml:Father
  &lt;/xs:documentation&gt;
 &lt;/xs:annotation&gt;

 &lt;xs:annotation&gt;
  &lt;xs:documentation&gt;This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang, xml:space or xml:id
        attributes on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &amp;lt;schema . . .&gt;
         . . .
         &amp;lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/xml.xsd"/&gt;

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &amp;lt;type . . .&gt;
         . . .
         &amp;lt;attributeGroup ref="xml:specialAttrs"/&gt;
 
         will define a type which will schema-validate an instance
         element with any of those attributes&lt;/xs:documentation&gt;
 &lt;/xs:annotation&gt;

 &lt;xs:annotation&gt;
  &lt;xs:documentation&gt;In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2007/08/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself, or with the XML namespace itself.  In other words, if the XML
   Schema or XML namespaces change, the version of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2007/08/xml.xsd will not change.
  &lt;/xs:documentation&gt;
 &lt;/xs:annotation&gt;

 &lt;xs:attribute name="lang"&gt;
  &lt;xs:annotation&gt;
   &lt;xs:documentation&gt;Attempting to install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values is probably never
         going to be a realistic possibility.  See
         RFC 3066 at http://www.ietf.org/rfc/rfc3066.txt and the IANA registry
         at http://www.iana.org/assignments/lang-tag-apps.htm for
         further information.

         The union allows for the 'un-declaration' of xml:lang with
         the empty string.&lt;/xs:documentation&gt;
  &lt;/xs:annotation&gt;
  &lt;xs:simpleType&gt;
   &lt;xs:union memberTypes="xs:language"&gt;
    &lt;xs:simpleType&gt;
     &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value=""/&gt;
     &lt;/xs:restriction&gt;
    &lt;/xs:simpleType&gt;
   &lt;/xs:union&gt;
  &lt;/xs:simpleType&gt;
 &lt;/xs:attribute&gt;

 &lt;xs:attribute name="space"&gt;
  &lt;xs:simpleType&gt;
   &lt;xs:restriction base="xs:NCName"&gt;
    &lt;xs:enumeration value="default"/&gt;
    &lt;xs:enumeration value="preserve"/&gt;
   &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
 &lt;/xs:attribute&gt;

 &lt;xs:attribute name="base" type="xs:anyURI"&gt;
  &lt;xs:annotation&gt;
   &lt;xs:documentation&gt;See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.&lt;/xs:documentation&gt;
  &lt;/xs:annotation&gt;
 &lt;/xs:attribute&gt;

 &lt;xs:attribute name="id" type="xs:ID"&gt;
  &lt;xs:annotation&gt;
   &lt;xs:documentation&gt;See http://www.w3.org/TR/xml-id/ for
                     information about this attribute.&lt;/xs:documentation&gt;
  &lt;/xs:annotation&gt;
 &lt;/xs:attribute&gt;

 &lt;xs:attributeGroup name="specialAttrs"&gt;
  &lt;xs:attribute ref="xml:base"/&gt;
  &lt;xs:attribute ref="xml:lang"/&gt;
  &lt;xs:attribute ref="xml:space"/&gt;
  &lt;xs:attribute ref="xml:id"/&gt;
 &lt;/xs:attributeGroup&gt;

&lt;/xs:schema&gt;</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Service>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>management.interface</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf367081130c38</l7:Id>
            <l7:Type>CLUSTER_PROPERTY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.644-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ClusterProperty id="fb3f1ba1a929b3396bcf367081130c38" version="0">
                    <l7:Name>management.interface</l7:Name>
                    <l7:Value>127.0.0.1</l7:Value>
                </l7:ClusterProperty>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>JVM Metrics</l7:Name>
            <l7:Id>843587c40009fff17b4945b27796ffc4</l7:Id>
            <l7:Type>SERVER_MODULE_FILE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.648-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ServerModuleFile id="843587c40009fff17b4945b27796ffc4" version="3">
                    <l7:Name>JVM Metrics</l7:Name>
                    <l7:ModuleType>Custom Assertion</l7:ModuleType>
                    <l7:ModuleSha256>c4f09f4aeeef22a51ad7b317e93b5ae7073c12750003bb8feb33233b3e319ff7</l7:ModuleSha256>
                    <l7:ModuleData></l7:ModuleData>
                    <l7:Signature>
                        <l7:Property key="cert">
                            <l7:StringValue>MIIBdjCCAR6gAwIBAgIJAOC+DREEgh+1MAkGByqGSM49BAEwGzEZMBcGA1UEAxMQcm9vdC5hcGltLmNhLmNvbTAeFw0xNTA4MDYyMzM5MTVaFw0zNTA4MDYyMzM5MTVaMCUxIzAhBgNVBAMTGnNpZ25lci5nYXRld2F5LmFwaW0uY2EuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEWR6rsgeDYY4nCkqjy12QBZW/U/dkWbM0NSEJnWwwDeKMD8rKgPygMKfZ3Gwbr134cYoqRtuE8rnYo4Oyxnm+NKNCMEAwHQYDVR0OBBYEFA/F83obUYIYLHnnXI5fObo/EMDIMB8GA1UdIwQYMBaAFOv2T4eG9aq4dDj8dGqF6Vj340LwMAkGByqGSM49BAEDRwAwRAIgIQrtZLIEZ6IXxPleal0AnnGE0wgq2MHzaWHAOm72KIgCIAWbYPKedEjKKcxv5vHuvbjAdUp1JhrnvnTCEWM7Zus7</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="signature">
                            <l7:StringValue>MEYCIQCMyopCfYLSabb5NK/8q/0/QtoBxvG1VMOYi+FO4cRLYwIhALcGI95OiX7kp2uAzT0y4Uld8ukzFmOHRe8WIwYvwB5i</l7:StringValue>
                        </l7:Property>
                    </l7:Signature>
                    <l7:Properties>
                        <l7:Property key="moduleAssertions">
                            <l7:StringValue>JvmMetricsAssertion</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="moduleFileName">
                            <l7:StringValue>JvmMetricsAssertion-sdk82-1.0-2541.sjar</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="moduleSize">
                            <l7:StringValue>142043</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:ServerModuleFile>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>System Statistics</l7:Name>
            <l7:Id>bccde94fe646e21c4ff13b641cb5a0e1</l7:Id>
            <l7:Type>SERVICE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.668-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Service id="bccde94fe646e21c4ff13b641cb5a0e1" version="2">
                    <l7:ServiceDetail folderId="fb3f1ba1a929b3396bcf367081130d6b" id="bccde94fe646e21c4ff13b641cb5a0e1" version="2">
                        <l7:Name>System Statistics</l7:Name>
                        <l7:Enabled>true</l7:Enabled>
                        <l7:ServiceMappings>
                            <l7:HttpMapping>
                                <l7:UrlPattern>/system/stats</l7:UrlPattern>
                                <l7:Verbs>
                                    <l7:Verb>GET</l7:Verb>
                                    <l7:Verb>POST</l7:Verb>
                                    <l7:Verb>PUT</l7:Verb>
                                    <l7:Verb>DELETE</l7:Verb>
                                </l7:Verbs>
                            </l7:HttpMapping>
                        </l7:ServiceMappings>
                        <l7:Properties>
                            <l7:Property key="internal">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="policyRevision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="tracingEnabled">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="wssProcessingEnabled">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:ServiceDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy" version="0">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: &gt;&gt;&gt;"/&gt;
            &lt;L7p:Enabled booleanValue="false"/&gt;
            &lt;L7p:LoggingOnly booleanValue="true"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;L7p:AuditAssertion&gt;
            &lt;L7p:Enabled booleanValue="false"/&gt;
        &lt;/L7p:AuditAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="SW50ZXJuYWwgU2VydmVyIEVycm9y"/&gt;
                &lt;L7p:VariableToSet stringValue="error.message"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Default code is 500. Override in policy if required"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="NTAw"/&gt;
                &lt;L7p:VariableToSet stringValue="error.code"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:CustomizeErrorResponse&gt;
                &lt;L7p:Content stringValue="${error.message} (${requestid})"/&gt;
                &lt;L7p:ExtraHeaders nameValuePairArray="included"/&gt;
                &lt;L7p:HttpStatus stringValue="${error.code}"/&gt;
            &lt;/L7p:CustomizeErrorResponse&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Initialise the error response"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// set the httpRouting.latency to -1"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="LTE="/&gt;
                &lt;L7p:VariableToSet stringValue="httpRouting.latency"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Set the httpRouting.latency to a default of -1 to supress audit errors"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="** Set up access control for the service"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Limit service to a specific listener"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${request.url.port}"/&gt;
                    &lt;L7p:Expression2 stringValue="8443"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="8443"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// limit to localhost calls. Useful when fronted by SNMP"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${request.tcp.remoteAddress}"/&gt;
                    &lt;L7p:Expression2 stringValue="${gateway.management.interface}"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="${gateway.management.interface}"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// access control"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="VW5hdXRob3JpemVk"/&gt;
                    &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Unauthorized"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="NDAx"/&gt;
                    &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Request denied: Unauthorized"/&gt;
                    &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Handle error condition and fail with 401"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// security block"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:AddHeader&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Set to local address because we know it's local"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:HeaderName stringValue="X-Forwarded-For"/&gt;
                &lt;L7p:HeaderValue stringValue="127.0.0.1"/&gt;
                &lt;L7p:RemoveExisting booleanValue="true"/&gt;
            &lt;/L7p:AddHeader&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Modify X-Forwarded-for to be local address 127.0.0.1"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:CustomAssertion&gt;
                &lt;L7p:base64SerializedValue&gt;rO0ABXNyADFjb20ubDd0ZWNoLnBvbGljeS5hc3NlcnRpb24uQ3VzdG9tQXNzZXJ0aW9uSG9sZGVyZtcreFwddTICAAlaAAxpc1VpQXV0b09wZW5MAApjYXRlZ29yaWVzdAAPTGphdmEvdXRpbC9TZXQ7TAAIY2F0ZWdvcnl0ACpMY29tL2w3dGVjaC9wb2xpY3kvYXNzZXJ0aW9uL2V4dC9DYXRlZ29yeTtMAA9jdXN0b21Bc3NlcnRpb250ADFMY29tL2w3dGVjaC9wb2xpY3kvYXNzZXJ0aW9uL2V4dC9DdXN0b21Bc3NlcnRpb247TAAUY3VzdG9tTW9kdWxlRmlsZU5hbWV0ABJMamF2YS9sYW5nL1N0cmluZztMAA9kZXNjcmlwdGlvblRleHRxAH4ABEwAD3BhbGV0dGVOb2RlTmFtZXEAfgAETAAOcG9saWN5Tm9kZU5hbWVxAH4ABEwAHnJlZ2lzdGVyZWRDdXN0b21GZWF0dXJlU2V0TmFtZXEAfgAEeHIAJWNvbS5sN3RlY2gucG9saWN5LmFzc2VydGlvbi5Bc3NlcnRpb27bX2OZPL2isQIAAloAB2VuYWJsZWRMABBhc3NlcnRpb25Db21tZW50dAAvTGNvbS9sN3RlY2gvcG9saWN5L2Fzc2VydGlvbi9Bc3NlcnRpb24kQ29tbWVudDt4cAFwAXNyABFqYXZhLnV0aWwuSGFzaFNldLpEhZWWuLc0AwAAeHB3DAAAAAI/QAAAAAAAAXNyAChjb20ubDd0ZWNoLnBvbGljeS5hc3NlcnRpb24uZXh0LkNhdGVnb3J5WrCcZaFE/jUCAAJJAAVteUtleUwABm15TmFtZXEAfgAEeHAAAAALdAAQQ3VzdG9tQXNzZXJ0aW9uc3hwc3IAO2NvbS5sN3RlY2guY3VzdG9tLmFzc2VydGlvbnMuanZtbWV0cmljcy5Kdm1NZXRyaWNzQXNzZXJ0aW9uoHYQkSIjG8UCAARaAAppbmNsdWRlQWxsWgAKc3RhY2tUcmFjZUkAF3N0YWNrVHJhY2VEZXB0aE1heFZhbHVlTAAOdmFyaWFibGVQcmVmaXhxAH4ABHhwAAAAAAAAdAAKanZtTWV0cmljc3QANGFhOTE2NWViMjc0ZmRlN2VmNzMxZjU0MmU1NTQ1MDU4N2YyNjVjMWQ3ZjIzMzcyYi5qYXJ0AA9HZXQgSlZNIE1ldHJpY3N0AA9HZXQgSlZNIE1ldHJpY3N0AA9HZXQgSlZNIE1ldHJpY3Nw&lt;/L7p:base64SerializedValue&gt;
            &lt;/L7p:CustomAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="JHtqdm1NZXRyaWNzLmRvY3VtZW50fQ=="/&gt;
                &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                &lt;L7p:DataType variableDataType="message"/&gt;
                &lt;L7p:VariableToSet stringValue="metricsOutput"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="threads"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="metricsOutput"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                        &lt;L7p:Expression stringValue="/jvmMetrics/threads/thread[starts-with(@name, 'tomcat-exec-executor-')]"/&gt;
                        &lt;L7p:Namespaces mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="s"/&gt;
                                &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Namespaces&gt;
                    &lt;/L7p:XpathExpression&gt;
                &lt;/L7p:ResponseXpathAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="MA=="/&gt;
                    &lt;L7p:VariableToSet stringValue="threads.count"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="//count main thread pool size"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="threads.waiting"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="metricsOutput"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                        &lt;L7p:Expression stringValue="/jvmMetrics/threads/thread[starts-with(@name, 'tomcat-exec-executor-') and state='WAITING']"/&gt;
                        &lt;L7p:Namespaces mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="s"/&gt;
                                &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Namespaces&gt;
                    &lt;/L7p:XpathExpression&gt;
                &lt;/L7p:ResponseXpathAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="MA=="/&gt;
                    &lt;L7p:VariableToSet stringValue="threads.waiting.count"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="//count main thread pool waiting"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="threads.runnable"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="metricsOutput"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                        &lt;L7p:Expression stringValue="/jvmMetrics/threads/thread[starts-with(@name, 'tomcat-exec-executor-') and state='RUNNABLE']"/&gt;
                        &lt;L7p:Namespaces mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="s"/&gt;
                                &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Namespaces&gt;
                    &lt;/L7p:XpathExpression&gt;
                &lt;/L7p:ResponseXpathAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="MA=="/&gt;
                    &lt;L7p:VariableToSet stringValue="threads.runnable.count"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="//count main thread pool runnable"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="heapcommitted"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="metricsOutput"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                        &lt;L7p:Expression stringValue="round(/jvmMetrics/memory/heap/committed div 1024 div 1024 * 1)"/&gt;
                        &lt;L7p:Namespaces mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="s"/&gt;
                                &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Namespaces&gt;
                    &lt;/L7p:XpathExpression&gt;
                &lt;/L7p:ResponseXpathAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="MA=="/&gt;
                    &lt;L7p:VariableToSet stringValue="heapcommitted.result"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="//count memory heap size committed"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="heapmax"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="metricsOutput"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                        &lt;L7p:Expression stringValue="round(/jvmMetrics/memory/heap/max div 1024 div 1024 * 1)"/&gt;
                        &lt;L7p:Namespaces mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="s"/&gt;
                                &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Namespaces&gt;
                    &lt;/L7p:XpathExpression&gt;
                &lt;/L7p:ResponseXpathAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="MA=="/&gt;
                    &lt;L7p:VariableToSet stringValue="heapmax.result"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="//count memory heap size max"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="heapused"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="metricsOutput"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                        &lt;L7p:Expression stringValue="round(/jvmMetrics/memory/heap/used div 1024 div 1024 * 1)"/&gt;
                        &lt;L7p:Namespaces mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="s"/&gt;
                                &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Namespaces&gt;
                    &lt;/L7p:XpathExpression&gt;
                &lt;/L7p:ResponseXpathAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="MA=="/&gt;
                    &lt;L7p:VariableToSet stringValue="heapmax.result"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="//count memory heap size used"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;L7p:AuditDetailAssertion&gt;
                &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: heapcommitted=${heapcommitted.result}MB, heapmax=${heapmax.result}MB, heapused=${heapused.result}MB, threadpool=${threads.count}, threadpool.waiting=${threads.waiting.count}, threadpool.runnable=${threads.runnable.count}"/&gt;
                &lt;L7p:LoggingOnly booleanValue="true"/&gt;
            &lt;/L7p:AuditDetailAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="PGdhdGV3YXlNZXRyaWNzPg0KPGhlYXBtYXggdW5pdD0iTUIiPiR7aGVhcG1heC5yZXN1bHR9PC9oZWFwbWF4PgkJCQ0KPGhlYXBjb21taXR0ZWQgdW5pdD0iTUIiPiR7aGVhcGNvbW1pdHRlZC5yZXN1bHR9PC9oZWFwY29tbWl0dGVkPg0KPGhlYXB1c2VkIHVuaXQ9Ik1CIj4ke2hlYXB1c2VkLnJlc3VsdH08L2hlYXB1c2VkPgkJCQ0KPHRocmVhZHBvb2wgdmFsdWU9ImludCI+JHt0aHJlYWRzLmNvdW50fTwvdGhyZWFkcG9vbD4NCjx0aHJlYWRwb29sLndhaXRpbmcgdmFsdWU9ImludCI+JHt0aHJlYWRzLndhaXRpbmcuY291bnR9PC90aHJlYWRwb29sLndhaXRpbmc+DQo8dGhyZWFkcG9vbC5ydW5uYWJsZSB2YWx1ZT0iaW50Ij4ke3RocmVhZHMucnVubmFibGUuY291bnR9PC90aHJlYWRwb29sLnJ1bm5hYmxlPg0KPC9nYXRld2F5TWV0cmljcz4="/&gt;
                &lt;L7p:VariableToSet stringValue="template.output"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:HardcodedResponse&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// return memory statistic or threshold check status"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64ResponseBody stringValue="JHt0ZW1wbGF0ZS5vdXRwdXR9"/&gt;
                &lt;L7p:EarlyResponse booleanValue="true"/&gt;
                &lt;L7p:ResponseContentType stringValue="text/plain; charset=UTF-8"/&gt;
            &lt;/L7p:HardcodedResponse&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// run the jvm metrics assertion and get the results in context variables"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: &amp;lt;&amp;lt;&amp;lt;"/&gt;
            &lt;L7p:Enabled booleanValue="false"/&gt;
            &lt;L7p:LoggingOnly booleanValue="true"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Service>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>eComm Infra Test Policy</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf3670811313c1</l7:Id>
            <l7:Type>SERVICE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.672-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Service id="fb3f1ba1a929b3396bcf3670811313c1" version="2">
                    <l7:ServiceDetail folderId="fb3f1ba1a929b3396bcf36708113137e" id="fb3f1ba1a929b3396bcf3670811313c1" version="2">
                        <l7:Name>eComm Infra Test Policy</l7:Name>
                        <l7:Enabled>true</l7:Enabled>
                        <l7:ServiceMappings>
                            <l7:HttpMapping>
                                <l7:UrlPattern>/check/wsg/local</l7:UrlPattern>
                                <l7:Verbs>
                                    <l7:Verb>GET</l7:Verb>
                                    <l7:Verb>POST</l7:Verb>
                                    <l7:Verb>PUT</l7:Verb>
                                    <l7:Verb>DELETE</l7:Verb>
                                </l7:Verbs>
                            </l7:HttpMapping>
                        </l7:ServiceMappings>
                        <l7:Properties>
                            <l7:Property key="internal">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="policyRevision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="tracingEnabled">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="wssProcessingEnabled">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:ServiceDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy" version="0">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:HardcodedResponse&gt;
            &lt;L7p:Base64ResponseBody stringValue="JHtnYXRld2F5Lmhvc3RuYW1lLmNvZGV9JHtyZXF1ZXN0SWR9"/&gt;
            &lt;L7p:ResponseContentType stringValue="text/plain; charset=UTF-8"/&gt;
        &lt;/L7p:HardcodedResponse&gt;
        &lt;L7p:HardcodedResponse&gt;
            &lt;L7p:Base64ResponseBody stringValue="VGltZTogJHtyZXF1ZXN0LnRpbWUubG9jYWwuTU0vZGQveXkgaGg6bW06c3MgYSB6enp9LCBJRDogJHtyZXF1ZXN0SWR9CgpQYXRoOiAke3JlcXVlc3QudXJsLnBhdGh9CgpTZWN1cmU6ICR7cmVxdWVzdC5odHRwLnNlY3VyZX0KCkluY29taW5nIElQOiAke3JlcXVlc3QudGNwLnJlbW90ZUFkZHJlc3N9CgpYLUZvcndhcmRlZC1Gb3I6ICR7cmVxdWVzdC5odHRwLmhlYWRlci5YLUZvcndhcmRlZC1Gb3J9CgpOb2RlOiAke3NzZ25vZGUubmFtZX0="/&gt;
            &lt;L7p:Enabled booleanValue="false"/&gt;
            &lt;L7p:ResponseContentType stringValue="text/plain; charset=UTF-8"/&gt;
        &lt;/L7p:HardcodedResponse&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:CustomLoggerSuffix stringValue="benchmark"/&gt;
            &lt;L7p:Detail stringValue="Total time: ${request.elapsedTime}"/&gt;
            &lt;L7p:LoggingOnly booleanValue="true"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Service>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Customize Error Message</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf367081131545</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.674-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="36cc91ea-5795-4afb-81da-50e283d6ccfe" id="fb3f1ba1a929b3396bcf367081131545" version="0">
                    <l7:PolicyDetail folderId="fb3f1ba1a929b3396bcf367081131506" guid="36cc91ea-5795-4afb-81da-50e283d6ccfe" id="fb3f1ba1a929b3396bcf367081131545" version="0">
                        <l7:Name>Customize Error Message</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Customize the error message"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Default behaviour is to return a SOAP fault when policy fails. This fragment should be called from"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**      the start of every service to check if the error should not be a SOAP fault. This should not"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**      be implemented as a global policy as it would impact REST services published on the gateway at"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**      a later date"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Revision history:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**  v1.00 -  Jay MacDonald - 2013-01-22 - Initial version for testing"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${request.http.method}"/&gt;
                &lt;L7p:Expression2 stringValue="post"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:RightValue stringValue="post"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:CustomizeErrorResponse&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Change the error response to non SOAP"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Content stringValue="Internal Server Error (${requestid})"/&gt;
                &lt;L7p:ExtraHeaders nameValuePairArray="included"/&gt;
            &lt;/L7p:CustomizeErrorResponse&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Customize the error response if not a POST request"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>io.outConnectTimeout</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf367081130c2c</l7:Id>
            <l7:Type>CLUSTER_PROPERTY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.674-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ClusterProperty id="fb3f1ba1a929b3396bcf367081130c2c" version="0">
                    <l7:Name>io.outConnectTimeout</l7:Name>
                    <l7:Value>1000</l7:Value>
                </l7:ClusterProperty>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>io.outTimeout</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf367081130c2e</l7:Id>
            <l7:Type>CLUSTER_PROPERTY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.675-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ClusterProperty id="fb3f1ba1a929b3396bcf367081130c2e" version="0">
                    <l7:Name>io.outTimeout</l7:Name>
                    <l7:Value>2000</l7:Value>
                </l7:ClusterProperty>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>RBS DMZ Policy</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf36708113155e</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.754-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="d5e5c332-1758-4ddd-864e-28792cd55930" id="fb3f1ba1a929b3396bcf36708113155e" version="0">
                    <l7:PolicyDetail folderId="fb3f1ba1a929b3396bcf367081131506" guid="d5e5c332-1758-4ddd-864e-28792cd55930" id="fb3f1ba1a929b3396bcf36708113155e" version="0">
                        <l7:Name>RBS DMZ Policy</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Common DMZ gateway policy for RBS"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Note: for WSDL pass through this requires service.wsdlQueryEnabled cluster-wide"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**      property set to false. This means that no SOAP services on this device can deliver"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**      the wsdl directly at ?wsdl of a URL. One can still discover wsdls of SOAP services"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**      published here using the methods described in Appendix E of the Layer 7"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**      Installation and Maintenance Manual."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Revision history:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**  v1.00 -  Jay MacDonald - 2012-06-18 - Initial version for testing"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**  v1.01 -  Jay MacDonald - 2012-09-28 - Changed aud details to tag and write to Log, not Audit"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**  v2.00 -  Jay MacDonald - 2013-01-07 - Major rewrite to remove parsing of config XML for performance improvement"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**  v2.01 -  Jay MacDonald - 2013-01-09 - Added Require SSL and some comments"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**  v2.10 -  Jay MacDonald - 2013-01-10 - Added SQl and Code Injection checks and improved some inline doc"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**  v2.11 -  Jay MacDonald - 2013-01-10 - Flipped error msg override for GET req and set RateLimit to Throttle for high concurrency bug"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**  v2.12 -  Jay MacDonald - 2013-01-11 - Removed SOAP Fault assertion in lieu of cluster properties"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**  v2.13 -  Jay MacDonald - 2013-01-22 - Fixed WSDL download logic and removed vip.hostname requirement"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**  v2.14 -  Beiming Wang - 2013-07-16 - Fixed issue with servicePath.result and rate limit indication key"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:Detail stringValue="Policy Fragment: RBS DMZ Policy"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Exit early if explicitly not required"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${config.requireSSL}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="boolean"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:RightValue stringValue="false"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SslAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Traffic should be over SSL"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
            &lt;/L7p:SslAssertion&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Handle SSL requirement"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** Note: Disable the X-Forwaded-For check until it is implemented in the load balancer."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:TrueAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Remove this to enable X-Forwarded-For checking"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
            &lt;/L7p:TrueAssertion&gt;
            &lt;L7p:Regex&gt;
                &lt;L7p:AutoTarget booleanValue="false"/&gt;
                &lt;L7p:OtherTargetMessageVariable stringValue="request.http.header.X-Forwarded-For"/&gt;
                &lt;L7p:Regex stringValue="^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"/&gt;
                &lt;L7p:Replacement stringValue=""/&gt;
                &lt;L7p:Target target="OTHER"/&gt;
            &lt;/L7p:Regex&gt;
            &lt;L7p:AuditDetailAssertion&gt;
                &lt;L7p:CustomLoggerSuffix stringValue="x.forwarded.for"/&gt;
                &lt;L7p:Detail stringValue="x-forwarded-for:${requestId} X-Forwarded-For HTTP header not set"/&gt;
                &lt;L7p:LoggingOnly booleanValue="true"/&gt;
            &lt;/L7p:AuditDetailAssertion&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Validate X-Forwarded-For, log if not"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Use for benchmarking time taken to parse configuration"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:CustomLoggerSuffix stringValue="benchmark"/&gt;
            &lt;L7p:Detail stringValue="benchmark:${requestId} Mark 1: ${request.elapsedTime}"/&gt;
            &lt;L7p:Enabled booleanValue="false"/&gt;
            &lt;L7p:LoggingOnly booleanValue="true"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${config.servicePath}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item stringLength="included"&gt;
                            &lt;L7p:Max intValue="-1"/&gt;
                            &lt;L7p:Min intValue="3"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="PGR1bW15Lz4="/&gt;
                        &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                        &lt;L7p:DataType variableDataType="message"/&gt;
                        &lt;L7p:VariableToSet stringValue="dummyMsg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="lowerRequestPath"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="dummyMsg"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="translate($request.url.path, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz')"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="lowerServicePath"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="dummyMsg"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="translate($config.servicePath, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz')"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Convert to paths to lower case for the regex test to work around bug #12515"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:Regex&gt;
                        &lt;L7p:AutoTarget booleanValue="false"/&gt;
                        &lt;L7p:OtherTargetMessageVariable stringValue="lowerRequestPath.result"/&gt;
                        &lt;L7p:PatternContainsVariables booleanValue="true"/&gt;
                        &lt;L7p:Regex stringValue="${lowerServicePath.result}"/&gt;
                        &lt;L7p:Replacement stringValue=""/&gt;
                        &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:Regex&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:CustomLoggerSuffix stringValue="validateConfig"/&gt;
                            &lt;L7p:Detail stringValue="validateConfig:${requestId} Path invalid: ${request.url.path} !~ ${config.servicePath}"/&gt;
                            &lt;L7p:Level stringValue="WARNING"/&gt;
                            &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:FalseAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Force the fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                        &lt;/L7p:FalseAssertion&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Handle a failure condition because request does not match the configured servicePath"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Evaluate using a regex, audit if it fails"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Evaluate the actual request path against the servicePath from config"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="****************************************************************************"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="** Confirm and set the routing parameters"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="****************************************************************************"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${routing.customRouting}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="boolean"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="false"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${routing.destinationRoot}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="string"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item stringLength="included"&gt;
                                &lt;L7p:Max intValue="-1"/&gt;
                                &lt;L7p:Min intValue="8"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${routing.connectTimeout}"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GT"/&gt;
                                    &lt;L7p:RightValue stringValue="0"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Use system default value"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="JHtnYXRld2F5LmlvLm91dENvbm5lY3RUaW1lb3V0fQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="routing.connectTimeout"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Validate ${routing.connectionTimeout} configuration. Set to default if necessary"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${routing.readTimeout}"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GT"/&gt;
                                    &lt;L7p:RightValue stringValue="0"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Use system default value"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="JHtnYXRld2F5LmlvLm91dFRpbWVvdXR9"/&gt;
                            &lt;L7p:VariableToSet stringValue="routing.readTimeout"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Validate ${routing.readTimeout} configuration. Set to default if necessary"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// If customRouting is false then validate the config context variables"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Succeed if customRouting = true"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${routing.customRouting}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="boolean"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="true"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:CustomLoggerSuffix stringValue="validateConfig"/&gt;
                        &lt;L7p:Detail stringValue="validateConfig:${requestId} customRouting is set to true. Will not use default routing assertion"/&gt;
                        &lt;L7p:Enabled booleanValue="false"/&gt;
                        &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// If customRouting is true then we don't validate anything"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:CustomLoggerSuffix stringValue="validateConfig"/&gt;
                        &lt;L7p:Detail stringValue="validateConfig:${requestId} Error in Routing configuration"/&gt;
                        &lt;L7p:Level stringValue="WARNING"/&gt;
                        &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:FalseAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Force the fail"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                    &lt;/L7p:FalseAssertion&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Handle a failure condition"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Handle routing configuration"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="****************************************************************************"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="** Validate the Limit Message Size parameters"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="****************************************************************************"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${messageSize.enabled}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="boolean"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="true"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${messageSize.max}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="int"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Operator operator="GT"/&gt;
                                &lt;L7p:RightValue stringValue="0"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// If enabled=true then validate all the config context variables"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${messageSize.enabled}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="boolean"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="false"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Validate for enabled=false"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:CustomLoggerSuffix stringValue="validateConfig"/&gt;
                        &lt;L7p:Detail stringValue="validateConfig:${requestId} Missing or invalid Limit Message Size configuration"/&gt;
                        &lt;L7p:Level stringValue="WARNING"/&gt;
                        &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="bm90IGNvbmZpZ3VyZWQ="/&gt;
                        &lt;L7p:VariableToSet stringValue="messageSize.enabled"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Audit invalid or missing configuration"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Handle &amp;quot;Limit Message Size&amp;quot; configuration."/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="****************************************************************************"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="** Validate the Rate Limit parameters"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="****************************************************************************"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${rateLimit.enabled}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="boolean"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="true"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${rateLimit.count}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="int"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Operator operator="GT"/&gt;
                                &lt;L7p:RightValue stringValue="0"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${rateLimit.spread}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="int"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Operator operator="GT"/&gt;
                                &lt;L7p:RightValue stringValue="0"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="** IndicatorKey must be one of: path, clientIP, url or servicePath"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:CommentAssertion&gt;
                                &lt;L7p:Comment stringValue="** servicePath means apply to all services in this path group as set by servicePath in the config"/&gt;
                            &lt;/L7p:CommentAssertion&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${rateLimit.indicatorKey}"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="string"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="servicePath"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtjb25maWcuc2VydmljZVBhdGh9"/&gt;
                                &lt;L7p:VariableToSet stringValue="rateLimit.indicatorKey"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// IndicatorKey = servicePath"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${rateLimit.indicatorKey}"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="string"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="path"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnVybC5wYXRofQ=="/&gt;
                                &lt;L7p:VariableToSet stringValue="rateLimit.indicatorKey"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// IndicatorKey = path"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${rateLimit.indicatorKey}"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="string"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="clientIP"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRjcC5yZW1vdGVBZGRyZXNzfQ=="/&gt;
                                &lt;L7p:VariableToSet stringValue="rateLimit.indicatorKey"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// IndicatorKey = clientIP"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${rateLimit.indicatorKey}"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="string"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="url"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnVybH0="/&gt;
                                &lt;L7p:VariableToSet stringValue="rateLimit.indicatorKey"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// IndicatorKey = url"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:AuditDetailAssertion&gt;
                                &lt;L7p:CustomLoggerSuffix stringValue="validateConfig"/&gt;
                                &lt;L7p:Detail stringValue="validateConfig:${requestId} Bad Rate Limit configuration - unrecognized Indicator Key: ${rateLimit.indicatorKey}"/&gt;
                                &lt;L7p:Level stringValue="WARNING"/&gt;
                                &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                            &lt;/L7p:AuditDetailAssertion&gt;
                            &lt;L7p:FalseAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Force the fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                            &lt;/L7p:FalseAssertion&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Handle a failure condition"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// set rateLimit.indicatorKey - There is a limited list of IndicatorKeys we'll accept"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// If enabled=true then validate all the config context variables"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${rateLimit.enabled}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="boolean"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="false"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Validate for enabled=false"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="bm90IGNvbmZpZ3VyZWQ="/&gt;
                        &lt;L7p:VariableToSet stringValue="rateLimit.enabled"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:CustomLoggerSuffix stringValue="validateConfig"/&gt;
                        &lt;L7p:Detail stringValue="validateConfig:${requestId} Missing or invalid Rate Limit configuration"/&gt;
                        &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Audit invalid or missing configuration"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Handle &amp;quot;Rate Limit&amp;quot; configuration."/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="****************************************************************************"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="** Validate the SQL Injection parameters"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="****************************************************************************"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${sqlInjection.enabled}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="boolean"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="true"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${sqlInjection.mssql}"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="boolean"/&gt;
                                &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${sqlInjection.oracle}"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="boolean"/&gt;
                                &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${sqlInjection.standard}"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="boolean"/&gt;
                                &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${sqlInjection.invasive}"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="boolean"/&gt;
                                &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// At least one of the injection checks must be enabled"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// If enabled=true then validate all the config context variables"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${sqlInjection.enabled}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="boolean"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="false"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Validate for enabled=false"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="bm90IGNvbmZpZ3VyZWQ="/&gt;
                        &lt;L7p:VariableToSet stringValue="sqlInjection.enabled"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:CustomLoggerSuffix stringValue="validateConfig"/&gt;
                        &lt;L7p:Detail stringValue="validateConfig:${requestId} Missing or invalid SQl Injection configuration"/&gt;
                        &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Audit invalid or missing configuration"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Handle &amp;quot;SQL Injection&amp;quot; configuration"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="****************************************************************************"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="** Validate the Code Injection parameters"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="****************************************************************************"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${codeInjection.enabled}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="boolean"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="true"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${codeInjection.css}"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="boolean"/&gt;
                                &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${codeInjection.ldapDN}"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="boolean"/&gt;
                                &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${codeInjection.ldapSearch}"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="boolean"/&gt;
                                &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// At least one of the injection checks must be enabled"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// If enabled=true then validate all the config context variables"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${codeInjection.enabled}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="boolean"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="false"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Validate for enabled=false"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="bm90IGNvbmZpZ3VyZWQ="/&gt;
                        &lt;L7p:VariableToSet stringValue="codeInjection.enabled"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:CustomLoggerSuffix stringValue="validateConfig"/&gt;
                        &lt;L7p:Detail stringValue="validateConfig:${requestId} Missing or invalid Code Injection configuration"/&gt;
                        &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Audit invalid or missing configuration"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Handle &amp;quot;Code Injection&amp;quot; configuration"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="****************************************************************************"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="** Validate the WSDL passthrough capability"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="****************************************************************************"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${config.passWSDL}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="boolean"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="true"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Default to not passing through the wsdl"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                        &lt;L7p:VariableToSet stringValue="passWSDL.enabled"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Check that it is set in ${config.passWSDL}"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Default to not passing through the wsdl"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                    &lt;L7p:VariableToSet stringValue="passWSDL.enabled"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Handle &amp;quot;PassWSDL&amp;quot; configuration."/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="PGRlYnVnIHhtbG5zPSJ1cm46cmJzOmRtejpsNzpwb2xpY3lDb25maWciPg0KICA8ZGVzdGluYXRpb24+JHtyb3V0aW5nLmRlc3RpbmF0aW9uUm9vdH0ke3JlcXVlc3QudXJsLnBhdGh9PC9kZXN0aW5hdGlvbj4NCiAgPHBhc3NXU0RMPiR7cGFzc1dTREwuZW5hYmxlZH08L3Bhc3NXU0RMPg0KICA8cm91dGluZz4NCiAgICA8Y3VzdG9tUm91dGluZz4ke3JvdXRpbmcuY3VzdG9tUm91dGluZ308L2N1c3RvbVJvdXRpbmc+DQogICAgPGRlc3RpbmF0aW9uUm9vdD4ke3JvdXRpbmcuZGVzdGluYXRpb25Sb290fTwvZGVzdGluYXRpb25Sb290Pg0KICAgIDxjb25uZWN0VGltZW91dD4ke3JvdXRpbmcuY29ubmVjdFRpbWVvdXR9PC9jb25uZWN0VGltZW91dD4NCiAgICA8cmVhZFRpbWVvdXQ+JHtyb3V0aW5nLnJlYWRUaW1lb3V0fTwvcmVhZFRpbWVvdXQ+DQogIDwvcm91dGluZz4NCiAgPG1lc3NhZ2VTaXplIGVuYWJsZWQ9IiR7bWVzc2FnZVNpemUuZW5hYmxlZH0iPg0KICAgICAgPG1lc3NhZ2VTaXplTWF4PiR7bWVzc2FnZVNpemUubWF4fTwvbWVzc2FnZVNpemVNYXg+DQogIDwvbWVzc2FnZVNpemU+DQogIDxyYXRlTGltaXQgZW5hYmxlZD0iJHtyYXRlTGltaXQuZW5hYmxlZH0iPg0KICAgICAgPHJhdGVMaW1pdENvdW50PiR7cmF0ZUxpbWl0LmNvdW50fTwvcmF0ZUxpbWl0Q291bnQ+DQogICAgICA8cmF0ZUxpbWl0U3ByZWFkPiR7cmF0ZUxpbWl0LnNwcmVhZH08L3JhdGVMaW1pdFNwcmVhZD4NCiAgICAgIDxyYXRlTGltaXRJbmRpY2F0b3JLZXk+JHtyYXRlTGltaXQuaW5kaWNhdG9yS2V5fTwvcmF0ZUxpbWl0SW5kaWNhdG9yS2V5Pg0KICA8L3JhdGVMaW1pdD4NCjwvZGVidWc+"/&gt;
                &lt;L7p:Enabled booleanValue="false"/&gt;
                &lt;L7p:VariableToSet stringValue="debug.configuration"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Validate the configuration"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Use for benchmarking time taken to parse configuration"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:CustomLoggerSuffix stringValue="benchmark"/&gt;
            &lt;L7p:Detail stringValue="benchmark:${requestId} Mark 2: ${request.elapsedTime}"/&gt;
            &lt;L7p:Enabled booleanValue="false"/&gt;
            &lt;L7p:LoggingOnly booleanValue="true"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.method}"/&gt;
                    &lt;L7p:Expression2 stringValue="post"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="post"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:CommentAssertion&gt;
                        &lt;L7p:Comment stringValue="************************************************************************************"/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;L7p:CommentAssertion&gt;
                        &lt;L7p:Comment stringValue="** Validate the request message for various threat conditions"/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;L7p:CommentAssertion&gt;
                        &lt;L7p:Comment stringValue="************************************************************************************"/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Exit early"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Expression1 stringValue="${messageSize.enabled}"/&gt;
                            &lt;L7p:Expression2 stringValue="true"/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:RequestSizeLimit&gt;
                            &lt;L7p:Limit stringValue="${messageSize.max}"/&gt;
                        &lt;/L7p:RequestSizeLimit&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Validate message request size"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Exit early"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${sqlInjection.enabled}"/&gt;
                            &lt;L7p:Expression2 stringValue="true"/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Exit early"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${sqlInjection.mssql}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="boolean"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="false"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:SqlAttackProtection&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Only MS SQL is checked"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Protections stringSetValue="included"&gt;
                                    &lt;L7p:item stringValue="MsSql"/&gt;
                                    &lt;/L7p:Protections&gt;
                                &lt;/L7p:SqlAttackProtection&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// MS SQL check"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Exit early"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${sqlInjection.oracle}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="boolean"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="false"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:SqlAttackProtection&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Only Oracle is checked"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Protections stringSetValue="included"&gt;
                                    &lt;L7p:item stringValue="OraSql"/&gt;
                                    &lt;/L7p:Protections&gt;
                                &lt;/L7p:SqlAttackProtection&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Oracle check"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Exit early"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${sqlInjection.standard}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="boolean"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="false"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:SqlAttackProtection&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Only standard is checked"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Protections stringSetValue="included"&gt;
                                    &lt;L7p:item stringValue="SqlMetaText"/&gt;
                                    &lt;/L7p:Protections&gt;
                                &lt;/L7p:SqlAttackProtection&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Standard check"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Exit early"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${sqlInjection.invasive}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="boolean"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="false"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:SqlAttackProtection&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Only invasive is checked"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Protections stringSetValue="included"&gt;
                                    &lt;L7p:item stringValue="SqlMeta"/&gt;
                                    &lt;/L7p:Protections&gt;
                                &lt;/L7p:SqlAttackProtection&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Invasive check"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check each condition"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check message for sql injection"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Exit early"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${codeInjection.enabled}"/&gt;
                            &lt;L7p:Expression2 stringValue="true"/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Exit early"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${codeInjection.css}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="boolean"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="false"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:CodeInjectionProtectionAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Only CSS is checked"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:IncludeBody booleanValue="true"/&gt;
                                    &lt;L7p:IncludeUrlQueryString booleanValue="true"/&gt;
                                    &lt;L7p:Protections codeInjectionProtectionTypeArray="included"&gt;
                                    &lt;L7p:item protectionType="htmlJavaScriptInjection"/&gt;
                                    &lt;/L7p:Protections&gt;
                                    &lt;L7p:Target target="REQUEST"/&gt;
                                &lt;/L7p:CodeInjectionProtectionAssertion&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// CSS check"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Exit early"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${codeInjection.ldapDN}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="boolean"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="false"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:CodeInjectionProtectionAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Only LDAP DN is checked"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:IncludeBody booleanValue="true"/&gt;
                                    &lt;L7p:IncludeUrlQueryString booleanValue="true"/&gt;
                                    &lt;L7p:Protections codeInjectionProtectionTypeArray="included"&gt;
                                    &lt;L7p:item protectionType="ldapDnInjection"/&gt;
                                    &lt;/L7p:Protections&gt;
                                    &lt;L7p:Target target="REQUEST"/&gt;
                                &lt;/L7p:CodeInjectionProtectionAssertion&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// LDAP DN check"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Exit early"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${codeInjection.ldapSearch}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="boolean"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="false"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:CodeInjectionProtectionAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Only LDAP Search is checked"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:IncludeBody booleanValue="true"/&gt;
                                    &lt;L7p:IncludeUrlQueryString booleanValue="true"/&gt;
                                    &lt;L7p:Protections codeInjectionProtectionTypeArray="included"&gt;
                                    &lt;L7p:item protectionType="ldapSearchInjection"/&gt;
                                    &lt;/L7p:Protections&gt;
                                    &lt;L7p:Target target="REQUEST"/&gt;
                                &lt;/L7p:CodeInjectionProtectionAssertion&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// LDAP Search check"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check each condition"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check message for code injection"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Exit early"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Expression1 stringValue="${rateLimit.enabled}"/&gt;
                            &lt;L7p:Expression2 stringValue="true"/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:RateLimit&gt;
                            &lt;L7p:CounterName stringValue="f548d28d-${rateLimit.indicatorKey}"/&gt;
                            &lt;L7p:MaxRequestsPerSecond stringValue="${rateLimit.count}"/&gt;
                            &lt;L7p:WindowSizeInSeconds stringValue="${rateLimit.spread}"/&gt;
                        &lt;/L7p:RateLimit&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Validate rate limit - this should be done last so bad messages are not part of the rate limit check"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Validate the request message"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Exit early"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${routing.customRouting}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="boolean"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="true"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:HttpRoutingAssertion&gt;
                        &lt;L7p:ConnectionTimeout stringValue="${routing.connectTimeout}"/&gt;
                        &lt;L7p:FailOnErrorStatus booleanValue="false"/&gt;
                        &lt;L7p:PassThroughSoapFaults booleanValue="false"/&gt;
                        &lt;L7p:ProtectedServiceUrl stringValue="${routing.destinationRoot}${request.url.path}"/&gt;
                        &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                        &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                        &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                            &lt;L7p:ForwardAll booleanValue="true"/&gt;
                            &lt;L7p:Rules httpPassthroughRules="included"&gt;
                                &lt;L7p:item httpPassthroughRule="included"&gt;
                                    &lt;L7p:Name stringValue="Cookie"/&gt;
                                &lt;/L7p:item&gt;
                                &lt;L7p:item httpPassthroughRule="included"&gt;
                                    &lt;L7p:Name stringValue="SOAPAction"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Rules&gt;
                        &lt;/L7p:RequestHeaderRules&gt;
                        &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                            &lt;L7p:ForwardAll booleanValue="true"/&gt;
                            &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                        &lt;/L7p:RequestParamRules&gt;
                        &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                            &lt;L7p:ForwardAll booleanValue="true"/&gt;
                            &lt;L7p:Rules httpPassthroughRules="included"&gt;
                                &lt;L7p:item httpPassthroughRule="included"&gt;
                                    &lt;L7p:Name stringValue="Set-Cookie"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Rules&gt;
                        &lt;/L7p:ResponseHeaderRules&gt;
                        &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                        &lt;L7p:Timeout stringValue="${routing.readTimeout}"/&gt;
                    &lt;/L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Route the message if ${routing.customRouting} != true"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Method is POST so handle as a service request"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.method}"/&gt;
                    &lt;L7p:Expression2 stringValue="get"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="get"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${request.url.query}"/&gt;
                    &lt;L7p:Expression2 stringValue="?wsdl"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="?wsdl"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${passWSDL.enabled}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="boolean"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:Detail stringValue="${routing.destinationRoot}${request.url.path}?wsdl"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:ConnectionTimeout stringValue="${routing.connectTimeout}"/&gt;
                    &lt;L7p:PassThroughSoapFaults booleanValue="false"/&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="${routing.destinationRoot}${request.url.path}?wsdl"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="Cookie"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="SOAPAction"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Rules&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="Set-Cookie"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Rules&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                    &lt;L7p:Timeout stringValue="${routing.readTimeout}"/&gt;
                &lt;/L7p:HttpRoutingAssertion&gt;
                &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Confirm that it is a wsdl and extract binding address"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:VariablePrefix stringValue="bindingAddress"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                        &lt;L7p:Expression stringValue="/wsdl:definitions/wsdl:service/wsdl:port/soap:address/@location"/&gt;
                        &lt;L7p:Namespaces mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="soapenc"/&gt;
                                &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/encoding/"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="tm"/&gt;
                                &lt;L7p:value stringValue="http://microsoft.com/wsdl/mime/textMatching/"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="s"/&gt;
                                &lt;L7p:value stringValue="http://www.w3.org/2001/XMLSchema"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="wsdl"/&gt;
                                &lt;L7p:value stringValue="http://schemas.xmlsoap.org/wsdl/"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="tns"/&gt;
                                &lt;L7p:value stringValue="http://www.rbsmarkets.com/infrastructure/webservices/pkicheck.asmx"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="http"/&gt;
                                &lt;L7p:value stringValue="http://schemas.xmlsoap.org/wsdl/http/"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="soap"/&gt;
                                &lt;L7p:value stringValue="http://schemas.xmlsoap.org/wsdl/soap/"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="mime"/&gt;
                                &lt;L7p:value stringValue="http://schemas.xmlsoap.org/wsdl/mime/"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="soap12"/&gt;
                                &lt;L7p:value stringValue="http://schemas.xmlsoap.org/wsdl/soap12/"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Namespaces&gt;
                    &lt;/L7p:XpathExpression&gt;
                &lt;/L7p:ResponseXpathAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Start with the original request url"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnVybH0="/&gt;
                    &lt;L7p:VariableToSet stringValue="serviceURL"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:Regex&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Strip ?wsdl from the request URL"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="serviceURL"/&gt;
                    &lt;L7p:Regex stringValue="\?wsdl$"/&gt;
                    &lt;L7p:Replace booleanValue="true"/&gt;
                    &lt;L7p:Replacement stringValue=""/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:Regex&gt;
                &lt;L7p:Regex&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Replace the binding address in the WSDL with the new VIP binding address"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:PatternContainsVariables booleanValue="true"/&gt;
                    &lt;L7p:Regex stringValue="${bindingAddress.result}"/&gt;
                    &lt;L7p:Replace booleanValue="true"/&gt;
                    &lt;L7p:Replacement stringValue="${serviceURL}"/&gt;
                    &lt;L7p:Target target="RESPONSE"/&gt;
                &lt;/L7p:Regex&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Method is GET so validate ?wsdl and pass it through if configured to allow that"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// POST (i.e service request) or GET (i.e. WSDL request)"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Generic REST Service Template v3.28</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf3670811316d2</l7:Id>
            <l7:Type>SERVICE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.844-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Service id="fb3f1ba1a929b3396bcf3670811316d2" version="2">
                    <l7:ServiceDetail folderId="63805bece54f5987d66ab52a8499463b" id="fb3f1ba1a929b3396bcf3670811316d2" version="2">
                        <l7:Name>Generic REST Service Template v3.28</l7:Name>
                        <l7:Enabled>false</l7:Enabled>
                        <l7:ServiceMappings>
                            <l7:HttpMapping>
                                <l7:UrlPattern>/ChangeMe/*</l7:UrlPattern>
                                <l7:Verbs>
                                    <l7:Verb>GET</l7:Verb>
                                    <l7:Verb>POST</l7:Verb>
                                    <l7:Verb>PUT</l7:Verb>
                                    <l7:Verb>DELETE</l7:Verb>
                                </l7:Verbs>
                            </l7:HttpMapping>
                        </l7:ServiceMappings>
                        <l7:Properties>
                            <l7:Property key="internal">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="policyRevision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="tracingEnabled">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="wssProcessingEnabled">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:ServiceDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy" version="0">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*******************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Service Description: Generic REST Service Template v3"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Service Name:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Service Path:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Source Template:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Source Template Version History:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.00 - Jay MacDonald - 2013-05-22 - Adapted from SOAP with hard coded parameters"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.01 - Jay MacDonald - 2013-05-29 - Sending Audit Details to log"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.02 - Jay MacDonald - 2013-05-29 - Updated to handle JSON vs XML defaults in DST"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.10 - Jay MacDonald - 2013-06-18 - Added * to knownResources to disable resource/method/type checks and endpoint path rewrite"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.11 - waymosa - 2013-07-03 - Update JSON XML DST values in line with Pen Tested values"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.12 - waymosa - 2013-07-04 - Update incorrect protections using the protection levels agreed with Infosec"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.13 - waymosa - 2013-07-05 - Update query string length to maximum size of 100, Set default value for config.routing.rewritePath.enabled to false, added ChangeMe to regex assertion for service.routePath"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.14 - Jay MacDonald - 2013-07-11 - Brought ${ads.configuration} in line with Sam's updates to the policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.15 - Jay MacDonald - 2013-07-15 - Set ${ads.configuration} value for message size to 512, added ADSInfo to ${ads.configuration}"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.16 - Sam Waymouth - 2013-07-23 - Set pass through all headers for Route/Reponse"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.17 - Sam Waymouth - 2013-07-25 - Change the Protect Against Conde injection variable from query.string to url.msg for GET requests"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.18 - Mario Xavier - 2013-07-25 - Updated version numbers; cleared default settings for content type and HTTP methods in both policy and ADS"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.19 - Mario Xavier - 2013-08-22 - Increased default query string length to 512 post investigation on security aspect of this, requirements from app dev and dicussion within ecomm"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.20 - Sam Waymouth - 2013-08-27 - Implemented whitelist for service endpoint reponse codes"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.21 - Beiming Wang - 2013-09-03 - Changed logging format to include policy name and request url"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.22 - Sam Waymouth - 2013-09-05 - Fixed ECOMINF-298, ECOMINF-299, ECOMINF-300, ECOMINF-301"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.23 - Sam Waymouth - 20131021 - Fixed ECOMINF-299 httRouting.latency, ECOMINF-300 Empty POST, ECOMINF-313 unencoded query, ECOMINF-298 X-Forwarded-For"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.24 - Mario Xavier - 20131127 - Increased default read timeout from 2 seconds to 5 seconds to improve application services availability"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.25 - Beiming Wang -2015-04-28 - ECOMINF-378, ECOMINF-922, ECOMINF-926, ECOMINF-415, ECOMINF-485, ECOMINF-730, ECOMINF-932, ECOMINF-933, ECOMINF-934"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.26 - Beiming Wang - 2015-05-15 - ECOMINF-952"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.27 - Beiming Wang - 2015-06-05 - EAMGMT-105"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.28 - Beiming Wang - 2015-09-08 - EAMGMT-105 Part II"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Revision History:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// RHTag"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Comment stringValue="** v1.00 - User - YYYY-MM-DD - Initial version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*******************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Removed during transform"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Comment stringValue="** ADS Template (set to tag for retrieval by API Deployment service)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Default configuration for this service"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="PFNlcnZpY2VDb25maWd1cmF0aW9uPg0KICA8IS0tDQogICAgVGhpcyBkb2N1bWVudCBkZXNjcmliZXMgYSBnZW5lcmljIFJFU1Qgc2VydmljZSB0aGF0IGNhbiBiZSBwdWJsaXNoZWQgb24gdGhlIExheWVyIDcgR2F0ZXdheQ0KICAgIGJ5IG1vZGlmeWluZyB0aGUgdGVtcGxhdGUgUkVTVCBzZXJ2aWNlIHdpdGggcGFyYW1ldGVycyBsYWlkIG91dCBoZXJlaW4uDQogICAgDQogICAgVGhpcyBjb3VsZCBiZSB1c2VkIGFzIHBhcnQgb2YgYW4gYXV0b21hdGVkIG9uLWJvYXJkaW5nIHByb2Nlc3Mgb2Ygc2VydmljZXMgdG8gdGhlIERNWiBHYXRld2F5Lg0KICAgIA0KICAgIERldGFpbGVkIGRlc2NyaXB0aW9uIG9mIHRoZSBHYXRld2F5IHNlY3VyaXR5IHBvbGljeSBjYW4gYmUgZm91bmQgaW4gdGhlIFRocmVhdCBQcm90ZWN0aW9uDQogICAgUHJpbWVyIGRvY3VtZW50IGFuZCBpbiB0aGUgTGF5ZXIgNyBkb2N1bWVudGF0aW9uLg0KICAgIA0KICAgIHYxLjAgLSAyMDEzLTA0LTE4IC0gSmF5IE1hY0RvbmFsZCAtIEluaXRpYWwgc3BlYw0KICAgIHYxLjEgLSAyMDEzLTA3LTE1IC0gSmF5IE1hY0RvbmFsZCAtIFJldmlzZWQgd2l0aCBSb3V0aW5nU2V0dGluZ3MgYW5kIEFEU0luZm8gYmxvY2tzDQogIC0tPg0KICA8U2VydmljZURlZmluaXRpb24+DQogICAgPCEtLQ0KICAgICAgVGhlIGZvbGxvd2luZyBwYXJhbWV0ZXJzIGRlZmluZSB0aGUgc2VydmljZSBvbiB0aGUgZ2F0ZXdheSBhbmQgaW5kaWNhdGUgdGhlIGNvbmNyZXRlIGVuZHBvaW50Og0KICAgIA0KICAgICAgU2VydmljZVR5cGU6IFJFU1Qgb3IgU09BUC4gVGhlIHJlbWFpbmRlciBvZiB0aGUgZmlsZSBkZXNjcmliZXMgZGV0YWlscyBmb3IgdGhlIHR5cGUgb2Ygc2VydmljZS4NCiAgICAgIEVuYWJsZWQ6IFdoZXRoZXIgdGhlIHNlcnZpY2Ugd2lsbCBhY2NlcHQgcmVxdWVzdHMgb3Igbm90Lg0KICAgICAgU2VydmljZU5hbWU6IEEgc2hvcnQgZGVzY3JpcHRpdmUgbmFtZSBvZiB0aGUgc2VydmljZS4gVGhpcyBpcyBmb3IgZGlzcGxheSBhbmQgcmVwb3J0aW5nIHB1cnBvc2VzLg0KICAgICAgU2VydmljZURlc2NyaXB0aW9uOiBBIHNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSBzZXJ2aWNlLg0KICAgICAgUmV2aXNpb25Ob3RlOiBUZXh0IGRpc3BsYXllZCBpbiBjb21tZW50IGJsb2NrIGFzc29jaWF0ZWQgd2l0aCB0aGUgcmV2aXNpb24gaGlzdG9yeQ0KICAgICAgVGVtcGxhdGVPaWQ6IE9JRCBvZiB0aGUgdGVtcGxhdGUgc2VydmljZS4NCiAgICAgIEZvbGRlcklEOiBPSUQgb2YgR2F0ZXdheSBmb2xkZXIgaW4gd2hpY2ggdG8gcHVibGlzaCB0aGUgc2VydmljZS4gKG9wdGlvbmFsIHVubGVzcyBmb3IgYXV0b21hdGlvbikuDQogICAgICBCYXNlUGF0aDogVGhlIGJhc2UgcGF0aCBvZiB0aGUgUkVTVCBzZXJ2aWNlLg0KICAgICAgS25vd25SZXNvdXJjZXM6IEZvcm1hdHRlZCBzdHJpbmcgZGVjbGFyaW5nIHRoZSByZXNvdXJjZXMsIG1ldGhvZHMgYW5kIGNvbnRlbnQtdHlwZXMgZm9yIHRoZSBzZXJ2aWNlLg0KICAgICAgU2VydmljZUhvc3Q6IEJhc2UgdXJsIGZvciByb3V0aW5nIHRoZSByZXF1ZXN0cyB0aGF0IHBhc3MgKGkuZS4gYmFzZSBmb3IgdGhlIHJlYWwgZW5kcG9pbnQpLg0KICAgICAgQ29ubmVjdGlvblRpbWVvdXQ6IFRpbWVvdXQgZm9yIGVzdGFibGlzaGluZyBhIGNvbm5lY3Rpb24gdG8gYmFjayBlbmQgKGluIG1pbGxpc2Vjb25kcykuDQogICAgICBSZWFkVGltZW91dDogVGltZW91dCBmb3Igb2J0YWluaW5nIGEgcmVzcG9uc2UgZnJvbSBiYWNrIGVuZCAoaW4gbWlsbGlzZWNvbmRzKS4NCiAgICAtLT4NCiAgICA8U2VydmljZVR5cGU+UkVTVDwvU2VydmljZVR5cGU+DQogICAgPEVuYWJsZWQ+dHJ1ZTwvRW5hYmxlZD4NCiAgICA8U2VydmljZU5hbWU+PC9TZXJ2aWNlTmFtZT4NCiAgICA8U2VydmljZURlc2NyaXB0aW9uPjwvU2VydmljZURlc2NyaXB0aW9uPg0KICAgIDxSZXZpc2lvbk5vdGU+SW5pdGlhbCBSZWxlYXNlPC9SZXZpc2lvbk5vdGU+DQogICAgPFRlbXBsYXRlT0lEPjwvVGVtcGxhdGVPSUQ+DQogICAgPEZvbGRlcklEPjwvRm9sZGVySUQ+DQogICAgPEJhc2VQYXRoPi9DaGFuZ2VNZS88L0Jhc2VQYXRoPg0KICAgIDxLbm93blJlc291cmNlcz5DaGFuZ2VNZTwvS25vd25SZXNvdXJjZXM+DQogIDwvU2VydmljZURlZmluaXRpb24+DQogIDxSb3V0aW5nU2V0dGluZ3M+DQogICAgPFNlcnZpY2VIb3N0PlBST1RPQ09MOi8vSE9TVE5BTUU6UE9SVDwvU2VydmljZUhvc3Q+DQogICAgPENvbm5lY3Rpb25UaW1lb3V0PjEwMDA8L0Nvbm5lY3Rpb25UaW1lb3V0Pg0KICAgIDxSZWFkVGltZW91dD4yMDAwPC9SZWFkVGltZW91dD4NCiAgICA8UmV3cml0ZVBhdGggZW5hYmxlZD0iZmFsc2UiPg0KICAgICAgPFJlZ2V4UGF0dGVybj5eXC9DaGFuZ2VNZTwvUmVnZXhQYXR0ZXJuPg0KICAgICAgPFJlZ2V4UmVwbGFjZW1lbnQ+Q2hhbmdlTWU8L1JlZ2V4UmVwbGFjZW1lbnQ+DQogICAgPC9SZXdyaXRlUGF0aD4NCiAgPC9Sb3V0aW5nU2V0dGluZ3M+DQogIDxQb2xpY3lTZXR0aW5ncz4NCiAgICA8IS0tDQogICAgICBUaGUgZm9sbG93aW5nIHBhcmFtZXRlcnMgZGVzY3JpYmUgcG9saWN5IGFzIGRlcGxveWVkIGluIHRoZSBHYXRld2F5Og0KICAgICAgDQogICAgICBSZXF1aXJlU1NMOiBFbmZvcmNlIGluY29taW5nIHJlcXVlc3RzIG92ZXIgU1NMLg0KICAgICAgTWVzc2FnZVNpemU6IEVuZm9yY2UgYSBzaXplIGxpbWl0IChieXRlcykgZm9yIFBVVC9QT1NUIHBheWxvYWRzLg0KICAgICAgUXVlcnlTdHJpbmdMZW5ndGg6IEVuZm9yY2UgYSBsZW5ndGggbGltaXQgKGNoYXJhY3RlcnMpIG9uIHRoZSBRdWVyeSBTdHJpbmcuDQogICAgICBSYXRlTGltaXQ6IEVuZm9yY2UgYSByYXRlIGxpbWl0IG9uIGFjY2VzcyB0byB0aGUgc2VydmljZS4NCiAgICAgIFNRTEluamVjdGlvbjogU2NhbiBxdWVyeSBzdHJpbmdzIGFuZCBwYXlsb2FkcyBmb3IgU1FMIGluamVjdGlvbiBjb250ZW50Lg0KICAgICAgQ29kZUluamVjdGlvbjogU2NhbiBxdWVyeSBzdHJpbmdzIGFuZCBwYXlsb2FkcyBmb3IgQ1NTLCBMREFQIEROIGFuZCBMREFQIFNlYXJjaCBpbmplY3Rpb24uDQogICAgICBEb2N1bWVudFN0cnVjdHVyZTogRW5mb3JjZSBkb2N1bWVudCBzdHJ1Y3R1cmUgbGltaXRzLg0KICAgICAgS2V5d29yZEZpbHRlcjogU2NhbiBwYXlsb2FkIGFuZCBRdWVyeSBTdHJpbmcgZm9yIGtleXdvcmRzLg0KICAgICAgUmV3cml0ZVBhdGg6IFJld3JpdGUgdGhlIHBhdGggd2l0aCByZWdleCBiZWZvcmUgcm91dGluZyBtZXNzYWdlDQogICAgLS0+DQogICAgPFJlcXVpcmVTU0wgZW5hYmxlZD0idHJ1ZSIgLz4NCiAgICA8TWVzc2FnZVNpemUgZW5hYmxlZD0idHJ1ZSI+DQogICAgICA8TWF4PjUxMjwvTWF4Pg0KICAgIDwvTWVzc2FnZVNpemU+DQogICAgPFF1ZXJ5U3RyaW5nTGVuZ3RoIGVuYWJsZWQ9InRydWUiPg0KICAgICAgPE1heD4xMDA8L01heD4NCiAgICA8L1F1ZXJ5U3RyaW5nTGVuZ3RoPg0KICAgIDxSYXRlTGltaXQgZW5hYmxlZD0idHJ1ZSI+DQogICAgICA8IS0tDQogICAgICAgIENvdW50OiBUaGUgbnVtYmVyIG9mIHJlcXVlc3RzIHBlciBhIHNwcmVhZCBvZiBzZWNvbmRzIGJlZm9yZSByZWplY3RpbmcgcmVxdWVzdHMuDQogICAgICAgIFNwcmVhZDogdGhlIG51bWJlciBvZiBzZWNvbmRzIGFjcm9zcyB3aGljaCB0byBzcHJlYWQgdGhlIGNvdW50ZXIuDQogICAgICAgIEluZGljYXRvcktleTogQ29udGV4dCBmb3IgdGhlIGNvdW50ZXIuIE11c3QgYmUgb25lIG9mIHNlcnZpY2UsIHJlc291cmNlVHJlZSwgcmVzb3VyY2VQYXRoIG9yIGZ1bGxSZXNvdXJjZQ0KICAgICAgICAgICAgd2hlcmUgbWFwcGluZ3MgYXJlOg0KICAgICAgICAgICAgICAgICBzZXJ2aWNlCSR7c2VydmljZS5iYXNlUGF0aH0NCiAgICAgICAgICAgICAgICAgcmVzb3VyY2VUcmVlCSR7c2VydmljZS5iYXNlUGF0aCd9LSR7cmVzb3VyY2UnfQ0KICAgICAgICAgICAgICAgICByZXNvdXJjZVBhdGgJJHtyZXF1ZXN0LnVybC5wYXRofQ0KICAgICAgICAgICAgICAgICBmdWxsUmVzb3VyY2UJJHtyZXF1ZXN0Lmh0dHAubWV0aG9kfS0ke3JlcXVlc3QudXJsLnBhdGh9JHtxdWVyeS5zdHJpbmd9DQogICAgICAtLT4NCiAgICAgIDxDb3VudD4xMDA8L0NvdW50Pg0KICAgICAgPFNwcmVhZD4xPC9TcHJlYWQ+DQogICAgICA8SW5kaWNhdG9yS2V5PnNlcnZpY2U8L0luZGljYXRvcktleT4NCiAgICA8L1JhdGVMaW1pdD4NCiAgICA8U1FMSW5qZWN0aW9uIGVuYWJsZWQ9InRydWUiPg0KICAgICAgPE1TU1FMPnRydWU8L01TU1FMPg0KICAgICAgPE9yYWNsZT50cnVlPC9PcmFjbGU+DQogICAgICA8U3RhbmRhcmQ+ZmFsc2U8L1N0YW5kYXJkPg0KICAgICAgPEludmFzaXZlPmZhbHNlPC9JbnZhc2l2ZT4NCiAgICA8L1NRTEluamVjdGlvbj4NCiAgICA8Q29kZUluamVjdGlvbiBlbmFibGVkPSJ0cnVlIj4NCiAgICAgIDxDU1M+dHJ1ZTwvQ1NTPg0KICAgICAgPExEQVBETj5mYWxzZTwvTERBUEROPg0KICAgICAgPExEQVBTZWFyY2g+dHJ1ZTwvTERBUFNlYXJjaD4NCiAgICA8L0NvZGVJbmplY3Rpb24+DQogICAgPERvY3VtZW50U3RydWN0dXJlIGVuYWJsZWQ9InRydWUiPg0KICAgICAgPCEtLQ0KICAgICAgICBNYXhUZXh0Q2hhcnM6IFJlc3RyaWN0IGxlbmd0aCBvZiBYTUwgdGV4dCBub2Rlcw0KICAgICAgICBNYXhBdHRyQ2hhcnM6IFJlc3RyaWN0IGxlbmd0aCBvZiBYTUwgYXR0cmlidXRlcw0KICAgICAgICBNYXhBdHRyTmFtZUNoYXJzOiBSZXN0cmljdCBsZW5ndGggb2YgWE1MIGF0dHJpYnV0ZSBuYW1lcw0KICAgICAgICBNYXhOZXN0aW5nRGVwdGg6IFJlc3RyaWN0IFhNTCBuZXN0aW5nIGRlcHRoDQogICAgICAgIE1heE5hbWVzcGFjZUNvdW50OiBSZXN0cmljdCBkaXN0aW5jdCBYTUwgbmFtZXNwYWNlIGRlY2xhcmF0aW9ucw0KICAgICAgICBNYXhOYW1lc3BhY2VQcmVmaXhDb3VudDogUmVzdHJpY3QgZGlzdGluY3QgWE1MIG5hbWVzcGFjZSBwcmVmaXggZGVjbGFyYXRpb25zDQogICAgICAtLT4NCiAgICAgIDxNYXhUZXh0Q2hhcnMgZW5hYmxlZD0idHJ1ZSI+MTYzODQ8L01heFRleHRDaGFycz4NCiAgICAgIDxNYXhBdHRyQ2hhcnMgZW5hYmxlZD0idHJ1ZSI+MjU2PC9NYXhBdHRyQ2hhcnM+DQogICAgICA8TWF4QXR0ck5hbWVDaGFycyBlbmFibGVkPSJ0cnVlIj40ODwvTWF4QXR0ck5hbWVDaGFycz4NCiAgICAgIDxNYXhOZXN0aW5nRGVwdGggZW5hYmxlZD0idHJ1ZSI+MTA8L01heE5lc3RpbmdEZXB0aD4NCiAgICAgIDxNYXhOYW1lc3BhY2VDb3VudCBlbmFibGVkPSJ0cnVlIj4xNTwvTWF4TmFtZXNwYWNlQ291bnQ+DQogICAgICA8TWF4TmFtZXNwYWNlUHJlZml4Q291bnQgZW5hYmxlZD0idHJ1ZSI+MTU8L01heE5hbWVzcGFjZVByZWZpeENvdW50Pg0KICAgIDwvRG9jdW1lbnRTdHJ1Y3R1cmU+DQogICAgPEtleXdvcmRGaWx0ZXIgZW5hYmxlZD0iZmFsc2UiPg0KICAgICAgPFJlZ2V4UGF0dGVybj4od29yZDF8d29yZDJ8d29yZDN8ZXRjKTwvUmVnZXhQYXR0ZXJuPg0KICAgIDwvS2V5d29yZEZpbHRlcj4NCiAgPC9Qb2xpY3lTZXR0aW5ncz4NCiAgPEFEU0luZm8+DQogICAgPEFEU1ZlcnNpb24gLz4NCiAgICA8U3R5bGVzaGVldFZlcnNpb24gLz4NCiAgPC9BRFNJbmZvPg0KPC9TZXJ2aWNlQ29uZmlndXJhdGlvbj4="/&gt;
            &lt;L7p:Enabled booleanValue="false"/&gt;
            &lt;L7p:VariableToSet stringValue="ads.configuration"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:AuditAssertion&gt;
            &lt;L7p:Enabled booleanValue="false"/&gt;
        &lt;/L7p:AuditAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="SW50ZXJuYWwgU2VydmVyIEVycm9y"/&gt;
                &lt;L7p:VariableToSet stringValue="error.message"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Default code is 500. Override in policy if required"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="NTAw"/&gt;
                &lt;L7p:VariableToSet stringValue="error.code"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:CustomizeErrorResponse&gt;
                &lt;L7p:Content stringValue="${error.message} (${requestid})"/&gt;
                &lt;L7p:ExtraHeaders nameValuePairArray="included"/&gt;
                &lt;L7p:HttpStatus stringValue="${error.code}"/&gt;
            &lt;/L7p:CustomizeErrorResponse&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Initialise the error response"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="************************************************ Configure service specific parameters"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** ${service.knownResources} lists each known resource with the corresponding allowed methods and content types."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   The format for each resource is &amp;quot;&amp;lt;resource&gt;:&amp;lt;methods&gt;:&amp;lt;content types&gt;&amp;quot; where methods and content types"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   are comma delimited lists. Finally the resources are catenated into a | delimited list for the final config."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   E.g.: user:GET:application/json|room:PUT,POST:application/json,text/xml"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   Note that methods that don't require a content type (GET, DELETE) still need to have something set. This  is"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**           to make configuration validation easier (using regex)"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   Note: Any of the three can contain a * to allow any resource/method/type. For e.g. *:GET,POST:* will allow"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**           any resource tree with any content type but limit the HTTP method to GET or POST."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="SET ME! ==&gt; "/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// basePath must be wrapped in /"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="L0NoYW5nZU1lLw=="/&gt;
                &lt;L7p:VariableToSet stringValue="service.basePath"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="SET ME! ==&gt; "/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// To where do we route this service?"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="JHtnYXRld2F5LkNoYW5nZU1lLmRlc3RpbmF0aW9uUm9vdH0="/&gt;
                &lt;L7p:VariableToSet stringValue="service.host"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="SET ME! ==&gt; "/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Used to validate the resource, method and content type"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="Q2hhbmdlTWU="/&gt;
                &lt;L7p:VariableToSet stringValue="service.knownResources"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="************************************************ Switch protections on/off"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                &lt;L7p:VariableToSet stringValue="config.messageSize.enabled"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                &lt;L7p:VariableToSet stringValue="config.urlLength.enabled"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                &lt;L7p:VariableToSet stringValue="config.sqlInjection.enabled"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                &lt;L7p:VariableToSet stringValue="config.codeInjection.enabled"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                &lt;L7p:VariableToSet stringValue="config.ldapCodeInjection.enabled"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                &lt;L7p:VariableToSet stringValue="config.documentStructure.enabled"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                &lt;L7p:VariableToSet stringValue="config.rateLimit.enabled"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                &lt;L7p:VariableToSet stringValue="config.checkResponseCodes.enabled"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Only relevant when config.checkResponseCodes.enabled is set to true "/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="MzAxLDMwMiwzMDQsMzA3LDQwMCw0MDEsNDAzLDQwNCw0MDUsNDA2LDQwOCw0MDksNDE1LDUwMCw1MDIsNTAzLDUwNA=="/&gt;
                &lt;L7p:VariableToSet stringValue="service.knownResponseCodes"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="************************************************ Default limits"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Only relevant when config.rateLimit.enabled is set to true "/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="MTAw"/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="config.rateLimit.max"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Only relevant when config.messageSize.enabled is set to true "/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="NTEy"/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="config.messageSize.max"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Only relevant when config.urlLength.enabled is set to true "/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="NTEy"/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="config.urlLength.max"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MTAwMA=="/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="config.connectionTimeOut.max"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="NTAwMA=="/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="config.readTimeOut.max"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="************************************************ Additional Features"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Allows url path changes"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="config.routing.rewritePath.enabled"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="config.keywordFilter.enabled"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Allows Cookie path changes"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="config.responseCookiePathRewrite.enabled"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Allow the use of JSON DST tactical fix"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="config.advancedJSONCheck.enabled"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Configuration Block"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// set the httpRouting.latency to -1"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="LTE="/&gt;
                &lt;L7p:VariableToSet stringValue="httpRouting.latency"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Set the httpRouting.latency to a default of -1 to supress audit errors"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:SslAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Traffic should be over SSL"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
            &lt;/L7p:SslAssertion&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Rm9yYmlkZGVuIChub3QgU1NMKQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="NDAz"/&gt;
                    &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Request denied: not received over SSL"/&gt;
                    &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Set error message and fail with 403"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Handle SSL requirement"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// put into a string for regex"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAuYWxsaGVhZGVydmFsdWVzfQ=="/&gt;
                &lt;L7p:VariableToSet stringValue="headerString"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:Regex&gt;
                        &lt;L7p:AutoTarget booleanValue="false"/&gt;
                        &lt;L7p:CaseInsensitive booleanValue="true"/&gt;
                        &lt;L7p:IncludeEntireExpressionCapture booleanValue="false"/&gt;
                        &lt;L7p:OtherTargetMessageVariable stringValue="headerString"/&gt;
                        &lt;L7p:Regex stringValue="X-Forwarded-For:"/&gt;
                        &lt;L7p:RegexName stringValue="header regex test for X-Forwarded-For"/&gt;
                        &lt;L7p:Replacement stringValue=""/&gt;
                        &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:Regex&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${request.http.header.X-Forwarded-For}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item stringLength="included"&gt;
                                &lt;L7p:Max intValue="-1"/&gt;
                                &lt;L7p:Min intValue="7"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:Regex&gt;
                                &lt;L7p:AutoTarget booleanValue="false"/&gt;
                                &lt;L7p:CaseInsensitive booleanValue="true"/&gt;
                                &lt;L7p:IncludeEntireExpressionCapture booleanValue="false"/&gt;
                                &lt;L7p:OtherTargetMessageVariable stringValue="headerString"/&gt;
                                &lt;L7p:Regex stringValue="NS-Client-IP:"/&gt;
                                &lt;L7p:RegexName stringValue="header regex test for NS-Client-IP"/&gt;
                                &lt;L7p:Replacement stringValue=""/&gt;
                                &lt;L7p:Target target="OTHER"/&gt;
                            &lt;/L7p:Regex&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${request.http.header.NS-Client-IP}"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item stringLength="included"&gt;
                                    &lt;L7p:Max intValue="-1"/&gt;
                                    &lt;L7p:Min intValue="7"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:Expression1 stringValue="${request.http.header.NS-Client-IP}"/&gt;
                                &lt;L7p:Expression2 stringValue="${request.http.header.X-Forwarded-For}"/&gt;
                                &lt;L7p:Negate booleanValue="true"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="${request.http.header.X-Forwarded-For}"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:AuditDetailAssertion&gt;
                                &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: NS-Client-IP is ${request.http.header.NS-Client-IP}"/&gt;
                                &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                            &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;/wsp:All&gt;
                        &lt;L7p:TrueAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// check ns-client-ip as well"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// check x-forwarded-ip first"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:Regex&gt;
                        &lt;L7p:AutoTarget booleanValue="false"/&gt;
                        &lt;L7p:CaseInsensitive booleanValue="true"/&gt;
                        &lt;L7p:IncludeEntireExpressionCapture booleanValue="false"/&gt;
                        &lt;L7p:OtherTargetMessageVariable stringValue="headerString"/&gt;
                        &lt;L7p:Regex stringValue="NS-Client-IP:"/&gt;
                        &lt;L7p:RegexName stringValue="header regex test for NS-Client-IP"/&gt;
                        &lt;L7p:Replacement stringValue=""/&gt;
                        &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:Regex&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${request.http.header.NS-Client-IP}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item stringLength="included"&gt;
                                &lt;L7p:Max intValue="-1"/&gt;
                                &lt;L7p:Min intValue="7"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:AddHeader&gt;
                        &lt;L7p:HeaderName stringValue="X-Forwarded-For"/&gt;
                        &lt;L7p:HeaderValue stringValue="${request.http.header.NS-Client-IP}"/&gt;
                    &lt;/L7p:AddHeader&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// check  ns-client-ip if xff cannot be found"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:AddHeader&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// use empty value for xff"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:HeaderName stringValue="X-Forwarded-For"/&gt;
                    &lt;L7p:HeaderValue stringValue=""/&gt;
                &lt;/L7p:AddHeader&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// IP address header processing"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Initialize detail as empty"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue=""/&gt;
                &lt;L7p:VariableToSet stringValue="detail"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:CaptureVar stringValue="resource.match"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="request.url.path"/&gt;
                    &lt;L7p:PatternContainsVariables booleanValue="true"/&gt;
                    &lt;L7p:Regex stringValue="${service.basePath}([^\/]+)\/*(.*)"/&gt;
                    &lt;L7p:Replacement stringValue=""/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:Regex&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="Tm90IEZvdW5kIChwYXRoIG1pc21hdGNoKQ=="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDA0"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Request denied: basePath mismatch: ${service.basePath} not in ${request.url.path}"/&gt;
                        &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:FalseAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Not found so handle error condition and fail with 404"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Validate base path and isolate resource"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="JHtyZXNvdXJjZS5tYXRjaFsxXX0="/&gt;
                &lt;L7p:VariableToSet stringValue="resource"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Initialise that we have not found this resource"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                    &lt;L7p:VariableToSet stringValue="resourceConfig.found"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:Split&gt;
                    &lt;L7p:InputVariable stringValue="service.knownResources"/&gt;
                    &lt;L7p:OutputVariable stringValue="service.knownResources.list"/&gt;
                    &lt;L7p:SplitPattern stringValue="|"/&gt;
                    &lt;L7p:SplitPatternRegEx booleanValue="false"/&gt;
                &lt;/L7p:Split&gt;
                &lt;L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="service.knownResources.list" variablePrefix="resourceConfig"&gt;
                    &lt;L7p:Split&gt;
                        &lt;L7p:InputVariable stringValue="resourceConfig.current"/&gt;
                        &lt;L7p:OutputVariable stringValue="resourceConfig.set"/&gt;
                        &lt;L7p:SplitPattern stringValue=":"/&gt;
                        &lt;L7p:SplitPatternRegEx booleanValue="false"/&gt;
                    &lt;/L7p:Split&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Doesn't match so exit early"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${resourceConfig.set[0]}"/&gt;
                                &lt;L7p:Expression2 stringValue="${resource}"/&gt;
                                &lt;L7p:Negate booleanValue="true"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="${resource}"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Doesn't match so exit early"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${resourceConfig.set[0]}"/&gt;
                                &lt;L7p:Expression2 stringValue="*"/&gt;
                                &lt;L7p:Negate booleanValue="true"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="*"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Confirm the resource matches from knownResources value"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                                &lt;L7p:VariableToSet stringValue="resourceConfig.found"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtyZXNvdXJjZUNvbmZpZy5zZXRbMV19"/&gt;
                                &lt;L7p:VariableToSet stringValue="service.httpMethods"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtyZXNvdXJjZUNvbmZpZy5zZXRbMl19"/&gt;
                                &lt;L7p:VariableToSet stringValue="service.contentTypes"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:CommentAssertion&gt;
                                &lt;L7p:Comment stringValue="** With v7.0 of the Gateway we can break out of the loop once found"/&gt;
                            &lt;/L7p:CommentAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="ENABLE IN v7.0+:"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Break out of the loop"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                                &lt;L7p:Enabled booleanValue="false"/&gt;
                                &lt;L7p:VariableToSet stringValue="resourceConfig.break"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Matched so parse out list of HTTP methods and content types for this resource"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Parse this config if it matches the resource in the path"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                &lt;/L7p:ForEachLoop&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${resourceConfig.found}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="boolean"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="true"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="Tm90IEZvdW5kICgke3Jlc291cmNlfSk="/&gt;
                            &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="NDA0"/&gt;
                            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Request denied: bad resource requested (${resource})"/&gt;
                            &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:FalseAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Not found so handle error condition and fail with 404"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Confirm that the resource config was found or fail with 404"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Validate that the resource is recognised and parse ${service.knownResources}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// May be used by the specific resource handler fragment"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="JHtyZXNvdXJjZS5tYXRjaFsyXX0="/&gt;
                &lt;L7p:VariableToSet stringValue="detail"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Determine the resource from the path (as ${resource}) and validate, fail with 404"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Set this so we have a defined string with which to work"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnVybH0="/&gt;
                &lt;L7p:VariableToSet stringValue="url.string"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:EncodeDecode&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Decode it so we can have the real string"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:SourceVariableName stringValue="url.string"/&gt;
                &lt;L7p:TargetDataType variableDataType="string"/&gt;
                &lt;L7p:TargetVariableName stringValue="url.string"/&gt;
                &lt;L7p:TransformType transformType="URL_DECODE"/&gt;
            &lt;/L7p:EncodeDecode&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Cast to a message type to run various assertions on it"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="JHt1cmwuc3RyaW5nfQ=="/&gt;
                &lt;L7p:ContentType stringValue="text/plain; charset=utf-8"/&gt;
                &lt;L7p:DataType variableDataType="message"/&gt;
                &lt;L7p:VariableToSet stringValue="url.msg"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Prepare for removing extended information"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0LmNvbnRlbnRUeXBlfQ=="/&gt;
                &lt;L7p:VariableToSet stringValue="contentType"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:Regex&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Remove extended information like charset"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:AutoTarget booleanValue="false"/&gt;
                &lt;L7p:OtherTargetMessageVariable stringValue="contentType"/&gt;
                &lt;L7p:Regex stringValue=" *;.*"/&gt;
                &lt;L7p:Replace booleanValue="true"/&gt;
                &lt;L7p:Replacement stringValue=""/&gt;
                &lt;L7p:Target target="OTHER"/&gt;
            &lt;/L7p:Regex&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** Validate the request for various threat conditions"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** Start mandatory validation tests **"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:Split&gt;
                    &lt;L7p:InputVariable stringValue="service.httpMethods"/&gt;
                    &lt;L7p:OutputVariable stringValue="service.httpMethods.list"/&gt;
                &lt;/L7p:Split&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:IndexLookupByItem&gt;
                        &lt;L7p:MultivaluedVariableName stringValue="service.httpMethods.list"/&gt;
                        &lt;L7p:OutputVariableName stringValue="service.httpMethods.index"/&gt;
                        &lt;L7p:ValueToSearchForVariableName stringValue="request.http.method"/&gt;
                    &lt;/L7p:IndexLookupByItem&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${service.httpMethods}"/&gt;
                        &lt;L7p:Expression2 stringValue="*"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="*"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="TWV0aG9kIE5vdCBBbGxvd2VkICgke3JlcXVlc3QuaHR0cC5tZXRob2R9KQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Method Not Allowed [RFC2616]"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="NDA1"/&gt;
                            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:AddHeader&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Required by RFC2616"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:HeaderName stringValue="Allow"/&gt;
                            &lt;L7p:HeaderValue stringValue="${service.httpMethods}"/&gt;
                            &lt;L7p:RemoveExisting booleanValue="true"/&gt;
                            &lt;L7p:Target target="RESPONSE"/&gt;
                        &lt;/L7p:AddHeader&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Request denied: bad HTTP method requested (${request.http.method} not found in ${service.httpMethods})"/&gt;
                            &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:FalseAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Not found so handle error condition and fail with 405"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Find it in the list or check if service.httpMethods = &amp;quot;*&amp;quot;"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Validate that the http method is recognised, fail with 405"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Exit early when method is not POST or PUT"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.method}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="POST"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="PUT"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:Split&gt;
                        &lt;L7p:InputVariable stringValue="service.contentTypes"/&gt;
                        &lt;L7p:OutputVariable stringValue="service.contentTypes.list"/&gt;
                    &lt;/L7p:Split&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:IndexLookupByItem&gt;
                            &lt;L7p:MultivaluedVariableName stringValue="service.contentTypes.list"/&gt;
                            &lt;L7p:OutputVariableName stringValue="service.contentTypes.index"/&gt;
                            &lt;L7p:ValueToSearchForVariableName stringValue="contentType"/&gt;
                        &lt;/L7p:IndexLookupByItem&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${service.contentTypes}"/&gt;
                            &lt;L7p:Expression2 stringValue="*"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="*"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="VW5zdXBwb3J0ZWQgTWVkaWEgVHlwZSAoJHtyZXF1ZXN0LmNvbnRlbnRUeXBlfSk="/&gt;
                                &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Unsupported Media Type [RFC2616]"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Base64Expression stringValue="NDE1"/&gt;
                                &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:AuditDetailAssertion&gt;
                                &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Request denied: bad content type requested (${contentType} not found in ${service.contentTypes})"/&gt;
                                &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                            &lt;/L7p:AuditDetailAssertion&gt;
                            &lt;L7p:FalseAssertion/&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Not found so handle error condition and fail with 415"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Find it in the list or check if service.contentTypes = &amp;quot;*&amp;quot;"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Validate that the content type is recognised"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Validate that the content type is recognised for POST &amp;amp; PUT, fail with 415"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${config.messageSize.enabled}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Exit early when method is not POST or PUT"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.method}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="POST"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="PUT"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:RequestSizeLimit&gt;
                    &lt;L7p:Limit stringValue="${config.messageSize.max}"/&gt;
                &lt;/L7p:RequestSizeLimit&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="UmVxdWVzdCBFbnRpdHkgVG9vIExhcmdl"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Request Entity Too Large [RFC2616]"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="NDEz"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Request denied: Payload too big (&gt; ${config.messageSize.max})"/&gt;
                        &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:FalseAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Handle error condition and fail with 413"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Validate message request size, fail with 413"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Exit early when method is not POST or PUT"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.method}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="POST"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="PUT"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Exit early the body size is 0"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${request.mainpart.size}"/&gt;
                    &lt;L7p:Expression2 stringValue="0"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="0"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${contentType}"/&gt;
                        &lt;L7p:Expression2 stringValue="application/json"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="application/json"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:JSONSchema&gt;
                        &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                            &lt;L7p:Document stringValue="{}"/&gt;
                        &lt;/L7p:ResourceInfo&gt;
                    &lt;/L7p:JSONSchema&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Validate a JSON payload by trying to transform it to XML"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${contentType}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item regex="included"&gt;
                                &lt;L7p:Pattern stringValue="application/xml|text/xml"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:RequestXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue=""/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:RequestXpathAssertion&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Validate an text/xml or application/xml payload by trying an XPath on it"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${contentType}"/&gt;
                        &lt;L7p:Expression2 stringValue="application/x-www-form-urlencoded"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="application/x-www-form-urlencoded"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:CommentAssertion&gt;
                        &lt;L7p:Comment stringValue="** InfoSec to define checks for HTMLFORM"/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Validate a web Form application/x-www-form-urlencoded "/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="QmFkIFJlcXVlc3Q="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Bad Request [RFC2616]"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Request denied: not well formed content type ${contentType}"/&gt;
                        &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:FalseAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Handle error condition and fail with 400"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Validate well formedness of POST and PUT request payloads, fail with 400"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** Start optional validation tests **"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${config.urlLength.enabled}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Check the query string length, default is no query string allowed"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${url.msg.size}"/&gt;
                    &lt;L7p:Expression2 stringValue="${config.urlLength.max}"/&gt;
                    &lt;L7p:Operator operator="LE"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Operator operator="LE"/&gt;
                            &lt;L7p:RightValue stringValue="${config.urlLength.max}"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="UmVxdWVzdC1VUkkgVG9vIExvbmc="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Request-URI Too Long [RFC2616]"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="NDE0"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Request denied: Query string too long (&gt; ${config.urlLength.max})"/&gt;
                        &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:FalseAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Handle error condition and fail with 414"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Validate URL string length, fail with 414"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${config.sqlInjection.enabled}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Use for error reporting"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="dXJsIHN0cmluZyAoJHt1cmwuc3RyaW5nfSk="/&gt;
                        &lt;L7p:VariableToSet stringValue="search.part"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SqlAttackProtection&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Evaluate the query string"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:OtherTargetMessageVariable stringValue="url.msg"/&gt;
                        &lt;L7p:Protections stringSetValue="included"&gt;
                            &lt;L7p:item stringValue="OraSql"/&gt;
                            &lt;L7p:item stringValue="MsSql"/&gt;
                        &lt;/L7p:Protections&gt;
                        &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:SqlAttackProtection&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Use for error reporting"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="cGF5bG9hZA=="/&gt;
                        &lt;L7p:VariableToSet stringValue="search.part"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Exit early when method is not POST or PUT"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${request.http.method}"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="POST"/&gt;
                                &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="PUT"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:SqlAttackProtection&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Evaluate the payload"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Protections stringSetValue="included"&gt;
                                &lt;L7p:item stringValue="OraSql"/&gt;
                                &lt;L7p:item stringValue="MsSql"/&gt;
                            &lt;/L7p:Protections&gt;
                        &lt;/L7p:SqlAttackProtection&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check the payload (if HTTP method is POST or PUT)"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Check query string and/or payload"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="QmFkIFJlcXVlc3Q="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Bad Request [RFC2616]"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Request denied: Detected SQL injection in ${search.part}"/&gt;
                        &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:FalseAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Handle error condition and fail with 400"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Check request for sql injection, fail with 400"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${config.codeInjection.enabled}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${config.ldapCodeInjection.enabled}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="string"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:RightValue stringValue="true"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="dXJsIHN0cmluZyAoJHt1cmwuc3RyaW5nfSk="/&gt;
                        &lt;L7p:VariableToSet stringValue="search.part"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:CodeInjectionProtectionAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check the query string"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:IncludeBody booleanValue="true"/&gt;
                        &lt;L7p:IncludeUrlQueryString booleanValue="true"/&gt;
                        &lt;L7p:OtherTargetMessageVariable stringValue="url.msg"/&gt;
                        &lt;L7p:Protections codeInjectionProtectionTypeArray="included"&gt;
                            &lt;L7p:item protectionType="htmlJavaScriptInjection"/&gt;
                            &lt;L7p:item protectionType="ldapSearchInjection"/&gt;
                        &lt;/L7p:Protections&gt;
                        &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:CodeInjectionProtectionAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="cGF5bG9hZA=="/&gt;
                        &lt;L7p:VariableToSet stringValue="search.part"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Exit early when method is not POST or PUT"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${request.http.method}"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="POST"/&gt;
                                &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="PUT"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:CodeInjectionProtectionAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check the payload"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:IncludeBody booleanValue="true"/&gt;
                            &lt;L7p:IncludeUrlQueryString booleanValue="true"/&gt;
                            &lt;L7p:Protections codeInjectionProtectionTypeArray="included"&gt;
                                &lt;L7p:item protectionType="htmlJavaScriptInjection"/&gt;
                                &lt;L7p:item protectionType="ldapSearchInjection"/&gt;
                            &lt;/L7p:Protections&gt;
                            &lt;L7p:Target target="REQUEST"/&gt;
                        &lt;/L7p:CodeInjectionProtectionAssertion&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check the payload (if HTTP method is POST or PUT)"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Check query string and/or payload including ldap code injection"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${config.ldapCodeInjection.enabled}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="string"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:RightValue stringValue="false"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="dXJsIHN0cmluZyAoJHt1cmwuc3RyaW5nfSk="/&gt;
                        &lt;L7p:VariableToSet stringValue="search.part"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:CodeInjectionProtectionAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check the query string"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:IncludeBody booleanValue="true"/&gt;
                        &lt;L7p:IncludeUrlQueryString booleanValue="true"/&gt;
                        &lt;L7p:OtherTargetMessageVariable stringValue="url.msg"/&gt;
                        &lt;L7p:Protections codeInjectionProtectionTypeArray="included"&gt;
                            &lt;L7p:item protectionType="htmlJavaScriptInjection"/&gt;
                        &lt;/L7p:Protections&gt;
                        &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:CodeInjectionProtectionAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="cGF5bG9hZA=="/&gt;
                        &lt;L7p:VariableToSet stringValue="search.part"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Exit early when method is not POST or PUT"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${request.http.method}"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="POST"/&gt;
                                &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="PUT"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:CodeInjectionProtectionAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check the payload"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:IncludeBody booleanValue="true"/&gt;
                            &lt;L7p:IncludeUrlQueryString booleanValue="true"/&gt;
                            &lt;L7p:Protections codeInjectionProtectionTypeArray="included"&gt;
                                &lt;L7p:item protectionType="htmlJavaScriptInjection"/&gt;
                            &lt;/L7p:Protections&gt;
                            &lt;L7p:Target target="REQUEST"/&gt;
                        &lt;/L7p:CodeInjectionProtectionAssertion&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check the payload (if HTTP method is POST or PUT)"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Check query string and/or payload excluding ldap code injection"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="QmFkIFJlcXVlc3Q="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Bad Request [RFC2616]"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Request denied: Detected Code injection in ${search.part}"/&gt;
                        &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:FalseAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Handle error condition and fail with 400"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Check message for code injection, fail with 400"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${config.documentStructure.enabled}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Exit early when method is not POST or PUT"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.method}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="POST"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="PUT"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Exit early the body size is 0"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${request.mainpart.size}"/&gt;
                    &lt;L7p:Expression2 stringValue="0"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="0"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${contentType}"/&gt;
                            &lt;L7p:Expression2 stringValue="application/json"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="application/json"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:JsonTransformation&gt;
                                    &lt;L7p:DestinationMessageTarget MessageTarget="included"&gt;
                                    &lt;L7p:OtherTargetMessageVariable stringValue="temporary.msg"/&gt;
                                    &lt;L7p:Target target="OTHER"/&gt;
                                    &lt;L7p:TargetModifiedByGateway booleanValue="true"/&gt;
                                    &lt;/L7p:DestinationMessageTarget&gt;
                                    &lt;L7p:RootTagString stringValue="root"/&gt;
                                    &lt;L7p:Target target="REQUEST"/&gt;
                                    &lt;L7p:Transformation transformation="JSON_to_XML"/&gt;
                                &lt;/L7p:JsonTransformation&gt;
                                &lt;L7p:OversizedText&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// JSON"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:LimitAttrChars booleanValue="false"/&gt;
                                    &lt;L7p:LimitAttrNameChars booleanValue="false"/&gt;
                                    &lt;L7p:MaxAttrChars longValue="256"/&gt;
                                    &lt;L7p:MaxAttrNameChars intValue="48"/&gt;
                                    &lt;L7p:MaxNestingDepth intValue="10"/&gt;
                                    &lt;L7p:OtherTargetMessageVariable stringValue="temporary.msg"/&gt;
                                    &lt;L7p:Target target="OTHER"/&gt;
                                &lt;/L7p:OversizedText&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// default DST check, may fail to transform for certain valid JSON payload"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Exit early the body size is 0"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${config.advancedJSONCheck.enabled}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="string"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Commencing advanced JSON Document Structure Threat violation."/&gt;
                                    &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                                &lt;/L7p:AuditDetailAssertion&gt;
                                &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lm1haW5wYXJ0fQ=="/&gt;
                                    &lt;L7p:ContentType stringValue="application/json; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="copyMsg"/&gt;
                                &lt;/L7p:SetVariable&gt;
                                &lt;L7p:Regex&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Replace escaped doublequote (\&amp;quot;) characters with two underscore characters"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                                    &lt;L7p:OtherTargetMessageVariable stringValue="copyMsg"/&gt;
                                    &lt;L7p:Regex stringValue="(\\&amp;quot;)"/&gt;
                                    &lt;L7p:Replace booleanValue="true"/&gt;
                                    &lt;L7p:Replacement stringValue="__"/&gt;
                                    &lt;L7p:Target target="OTHER"/&gt;
                                &lt;/L7p:Regex&gt;
                                &lt;L7p:Regex&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check to see if there are any strings of length greater than 16384, and fail if there are"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                                    &lt;L7p:OtherTargetMessageVariable stringValue="copyMsg"/&gt;
                                    &lt;L7p:ProceedIfPatternMatches booleanValue="false"/&gt;
                                    &lt;L7p:Regex stringValue="[\{|,|:\[\]]\s*&amp;quot;([^&amp;quot;]{16385,})&amp;quot;"/&gt;
                                    &lt;L7p:Replacement stringValue=""/&gt;
                                    &lt;L7p:Target target="OTHER"/&gt;
                                &lt;/L7p:Regex&gt;
                                &lt;L7p:Regex&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check to see if there are any numbers with string length &gt; 16384"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                                    &lt;L7p:OtherTargetMessageVariable stringValue="copyMsg"/&gt;
                                    &lt;L7p:ProceedIfPatternMatches booleanValue="false"/&gt;
                                    &lt;L7p:Regex stringValue="[\[|,|:]\s*([\d|.|\-|+|e|E]+){16385,}"/&gt;
                                    &lt;L7p:Replacement stringValue=""/&gt;
                                    &lt;L7p:Target target="OTHER"/&gt;
                                &lt;/L7p:Regex&gt;
                                &lt;L7p:Regex&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Iteratively replace JSON elements and branches up to the defined limit."/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                                    &lt;L7p:OtherTargetMessageVariable stringValue="copyMsg"/&gt;
                                    &lt;L7p:Regex stringValue="(\{[^\}|^\{]*\})"/&gt;
                                    &lt;L7p:Replace booleanValue="true"/&gt;
                                    &lt;L7p:ReplaceRepeatCount intValue="10"/&gt;
                                    &lt;L7p:Replacement stringValue=""/&gt;
                                    &lt;L7p:Target target="OTHER"/&gt;
                                &lt;/L7p:Regex&gt;
                                &lt;L7p:Regex&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check to see if there are any remaining JSON elements or branches following the reduction in the previous step.  If there are, then fail."/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                                    &lt;L7p:OtherTargetMessageVariable stringValue="copyMsg"/&gt;
                                    &lt;L7p:ProceedIfPatternMatches booleanValue="false"/&gt;
                                    &lt;L7p:Regex stringValue="(\{[^\}|^\{]*\})"/&gt;
                                    &lt;L7p:Replacement stringValue=""/&gt;
                                    &lt;L7p:Target target="OTHER"/&gt;
                                &lt;/L7p:Regex&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// optional advanced DST check. To be replaced in v8.3."/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Handle JSON payload"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${contentType}"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item regex="included"&gt;
                                    &lt;L7p:Pattern stringValue="application/xml|text/xml"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:OversizedText&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// XML"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:LimitNamespaceCount booleanValue="true"/&gt;
                            &lt;L7p:LimitNamespacePrefixCount booleanValue="true"/&gt;
                            &lt;L7p:MaxAttrChars longValue="256"/&gt;
                            &lt;L7p:MaxAttrNameChars intValue="48"/&gt;
                            &lt;L7p:MaxNamespaceCount intValue="15"/&gt;
                            &lt;L7p:MaxNamespacePrefixCount intValue="15"/&gt;
                            &lt;L7p:MaxNestingDepth intValue="10"/&gt;
                        &lt;/L7p:OversizedText&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Handle text/xml or application/xml payload"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${contentType}"/&gt;
                            &lt;L7p:Expression2 stringValue="application/x-www-form-urlencoded"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="application/x-www-form-urlencoded"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="** InfoSec to define checks for HTMLFORM"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Handle HTMLFORM Payload"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Different branches for JSON vs XML payloads"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="QmFkIFJlcXVlc3Q="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Bad Request [RFC2616]"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Request denied: Encountered Document Structure Threat violation"/&gt;
                        &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:FalseAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Handle error condition and fail with 400"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Run document structure threat assertion on POST/PUT requests, fail with 400"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${config.keywordFilter.enabled}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="************************************************************************************"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="** The keyword filter assertions are specific for the Query and Payload. Be sure to configure both."/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="************************************************************************************"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="******************************************************************************"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="** This regexes the whole string. It may be better to loop through the parameters and test each"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="**     one independently so the parameter names are not tested"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="******************************************************************************"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="dXJsIHN0cmluZyAoJHt1cmwuc3RyaW5nfSk="/&gt;
                            &lt;L7p:VariableToSet stringValue="search.part"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:CaptureVar stringValue="keywordMatch"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="url.string"/&gt;
                            &lt;L7p:ProceedIfPatternMatches booleanValue="false"/&gt;
                            &lt;L7p:Regex stringValue="(word1|word2|word3|etc)"/&gt;
                            &lt;L7p:Replacement stringValue=""/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Run the test and set ${search.part} for error reporting"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Exit early when method is not POST or PUT"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${request.http.method}"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="POST"/&gt;
                                &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="PUT"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="cGF5bG9hZA=="/&gt;
                                &lt;L7p:VariableToSet stringValue="search.part"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:Regex&gt;
                                &lt;L7p:AutoTarget booleanValue="false"/&gt;
                                &lt;L7p:CaptureVar stringValue="keywordMatch"/&gt;
                                &lt;L7p:ProceedIfPatternMatches booleanValue="false"/&gt;
                                &lt;L7p:Regex stringValue="(word1|word2|word3|etc)"/&gt;
                                &lt;L7p:Replacement stringValue=""/&gt;
                            &lt;/L7p:Regex&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Run the test and set ${search.part} for error reporting"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Filter Payload (if POST or PUT)"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Run the tests on Query and Payload as required"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="QmFkIFJlcXVlc3Q="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Bad Request [RFC2616]"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Request denied: Found keyword filter hit in ${search.part}"/&gt;
                        &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:FalseAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Handle error condition and fail with 400"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Run Keyword Filters, fail with 400"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${config.rateLimit.enabled}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:RateLimit&gt;
                    &lt;L7p:CounterName stringValue="${service.basePath}"/&gt;
                    &lt;L7p:MaxRequestsPerSecond stringValue="${config.rateLimit.max}"/&gt;
                &lt;/L7p:RateLimit&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="VG9vIE1hbnkgUmVxdWVzdHM="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Too Many Requests [RFC6585]"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="NDI5"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Request denied: Rate limit exceeded (&gt; ${config.rateLimit.max})"/&gt;
                        &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:FalseAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Handle error condition and fail with 429"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Validate rate limit, fail with 429 - this should be done last so bad messages are not part of the rate limit check"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Validate the request"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** If there is any additional &amp;quot;custom&amp;quot; processing that needs to be done (transforms, etc) then do it here."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Set routing path to the request path"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnVybC5wYXRofQ=="/&gt;
                &lt;L7p:VariableToSet stringValue="service.routePath"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${config.routing.rewritePath.enabled}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:Regex&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Rewrite the routing path"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="service.routePath"/&gt;
                    &lt;L7p:Regex stringValue="^\/ChangeMe"/&gt;
                    &lt;L7p:Replace booleanValue="true"/&gt;
                    &lt;L7p:Replacement stringValue="ChangeMe"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:Regex&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Rewrite routing path if enabled"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="JHtzZXJ2aWNlLmhvc3R9JHtzZXJ2aWNlLnJvdXRlUGF0aH0ke3JlcXVlc3QudXJsLnF1ZXJ5fQ=="/&gt;
                &lt;L7p:VariableToSet stringValue="service.endpoint"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:ConnectionTimeout stringValue="${config.connectionTimeOut.max}"/&gt;
                    &lt;L7p:FailOnErrorStatus booleanValue="false"/&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="${service.endpoint}"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="Cookie"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Rules&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="Set-Cookie"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Rules&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                    &lt;L7p:Timeout stringValue="${config.readTimeOut.max}"/&gt;
                &lt;/L7p:HttpRoutingAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="QmFkIEdhdGV3YXk="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Bad Gateway [RFC2616]"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="NTAy"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Error attempting route to ${service.endpoint}. Returning ${error.code} to client."/&gt;
                        &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:FalseAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Return a Bad Gateway response [RFC2616]"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Route to the service endpoint, fail with 502"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Less than 300 is a success"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${response.http.status}"/&gt;
                    &lt;L7p:Expression2 stringValue="300"/&gt;
                    &lt;L7p:Operator operator="LT"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Operator operator="LT"/&gt;
                            &lt;L7p:RightValue stringValue="300"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// bypass response code check if set to false"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${config.checkResponseCodes.enabled}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:Split&gt;
                        &lt;L7p:InputVariable stringValue="service.knownResponseCodes"/&gt;
                        &lt;L7p:OutputVariable stringValue="service.knownResponseCodes.list"/&gt;
                    &lt;/L7p:Split&gt;
                    &lt;L7p:IndexLookupByItem&gt;
                        &lt;L7p:MultivaluedVariableName stringValue="service.knownResponseCodes.list"/&gt;
                        &lt;L7p:OutputVariableName stringValue="service.knownResponseCodes.index"/&gt;
                        &lt;L7p:ValueToSearchForVariableName stringValue="response.http.status"/&gt;
                    &lt;/L7p:IndexLookupByItem&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// check against known response codes, which can not be *"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="QmFkIEdhdGV3YXk="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Bad Gateway [RFC2616]"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="NTAy"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: ${service.endpoint} returned an unknown response (${response.http.status}). Returning ${error.code} to client."/&gt;
                        &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:FalseAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Return a Bad Gateway response [RFC2616]"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// process response code"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${config.responseCookiePathRewrite.enabled}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue=" // stop Gateway from overwritting the cookie path"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                        &lt;L7p:VariableToSet stringValue="response.cookie.overwritePath"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ManageCookie&gt;
                        &lt;L7p:CookieAttributes mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="path"/&gt;
                                &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="path"/&gt;
                                    &lt;L7p:Value stringValue="${service.basePath}"/&gt;
                                &lt;/L7p:value&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:CookieAttributes&gt;
                        &lt;L7p:CookieCriteria mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="name"/&gt;
                                &lt;L7p:value cookieCriteria="included"&gt;
                                    &lt;L7p:Key stringValue="name"/&gt;
                                    &lt;L7p:Regex booleanValue="true"/&gt;
                                    &lt;L7p:Value stringValue=".*"/&gt;
                                &lt;/L7p:value&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:CookieCriteria&gt;
                        &lt;L7p:Operation operation="UPDATE"/&gt;
                        &lt;L7p:Target target="RESPONSE"/&gt;
                    &lt;/L7p:ManageCookie&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Process Cookie paths. By default, the Gateway overwrites it to the path of request"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Routing"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Service>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Generic REST Service Template v3.29</l7:Name>
            <l7:Id>63805bece54f5987d66ab52a849946f1</l7:Id>
            <l7:Type>SERVICE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.947-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Service id="63805bece54f5987d66ab52a849946f1" version="2">
                    <l7:ServiceDetail folderId="fb3f1ba1a929b3396bcf367081131690" id="63805bece54f5987d66ab52a849946f1" version="2">
                        <l7:Name>Generic REST Service Template v3.29</l7:Name>
                        <l7:Enabled>false</l7:Enabled>
                        <l7:ServiceMappings>
                            <l7:HttpMapping>
                                <l7:UrlPattern>/ChangeMe/*</l7:UrlPattern>
                                <l7:Verbs>
                                    <l7:Verb>GET</l7:Verb>
                                    <l7:Verb>POST</l7:Verb>
                                    <l7:Verb>PUT</l7:Verb>
                                    <l7:Verb>DELETE</l7:Verb>
                                </l7:Verbs>
                            </l7:HttpMapping>
                        </l7:ServiceMappings>
                        <l7:Properties>
                            <l7:Property key="internal">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="policyRevision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="tracingEnabled">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="wssProcessingEnabled">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:ServiceDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy" version="0">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*******************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Service Description: Generic REST Service Template v3"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Service Name:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Service Path:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Source Template:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Source Template Version History:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.00 - Jay MacDonald - 2013-05-22 - Adapted from SOAP with hard coded parameters"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.01 - Jay MacDonald - 2013-05-29 - Sending Audit Details to log"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.02 - Jay MacDonald - 2013-05-29 - Updated to handle JSON vs XML defaults in DST"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.10 - Jay MacDonald - 2013-06-18 - Added * to knownResources to disable resource/method/type checks and endpoint path rewrite"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.11 - waymosa - 2013-07-03 - Update JSON XML DST values in line with Pen Tested values"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.12 - waymosa - 2013-07-04 - Update incorrect protections using the protection levels agreed with Infosec"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.13 - waymosa - 2013-07-05 - Update query string length to maximum size of 100, Set default value for config.routing.rewritePath.enabled to false, added ChangeMe to regex assertion for service.routePath"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.14 - Jay MacDonald - 2013-07-11 - Brought ${ads.configuration} in line with Sam's updates to the policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.15 - Jay MacDonald - 2013-07-15 - Set ${ads.configuration} value for message size to 512, added ADSInfo to ${ads.configuration}"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.16 - Sam Waymouth - 2013-07-23 - Set pass through all headers for Route/Reponse"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.17 - Sam Waymouth - 2013-07-25 - Change the Protect Against Conde injection variable from query.string to url.msg for GET requests"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.18 - Mario Xavier - 2013-07-25 - Updated version numbers; cleared default settings for content type and HTTP methods in both policy and ADS"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.19 - Mario Xavier - 2013-08-22 - Increased default query string length to 512 post investigation on security aspect of this, requirements from app dev and dicussion within ecomm"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.20 - Sam Waymouth - 2013-08-27 - Implemented whitelist for service endpoint reponse codes"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.21 - Beiming Wang - 2013-09-03 - Changed logging format to include policy name and request url"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.22 - Sam Waymouth - 2013-09-05 - Fixed ECOMINF-298, ECOMINF-299, ECOMINF-300, ECOMINF-301"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.23 - Sam Waymouth - 20131021 - Fixed ECOMINF-299 httRouting.latency, ECOMINF-300 Empty POST, ECOMINF-313 unencoded query, ECOMINF-298 X-Forwarded-For"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.24 - Mario Xavier - 20131127 - Increased default read timeout from 2 seconds to 5 seconds to improve application services availability"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.25 - Beiming Wang -2015-04-28 - ECOMINF-378, ECOMINF-922, ECOMINF-926, ECOMINF-415, ECOMINF-485, ECOMINF-730, ECOMINF-932, ECOMINF-933, ECOMINF-934"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.26 - Beiming Wang - 2015-05-15 - ECOMINF-952"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.27 - Beiming Wang - 2015-06-05 - EAMGMT-105"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.28 - Beiming Wang - 2015-09-08 - EAMGMT-105 Part II"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v3.29 - Dinesh Kerai - 2017-01-06 - DMZPOD-513 (Rewrite host header with original host header)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Revision History:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// RHTag"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Comment stringValue="** v1.00 - User - YYYY-MM-DD - Initial version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*******************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Removed during transform"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Comment stringValue="** ADS Template (set to tag for retrieval by API Deployment service)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Default configuration for this service"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="PFNlcnZpY2VDb25maWd1cmF0aW9uPg0KICA8IS0tDQogICAgVGhpcyBkb2N1bWVudCBkZXNjcmliZXMgYSBnZW5lcmljIFJFU1Qgc2VydmljZSB0aGF0IGNhbiBiZSBwdWJsaXNoZWQgb24gdGhlIExheWVyIDcgR2F0ZXdheQ0KICAgIGJ5IG1vZGlmeWluZyB0aGUgdGVtcGxhdGUgUkVTVCBzZXJ2aWNlIHdpdGggcGFyYW1ldGVycyBsYWlkIG91dCBoZXJlaW4uDQogICAgDQogICAgVGhpcyBjb3VsZCBiZSB1c2VkIGFzIHBhcnQgb2YgYW4gYXV0b21hdGVkIG9uLWJvYXJkaW5nIHByb2Nlc3Mgb2Ygc2VydmljZXMgdG8gdGhlIERNWiBHYXRld2F5Lg0KICAgIA0KICAgIERldGFpbGVkIGRlc2NyaXB0aW9uIG9mIHRoZSBHYXRld2F5IHNlY3VyaXR5IHBvbGljeSBjYW4gYmUgZm91bmQgaW4gdGhlIFRocmVhdCBQcm90ZWN0aW9uDQogICAgUHJpbWVyIGRvY3VtZW50IGFuZCBpbiB0aGUgTGF5ZXIgNyBkb2N1bWVudGF0aW9uLg0KICAgIA0KICAgIHYxLjAgLSAyMDEzLTA0LTE4IC0gSmF5IE1hY0RvbmFsZCAtIEluaXRpYWwgc3BlYw0KICAgIHYxLjEgLSAyMDEzLTA3LTE1IC0gSmF5IE1hY0RvbmFsZCAtIFJldmlzZWQgd2l0aCBSb3V0aW5nU2V0dGluZ3MgYW5kIEFEU0luZm8gYmxvY2tzDQogIC0tPg0KICA8U2VydmljZURlZmluaXRpb24+DQogICAgPCEtLQ0KICAgICAgVGhlIGZvbGxvd2luZyBwYXJhbWV0ZXJzIGRlZmluZSB0aGUgc2VydmljZSBvbiB0aGUgZ2F0ZXdheSBhbmQgaW5kaWNhdGUgdGhlIGNvbmNyZXRlIGVuZHBvaW50Og0KICAgIA0KICAgICAgU2VydmljZVR5cGU6IFJFU1Qgb3IgU09BUC4gVGhlIHJlbWFpbmRlciBvZiB0aGUgZmlsZSBkZXNjcmliZXMgZGV0YWlscyBmb3IgdGhlIHR5cGUgb2Ygc2VydmljZS4NCiAgICAgIEVuYWJsZWQ6IFdoZXRoZXIgdGhlIHNlcnZpY2Ugd2lsbCBhY2NlcHQgcmVxdWVzdHMgb3Igbm90Lg0KICAgICAgU2VydmljZU5hbWU6IEEgc2hvcnQgZGVzY3JpcHRpdmUgbmFtZSBvZiB0aGUgc2VydmljZS4gVGhpcyBpcyBmb3IgZGlzcGxheSBhbmQgcmVwb3J0aW5nIHB1cnBvc2VzLg0KICAgICAgU2VydmljZURlc2NyaXB0aW9uOiBBIHNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSBzZXJ2aWNlLg0KICAgICAgUmV2aXNpb25Ob3RlOiBUZXh0IGRpc3BsYXllZCBpbiBjb21tZW50IGJsb2NrIGFzc29jaWF0ZWQgd2l0aCB0aGUgcmV2aXNpb24gaGlzdG9yeQ0KICAgICAgVGVtcGxhdGVPaWQ6IE9JRCBvZiB0aGUgdGVtcGxhdGUgc2VydmljZS4NCiAgICAgIEZvbGRlcklEOiBPSUQgb2YgR2F0ZXdheSBmb2xkZXIgaW4gd2hpY2ggdG8gcHVibGlzaCB0aGUgc2VydmljZS4gKG9wdGlvbmFsIHVubGVzcyBmb3IgYXV0b21hdGlvbikuDQogICAgICBCYXNlUGF0aDogVGhlIGJhc2UgcGF0aCBvZiB0aGUgUkVTVCBzZXJ2aWNlLg0KICAgICAgS25vd25SZXNvdXJjZXM6IEZvcm1hdHRlZCBzdHJpbmcgZGVjbGFyaW5nIHRoZSByZXNvdXJjZXMsIG1ldGhvZHMgYW5kIGNvbnRlbnQtdHlwZXMgZm9yIHRoZSBzZXJ2aWNlLg0KICAgICAgU2VydmljZUhvc3Q6IEJhc2UgdXJsIGZvciByb3V0aW5nIHRoZSByZXF1ZXN0cyB0aGF0IHBhc3MgKGkuZS4gYmFzZSBmb3IgdGhlIHJlYWwgZW5kcG9pbnQpLg0KICAgICAgQ29ubmVjdGlvblRpbWVvdXQ6IFRpbWVvdXQgZm9yIGVzdGFibGlzaGluZyBhIGNvbm5lY3Rpb24gdG8gYmFjayBlbmQgKGluIG1pbGxpc2Vjb25kcykuDQogICAgICBSZWFkVGltZW91dDogVGltZW91dCBmb3Igb2J0YWluaW5nIGEgcmVzcG9uc2UgZnJvbSBiYWNrIGVuZCAoaW4gbWlsbGlzZWNvbmRzKS4NCiAgICAtLT4NCiAgICA8U2VydmljZVR5cGU+UkVTVDwvU2VydmljZVR5cGU+DQogICAgPEVuYWJsZWQ+dHJ1ZTwvRW5hYmxlZD4NCiAgICA8U2VydmljZU5hbWU+PC9TZXJ2aWNlTmFtZT4NCiAgICA8U2VydmljZURlc2NyaXB0aW9uPjwvU2VydmljZURlc2NyaXB0aW9uPg0KICAgIDxSZXZpc2lvbk5vdGU+SW5pdGlhbCBSZWxlYXNlPC9SZXZpc2lvbk5vdGU+DQogICAgPFRlbXBsYXRlT0lEPjwvVGVtcGxhdGVPSUQ+DQogICAgPEZvbGRlcklEPjwvRm9sZGVySUQ+DQogICAgPEJhc2VQYXRoPi9DaGFuZ2VNZS88L0Jhc2VQYXRoPg0KICAgIDxLbm93blJlc291cmNlcz5DaGFuZ2VNZTwvS25vd25SZXNvdXJjZXM+DQogIDwvU2VydmljZURlZmluaXRpb24+DQogIDxSb3V0aW5nU2V0dGluZ3M+DQogICAgPFNlcnZpY2VIb3N0PlBST1RPQ09MOi8vSE9TVE5BTUU6UE9SVDwvU2VydmljZUhvc3Q+DQogICAgPENvbm5lY3Rpb25UaW1lb3V0PjEwMDA8L0Nvbm5lY3Rpb25UaW1lb3V0Pg0KICAgIDxSZWFkVGltZW91dD4yMDAwPC9SZWFkVGltZW91dD4NCiAgICA8UmV3cml0ZVBhdGggZW5hYmxlZD0iZmFsc2UiPg0KICAgICAgPFJlZ2V4UGF0dGVybj5eXC9DaGFuZ2VNZTwvUmVnZXhQYXR0ZXJuPg0KICAgICAgPFJlZ2V4UmVwbGFjZW1lbnQ+Q2hhbmdlTWU8L1JlZ2V4UmVwbGFjZW1lbnQ+DQogICAgPC9SZXdyaXRlUGF0aD4NCiAgPC9Sb3V0aW5nU2V0dGluZ3M+DQogIDxQb2xpY3lTZXR0aW5ncz4NCiAgICA8IS0tDQogICAgICBUaGUgZm9sbG93aW5nIHBhcmFtZXRlcnMgZGVzY3JpYmUgcG9saWN5IGFzIGRlcGxveWVkIGluIHRoZSBHYXRld2F5Og0KICAgICAgDQogICAgICBSZXF1aXJlU1NMOiBFbmZvcmNlIGluY29taW5nIHJlcXVlc3RzIG92ZXIgU1NMLg0KICAgICAgTWVzc2FnZVNpemU6IEVuZm9yY2UgYSBzaXplIGxpbWl0IChieXRlcykgZm9yIFBVVC9QT1NUIHBheWxvYWRzLg0KICAgICAgUXVlcnlTdHJpbmdMZW5ndGg6IEVuZm9yY2UgYSBsZW5ndGggbGltaXQgKGNoYXJhY3RlcnMpIG9uIHRoZSBRdWVyeSBTdHJpbmcuDQogICAgICBSYXRlTGltaXQ6IEVuZm9yY2UgYSByYXRlIGxpbWl0IG9uIGFjY2VzcyB0byB0aGUgc2VydmljZS4NCiAgICAgIFNRTEluamVjdGlvbjogU2NhbiBxdWVyeSBzdHJpbmdzIGFuZCBwYXlsb2FkcyBmb3IgU1FMIGluamVjdGlvbiBjb250ZW50Lg0KICAgICAgQ29kZUluamVjdGlvbjogU2NhbiBxdWVyeSBzdHJpbmdzIGFuZCBwYXlsb2FkcyBmb3IgQ1NTLCBMREFQIEROIGFuZCBMREFQIFNlYXJjaCBpbmplY3Rpb24uDQogICAgICBEb2N1bWVudFN0cnVjdHVyZTogRW5mb3JjZSBkb2N1bWVudCBzdHJ1Y3R1cmUgbGltaXRzLg0KICAgICAgS2V5d29yZEZpbHRlcjogU2NhbiBwYXlsb2FkIGFuZCBRdWVyeSBTdHJpbmcgZm9yIGtleXdvcmRzLg0KICAgICAgUmV3cml0ZVBhdGg6IFJld3JpdGUgdGhlIHBhdGggd2l0aCByZWdleCBiZWZvcmUgcm91dGluZyBtZXNzYWdlDQogICAgLS0+DQogICAgPFJlcXVpcmVTU0wgZW5hYmxlZD0idHJ1ZSIgLz4NCiAgICA8TWVzc2FnZVNpemUgZW5hYmxlZD0idHJ1ZSI+DQogICAgICA8TWF4PjUxMjwvTWF4Pg0KICAgIDwvTWVzc2FnZVNpemU+DQogICAgPFF1ZXJ5U3RyaW5nTGVuZ3RoIGVuYWJsZWQ9InRydWUiPg0KICAgICAgPE1heD4xMDA8L01heD4NCiAgICA8L1F1ZXJ5U3RyaW5nTGVuZ3RoPg0KICAgIDxSYXRlTGltaXQgZW5hYmxlZD0idHJ1ZSI+DQogICAgICA8IS0tDQogICAgICAgIENvdW50OiBUaGUgbnVtYmVyIG9mIHJlcXVlc3RzIHBlciBhIHNwcmVhZCBvZiBzZWNvbmRzIGJlZm9yZSByZWplY3RpbmcgcmVxdWVzdHMuDQogICAgICAgIFNwcmVhZDogdGhlIG51bWJlciBvZiBzZWNvbmRzIGFjcm9zcyB3aGljaCB0byBzcHJlYWQgdGhlIGNvdW50ZXIuDQogICAgICAgIEluZGljYXRvcktleTogQ29udGV4dCBmb3IgdGhlIGNvdW50ZXIuIE11c3QgYmUgb25lIG9mIHNlcnZpY2UsIHJlc291cmNlVHJlZSwgcmVzb3VyY2VQYXRoIG9yIGZ1bGxSZXNvdXJjZQ0KICAgICAgICAgICAgd2hlcmUgbWFwcGluZ3MgYXJlOg0KICAgICAgICAgICAgICAgICBzZXJ2aWNlCSR7c2VydmljZS5iYXNlUGF0aH0NCiAgICAgICAgICAgICAgICAgcmVzb3VyY2VUcmVlCSR7c2VydmljZS5iYXNlUGF0aCd9LSR7cmVzb3VyY2UnfQ0KICAgICAgICAgICAgICAgICByZXNvdXJjZVBhdGgJJHtyZXF1ZXN0LnVybC5wYXRofQ0KICAgICAgICAgICAgICAgICBmdWxsUmVzb3VyY2UJJHtyZXF1ZXN0Lmh0dHAubWV0aG9kfS0ke3JlcXVlc3QudXJsLnBhdGh9JHtxdWVyeS5zdHJpbmd9DQogICAgICAtLT4NCiAgICAgIDxDb3VudD4xMDA8L0NvdW50Pg0KICAgICAgPFNwcmVhZD4xPC9TcHJlYWQ+DQogICAgICA8SW5kaWNhdG9yS2V5PnNlcnZpY2U8L0luZGljYXRvcktleT4NCiAgICA8L1JhdGVMaW1pdD4NCiAgICA8U1FMSW5qZWN0aW9uIGVuYWJsZWQ9InRydWUiPg0KICAgICAgPE1TU1FMPnRydWU8L01TU1FMPg0KICAgICAgPE9yYWNsZT50cnVlPC9PcmFjbGU+DQogICAgICA8U3RhbmRhcmQ+ZmFsc2U8L1N0YW5kYXJkPg0KICAgICAgPEludmFzaXZlPmZhbHNlPC9JbnZhc2l2ZT4NCiAgICA8L1NRTEluamVjdGlvbj4NCiAgICA8Q29kZUluamVjdGlvbiBlbmFibGVkPSJ0cnVlIj4NCiAgICAgIDxDU1M+dHJ1ZTwvQ1NTPg0KICAgICAgPExEQVBETj5mYWxzZTwvTERBUEROPg0KICAgICAgPExEQVBTZWFyY2g+dHJ1ZTwvTERBUFNlYXJjaD4NCiAgICA8L0NvZGVJbmplY3Rpb24+DQogICAgPERvY3VtZW50U3RydWN0dXJlIGVuYWJsZWQ9InRydWUiPg0KICAgICAgPCEtLQ0KICAgICAgICBNYXhUZXh0Q2hhcnM6IFJlc3RyaWN0IGxlbmd0aCBvZiBYTUwgdGV4dCBub2Rlcw0KICAgICAgICBNYXhBdHRyQ2hhcnM6IFJlc3RyaWN0IGxlbmd0aCBvZiBYTUwgYXR0cmlidXRlcw0KICAgICAgICBNYXhBdHRyTmFtZUNoYXJzOiBSZXN0cmljdCBsZW5ndGggb2YgWE1MIGF0dHJpYnV0ZSBuYW1lcw0KICAgICAgICBNYXhOZXN0aW5nRGVwdGg6IFJlc3RyaWN0IFhNTCBuZXN0aW5nIGRlcHRoDQogICAgICAgIE1heE5hbWVzcGFjZUNvdW50OiBSZXN0cmljdCBkaXN0aW5jdCBYTUwgbmFtZXNwYWNlIGRlY2xhcmF0aW9ucw0KICAgICAgICBNYXhOYW1lc3BhY2VQcmVmaXhDb3VudDogUmVzdHJpY3QgZGlzdGluY3QgWE1MIG5hbWVzcGFjZSBwcmVmaXggZGVjbGFyYXRpb25zDQogICAgICAtLT4NCiAgICAgIDxNYXhUZXh0Q2hhcnMgZW5hYmxlZD0idHJ1ZSI+MTYzODQ8L01heFRleHRDaGFycz4NCiAgICAgIDxNYXhBdHRyQ2hhcnMgZW5hYmxlZD0idHJ1ZSI+MjU2PC9NYXhBdHRyQ2hhcnM+DQogICAgICA8TWF4QXR0ck5hbWVDaGFycyBlbmFibGVkPSJ0cnVlIj40ODwvTWF4QXR0ck5hbWVDaGFycz4NCiAgICAgIDxNYXhOZXN0aW5nRGVwdGggZW5hYmxlZD0idHJ1ZSI+MTA8L01heE5lc3RpbmdEZXB0aD4NCiAgICAgIDxNYXhOYW1lc3BhY2VDb3VudCBlbmFibGVkPSJ0cnVlIj4xNTwvTWF4TmFtZXNwYWNlQ291bnQ+DQogICAgICA8TWF4TmFtZXNwYWNlUHJlZml4Q291bnQgZW5hYmxlZD0idHJ1ZSI+MTU8L01heE5hbWVzcGFjZVByZWZpeENvdW50Pg0KICAgIDwvRG9jdW1lbnRTdHJ1Y3R1cmU+DQogICAgPEtleXdvcmRGaWx0ZXIgZW5hYmxlZD0iZmFsc2UiPg0KICAgICAgPFJlZ2V4UGF0dGVybj4od29yZDF8d29yZDJ8d29yZDN8ZXRjKTwvUmVnZXhQYXR0ZXJuPg0KICAgIDwvS2V5d29yZEZpbHRlcj4NCiAgPC9Qb2xpY3lTZXR0aW5ncz4NCiAgPEFEU0luZm8+DQogICAgPEFEU1ZlcnNpb24gLz4NCiAgICA8U3R5bGVzaGVldFZlcnNpb24gLz4NCiAgPC9BRFNJbmZvPg0KPC9TZXJ2aWNlQ29uZmlndXJhdGlvbj4="/&gt;
            &lt;L7p:Enabled booleanValue="false"/&gt;
            &lt;L7p:VariableToSet stringValue="ads.configuration"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:AuditAssertion&gt;
            &lt;L7p:Enabled booleanValue="false"/&gt;
        &lt;/L7p:AuditAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="SW50ZXJuYWwgU2VydmVyIEVycm9y"/&gt;
                &lt;L7p:VariableToSet stringValue="error.message"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Default code is 500. Override in policy if required"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="NTAw"/&gt;
                &lt;L7p:VariableToSet stringValue="error.code"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:CustomizeErrorResponse&gt;
                &lt;L7p:Content stringValue="${error.message} (${requestid})"/&gt;
                &lt;L7p:ExtraHeaders nameValuePairArray="included"/&gt;
                &lt;L7p:HttpStatus stringValue="${error.code}"/&gt;
            &lt;/L7p:CustomizeErrorResponse&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Initialise the error response"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="************************************************ Configure service specific parameters"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** ${service.knownResources} lists each known resource with the corresponding allowed methods and content types."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   The format for each resource is &amp;quot;&amp;lt;resource&gt;:&amp;lt;methods&gt;:&amp;lt;content types&gt;&amp;quot; where methods and content types"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   are comma delimited lists. Finally the resources are catenated into a | delimited list for the final config."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   E.g.: user:GET:application/json|room:PUT,POST:application/json,text/xml"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   Note that methods that don't require a content type (GET, DELETE) still need to have something set. This  is"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**           to make configuration validation easier (using regex)"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   Note: Any of the three can contain a * to allow any resource/method/type. For e.g. *:GET,POST:* will allow"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**           any resource tree with any content type but limit the HTTP method to GET or POST."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="SET ME! ==&gt; "/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// basePath must be wrapped in /"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="L0NoYW5nZU1lLw=="/&gt;
                &lt;L7p:VariableToSet stringValue="service.basePath"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="SET ME! ==&gt; "/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// To where do we route this service?"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="JHtnYXRld2F5LkNoYW5nZU1lLmRlc3RpbmF0aW9uUm9vdH0="/&gt;
                &lt;L7p:VariableToSet stringValue="service.host"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="SET ME! ==&gt; "/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Used to validate the resource, method and content type"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="Q2hhbmdlTWU="/&gt;
                &lt;L7p:VariableToSet stringValue="service.knownResources"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="************************************************ Switch protections on/off"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                &lt;L7p:VariableToSet stringValue="config.messageSize.enabled"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                &lt;L7p:VariableToSet stringValue="config.urlLength.enabled"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                &lt;L7p:VariableToSet stringValue="config.sqlInjection.enabled"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                &lt;L7p:VariableToSet stringValue="config.codeInjection.enabled"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                &lt;L7p:VariableToSet stringValue="config.ldapCodeInjection.enabled"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                &lt;L7p:VariableToSet stringValue="config.documentStructure.enabled"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                &lt;L7p:VariableToSet stringValue="config.rateLimit.enabled"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                &lt;L7p:VariableToSet stringValue="config.checkResponseCodes.enabled"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Only relevant when config.checkResponseCodes.enabled is set to true "/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="MzAxLDMwMiwzMDQsMzA3LDQwMCw0MDEsNDAzLDQwNCw0MDUsNDA2LDQwOCw0MDksNDE1LDUwMCw1MDIsNTAzLDUwNA=="/&gt;
                &lt;L7p:VariableToSet stringValue="service.knownResponseCodes"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="************************************************ Default limits"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Only relevant when config.rateLimit.enabled is set to true "/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="MTAw"/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="config.rateLimit.max"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Only relevant when config.messageSize.enabled is set to true "/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="NTEy"/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="config.messageSize.max"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Only relevant when config.urlLength.enabled is set to true "/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="NTEy"/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="config.urlLength.max"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MTAwMA=="/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="config.connectionTimeOut.max"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="NTAwMA=="/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="config.readTimeOut.max"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="************************************************ Additional Features"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Allows url path changes"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="config.routing.rewritePath.enabled"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="config.keywordFilter.enabled"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Allows Cookie path changes"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="config.responseCookiePathRewrite.enabled"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Allow the use of JSON DST tactical fix"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="config.advancedJSONCheck.enabled"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Allow the original host header to pass through"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="config.PassThroughOriginalHostHeader.enabled"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Configuration Block"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// set the httpRouting.latency to -1"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="LTE="/&gt;
                &lt;L7p:VariableToSet stringValue="httpRouting.latency"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Set the httpRouting.latency to a default of -1 to supress audit errors"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:SslAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Traffic should be over SSL"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
            &lt;/L7p:SslAssertion&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Rm9yYmlkZGVuIChub3QgU1NMKQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="NDAz"/&gt;
                    &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Request denied: not received over SSL"/&gt;
                    &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Set error message and fail with 403"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Handle SSL requirement"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// put into a string for regex"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAuYWxsaGVhZGVydmFsdWVzfQ=="/&gt;
                &lt;L7p:VariableToSet stringValue="headerString"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:Regex&gt;
                        &lt;L7p:AutoTarget booleanValue="false"/&gt;
                        &lt;L7p:CaseInsensitive booleanValue="true"/&gt;
                        &lt;L7p:IncludeEntireExpressionCapture booleanValue="false"/&gt;
                        &lt;L7p:OtherTargetMessageVariable stringValue="headerString"/&gt;
                        &lt;L7p:Regex stringValue="X-Forwarded-For:"/&gt;
                        &lt;L7p:RegexName stringValue="header regex test for X-Forwarded-For"/&gt;
                        &lt;L7p:Replacement stringValue=""/&gt;
                        &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:Regex&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${request.http.header.X-Forwarded-For}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item stringLength="included"&gt;
                                &lt;L7p:Max intValue="-1"/&gt;
                                &lt;L7p:Min intValue="7"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:Regex&gt;
                                &lt;L7p:AutoTarget booleanValue="false"/&gt;
                                &lt;L7p:CaseInsensitive booleanValue="true"/&gt;
                                &lt;L7p:IncludeEntireExpressionCapture booleanValue="false"/&gt;
                                &lt;L7p:OtherTargetMessageVariable stringValue="headerString"/&gt;
                                &lt;L7p:Regex stringValue="NS-Client-IP:"/&gt;
                                &lt;L7p:RegexName stringValue="header regex test for NS-Client-IP"/&gt;
                                &lt;L7p:Replacement stringValue=""/&gt;
                                &lt;L7p:Target target="OTHER"/&gt;
                            &lt;/L7p:Regex&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${request.http.header.NS-Client-IP}"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item stringLength="included"&gt;
                                    &lt;L7p:Max intValue="-1"/&gt;
                                    &lt;L7p:Min intValue="7"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:Expression1 stringValue="${request.http.header.NS-Client-IP}"/&gt;
                                &lt;L7p:Expression2 stringValue="${request.http.header.X-Forwarded-For}"/&gt;
                                &lt;L7p:Negate booleanValue="true"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="${request.http.header.X-Forwarded-For}"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:AuditDetailAssertion&gt;
                                &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: NS-Client-IP is ${request.http.header.NS-Client-IP}"/&gt;
                                &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                            &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;/wsp:All&gt;
                        &lt;L7p:TrueAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// check ns-client-ip as well"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// check x-forwarded-ip first"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:Regex&gt;
                        &lt;L7p:AutoTarget booleanValue="false"/&gt;
                        &lt;L7p:CaseInsensitive booleanValue="true"/&gt;
                        &lt;L7p:IncludeEntireExpressionCapture booleanValue="false"/&gt;
                        &lt;L7p:OtherTargetMessageVariable stringValue="headerString"/&gt;
                        &lt;L7p:Regex stringValue="NS-Client-IP:"/&gt;
                        &lt;L7p:RegexName stringValue="header regex test for NS-Client-IP"/&gt;
                        &lt;L7p:Replacement stringValue=""/&gt;
                        &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:Regex&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${request.http.header.NS-Client-IP}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item stringLength="included"&gt;
                                &lt;L7p:Max intValue="-1"/&gt;
                                &lt;L7p:Min intValue="7"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:AddHeader&gt;
                        &lt;L7p:HeaderName stringValue="X-Forwarded-For"/&gt;
                        &lt;L7p:HeaderValue stringValue="${request.http.header.NS-Client-IP}"/&gt;
                    &lt;/L7p:AddHeader&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// check  ns-client-ip if xff cannot be found"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:AddHeader&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// use empty value for xff"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:HeaderName stringValue="X-Forwarded-For"/&gt;
                    &lt;L7p:HeaderValue stringValue=""/&gt;
                &lt;/L7p:AddHeader&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// IP address header processing"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Initialize detail as empty"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue=""/&gt;
                &lt;L7p:VariableToSet stringValue="detail"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:CaptureVar stringValue="resource.match"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="request.url.path"/&gt;
                    &lt;L7p:PatternContainsVariables booleanValue="true"/&gt;
                    &lt;L7p:Regex stringValue="${service.basePath}([^\/]+)\/*(.*)"/&gt;
                    &lt;L7p:Replacement stringValue=""/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:Regex&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="Tm90IEZvdW5kIChwYXRoIG1pc21hdGNoKQ=="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDA0"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Request denied: basePath mismatch: ${service.basePath} not in ${request.url.path}"/&gt;
                        &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:FalseAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Not found so handle error condition and fail with 404"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Validate base path and isolate resource"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="JHtyZXNvdXJjZS5tYXRjaFsxXX0="/&gt;
                &lt;L7p:VariableToSet stringValue="resource"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Initialise that we have not found this resource"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                    &lt;L7p:VariableToSet stringValue="resourceConfig.found"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:Split&gt;
                    &lt;L7p:InputVariable stringValue="service.knownResources"/&gt;
                    &lt;L7p:OutputVariable stringValue="service.knownResources.list"/&gt;
                    &lt;L7p:SplitPattern stringValue="|"/&gt;
                    &lt;L7p:SplitPatternRegEx booleanValue="false"/&gt;
                &lt;/L7p:Split&gt;
                &lt;L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="service.knownResources.list" variablePrefix="resourceConfig"&gt;
                    &lt;L7p:Split&gt;
                        &lt;L7p:InputVariable stringValue="resourceConfig.current"/&gt;
                        &lt;L7p:OutputVariable stringValue="resourceConfig.set"/&gt;
                        &lt;L7p:SplitPattern stringValue=":"/&gt;
                        &lt;L7p:SplitPatternRegEx booleanValue="false"/&gt;
                    &lt;/L7p:Split&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Doesn't match so exit early"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${resourceConfig.set[0]}"/&gt;
                                &lt;L7p:Expression2 stringValue="${resource}"/&gt;
                                &lt;L7p:Negate booleanValue="true"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="${resource}"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Doesn't match so exit early"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${resourceConfig.set[0]}"/&gt;
                                &lt;L7p:Expression2 stringValue="*"/&gt;
                                &lt;L7p:Negate booleanValue="true"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="*"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Confirm the resource matches from knownResources value"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                                &lt;L7p:VariableToSet stringValue="resourceConfig.found"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtyZXNvdXJjZUNvbmZpZy5zZXRbMV19"/&gt;
                                &lt;L7p:VariableToSet stringValue="service.httpMethods"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtyZXNvdXJjZUNvbmZpZy5zZXRbMl19"/&gt;
                                &lt;L7p:VariableToSet stringValue="service.contentTypes"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:CommentAssertion&gt;
                                &lt;L7p:Comment stringValue="** With v7.0 of the Gateway we can break out of the loop once found"/&gt;
                            &lt;/L7p:CommentAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="ENABLE IN v7.0+:"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Break out of the loop"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                                &lt;L7p:Enabled booleanValue="false"/&gt;
                                &lt;L7p:VariableToSet stringValue="resourceConfig.break"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Matched so parse out list of HTTP methods and content types for this resource"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Parse this config if it matches the resource in the path"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                &lt;/L7p:ForEachLoop&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${resourceConfig.found}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="boolean"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="true"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="Tm90IEZvdW5kICgke3Jlc291cmNlfSk="/&gt;
                            &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="NDA0"/&gt;
                            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Request denied: bad resource requested (${resource})"/&gt;
                            &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:FalseAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Not found so handle error condition and fail with 404"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Confirm that the resource config was found or fail with 404"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Validate that the resource is recognised and parse ${service.knownResources}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// May be used by the specific resource handler fragment"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="JHtyZXNvdXJjZS5tYXRjaFsyXX0="/&gt;
                &lt;L7p:VariableToSet stringValue="detail"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Determine the resource from the path (as ${resource}) and validate, fail with 404"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Set this so we have a defined string with which to work"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnVybH0="/&gt;
                &lt;L7p:VariableToSet stringValue="url.string"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:EncodeDecode&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Decode it so we can have the real string"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:SourceVariableName stringValue="url.string"/&gt;
                &lt;L7p:TargetDataType variableDataType="string"/&gt;
                &lt;L7p:TargetVariableName stringValue="url.string"/&gt;
                &lt;L7p:TransformType transformType="URL_DECODE"/&gt;
            &lt;/L7p:EncodeDecode&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Cast to a message type to run various assertions on it"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="JHt1cmwuc3RyaW5nfQ=="/&gt;
                &lt;L7p:ContentType stringValue="text/plain; charset=utf-8"/&gt;
                &lt;L7p:DataType variableDataType="message"/&gt;
                &lt;L7p:VariableToSet stringValue="url.msg"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Prepare for removing extended information"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0LmNvbnRlbnRUeXBlfQ=="/&gt;
                &lt;L7p:VariableToSet stringValue="contentType"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:Regex&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Remove extended information like charset"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:AutoTarget booleanValue="false"/&gt;
                &lt;L7p:OtherTargetMessageVariable stringValue="contentType"/&gt;
                &lt;L7p:Regex stringValue=" *;.*"/&gt;
                &lt;L7p:Replace booleanValue="true"/&gt;
                &lt;L7p:Replacement stringValue=""/&gt;
                &lt;L7p:Target target="OTHER"/&gt;
            &lt;/L7p:Regex&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** Validate the request for various threat conditions"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** Start mandatory validation tests **"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:Split&gt;
                    &lt;L7p:InputVariable stringValue="service.httpMethods"/&gt;
                    &lt;L7p:OutputVariable stringValue="service.httpMethods.list"/&gt;
                &lt;/L7p:Split&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:IndexLookupByItem&gt;
                        &lt;L7p:MultivaluedVariableName stringValue="service.httpMethods.list"/&gt;
                        &lt;L7p:OutputVariableName stringValue="service.httpMethods.index"/&gt;
                        &lt;L7p:ValueToSearchForVariableName stringValue="request.http.method"/&gt;
                    &lt;/L7p:IndexLookupByItem&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${service.httpMethods}"/&gt;
                        &lt;L7p:Expression2 stringValue="*"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="*"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="TWV0aG9kIE5vdCBBbGxvd2VkICgke3JlcXVlc3QuaHR0cC5tZXRob2R9KQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Method Not Allowed [RFC2616]"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="NDA1"/&gt;
                            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:AddHeader&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Required by RFC2616"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:HeaderName stringValue="Allow"/&gt;
                            &lt;L7p:HeaderValue stringValue="${service.httpMethods}"/&gt;
                            &lt;L7p:RemoveExisting booleanValue="true"/&gt;
                            &lt;L7p:Target target="RESPONSE"/&gt;
                        &lt;/L7p:AddHeader&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Request denied: bad HTTP method requested (${request.http.method} not found in ${service.httpMethods})"/&gt;
                            &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:FalseAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Not found so handle error condition and fail with 405"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Find it in the list or check if service.httpMethods = &amp;quot;*&amp;quot;"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Validate that the http method is recognised, fail with 405"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Exit early when method is not POST or PUT"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.method}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="POST"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="PUT"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:Split&gt;
                        &lt;L7p:InputVariable stringValue="service.contentTypes"/&gt;
                        &lt;L7p:OutputVariable stringValue="service.contentTypes.list"/&gt;
                    &lt;/L7p:Split&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:IndexLookupByItem&gt;
                            &lt;L7p:MultivaluedVariableName stringValue="service.contentTypes.list"/&gt;
                            &lt;L7p:OutputVariableName stringValue="service.contentTypes.index"/&gt;
                            &lt;L7p:ValueToSearchForVariableName stringValue="contentType"/&gt;
                        &lt;/L7p:IndexLookupByItem&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${service.contentTypes}"/&gt;
                            &lt;L7p:Expression2 stringValue="*"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="*"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="VW5zdXBwb3J0ZWQgTWVkaWEgVHlwZSAoJHtyZXF1ZXN0LmNvbnRlbnRUeXBlfSk="/&gt;
                                &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Unsupported Media Type [RFC2616]"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Base64Expression stringValue="NDE1"/&gt;
                                &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:AuditDetailAssertion&gt;
                                &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Request denied: bad content type requested (${contentType} not found in ${service.contentTypes})"/&gt;
                                &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                            &lt;/L7p:AuditDetailAssertion&gt;
                            &lt;L7p:FalseAssertion/&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Not found so handle error condition and fail with 415"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Find it in the list or check if service.contentTypes = &amp;quot;*&amp;quot;"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Validate that the content type is recognised"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Validate that the content type is recognised for POST &amp;amp; PUT, fail with 415"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${config.messageSize.enabled}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Exit early when method is not POST or PUT"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.method}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="POST"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="PUT"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:RequestSizeLimit&gt;
                    &lt;L7p:Limit stringValue="${config.messageSize.max}"/&gt;
                &lt;/L7p:RequestSizeLimit&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="UmVxdWVzdCBFbnRpdHkgVG9vIExhcmdl"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Request Entity Too Large [RFC2616]"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="NDEz"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Request denied: Payload too big (&gt; ${config.messageSize.max})"/&gt;
                        &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:FalseAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Handle error condition and fail with 413"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Validate message request size, fail with 413"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Exit early when method is not POST or PUT"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.method}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="POST"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="PUT"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Exit early the body size is 0"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${request.mainpart.size}"/&gt;
                    &lt;L7p:Expression2 stringValue="0"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="0"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${contentType}"/&gt;
                        &lt;L7p:Expression2 stringValue="application/json"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="application/json"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:JSONSchema&gt;
                        &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                            &lt;L7p:Document stringValue="{}"/&gt;
                        &lt;/L7p:ResourceInfo&gt;
                    &lt;/L7p:JSONSchema&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Validate a JSON payload by trying to transform it to XML"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${contentType}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item regex="included"&gt;
                                &lt;L7p:Pattern stringValue="application/xml|text/xml"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:RequestXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue=""/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:RequestXpathAssertion&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Validate an text/xml or application/xml payload by trying an XPath on it"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${contentType}"/&gt;
                        &lt;L7p:Expression2 stringValue="application/x-www-form-urlencoded"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="application/x-www-form-urlencoded"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:CommentAssertion&gt;
                        &lt;L7p:Comment stringValue="** InfoSec to define checks for HTMLFORM"/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Validate a web Form application/x-www-form-urlencoded "/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="QmFkIFJlcXVlc3Q="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Bad Request [RFC2616]"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Request denied: not well formed content type ${contentType}"/&gt;
                        &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:FalseAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Handle error condition and fail with 400"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Validate well formedness of POST and PUT request payloads, fail with 400"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** Start optional validation tests **"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${config.urlLength.enabled}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Check the query string length, default is no query string allowed"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${url.msg.size}"/&gt;
                    &lt;L7p:Expression2 stringValue="${config.urlLength.max}"/&gt;
                    &lt;L7p:Operator operator="LE"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Operator operator="LE"/&gt;
                            &lt;L7p:RightValue stringValue="${config.urlLength.max}"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="UmVxdWVzdC1VUkkgVG9vIExvbmc="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Request-URI Too Long [RFC2616]"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="NDE0"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Request denied: Query string too long (&gt; ${config.urlLength.max})"/&gt;
                        &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:FalseAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Handle error condition and fail with 414"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Validate URL string length, fail with 414"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${config.sqlInjection.enabled}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Use for error reporting"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="dXJsIHN0cmluZyAoJHt1cmwuc3RyaW5nfSk="/&gt;
                        &lt;L7p:VariableToSet stringValue="search.part"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SqlAttackProtection&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Evaluate the query string"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:OtherTargetMessageVariable stringValue="url.msg"/&gt;
                        &lt;L7p:Protections stringSetValue="included"&gt;
                            &lt;L7p:item stringValue="OraSql"/&gt;
                            &lt;L7p:item stringValue="MsSql"/&gt;
                        &lt;/L7p:Protections&gt;
                        &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:SqlAttackProtection&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Use for error reporting"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="cGF5bG9hZA=="/&gt;
                        &lt;L7p:VariableToSet stringValue="search.part"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Exit early when method is not POST or PUT"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${request.http.method}"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="POST"/&gt;
                                &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="PUT"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:SqlAttackProtection&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Evaluate the payload"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Protections stringSetValue="included"&gt;
                                &lt;L7p:item stringValue="OraSql"/&gt;
                                &lt;L7p:item stringValue="MsSql"/&gt;
                            &lt;/L7p:Protections&gt;
                        &lt;/L7p:SqlAttackProtection&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check the payload (if HTTP method is POST or PUT)"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Check query string and/or payload"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="QmFkIFJlcXVlc3Q="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Bad Request [RFC2616]"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Request denied: Detected SQL injection in ${search.part}"/&gt;
                        &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:FalseAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Handle error condition and fail with 400"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Check request for sql injection, fail with 400"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${config.codeInjection.enabled}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${config.ldapCodeInjection.enabled}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="string"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:RightValue stringValue="true"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="dXJsIHN0cmluZyAoJHt1cmwuc3RyaW5nfSk="/&gt;
                        &lt;L7p:VariableToSet stringValue="search.part"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:CodeInjectionProtectionAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check the query string"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:IncludeBody booleanValue="true"/&gt;
                        &lt;L7p:IncludeUrlQueryString booleanValue="true"/&gt;
                        &lt;L7p:OtherTargetMessageVariable stringValue="url.msg"/&gt;
                        &lt;L7p:Protections codeInjectionProtectionTypeArray="included"&gt;
                            &lt;L7p:item protectionType="htmlJavaScriptInjection"/&gt;
                            &lt;L7p:item protectionType="ldapSearchInjection"/&gt;
                        &lt;/L7p:Protections&gt;
                        &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:CodeInjectionProtectionAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="cGF5bG9hZA=="/&gt;
                        &lt;L7p:VariableToSet stringValue="search.part"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Exit early when method is not POST or PUT"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${request.http.method}"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="POST"/&gt;
                                &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="PUT"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:CodeInjectionProtectionAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check the payload"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:IncludeBody booleanValue="true"/&gt;
                            &lt;L7p:IncludeUrlQueryString booleanValue="true"/&gt;
                            &lt;L7p:Protections codeInjectionProtectionTypeArray="included"&gt;
                                &lt;L7p:item protectionType="htmlJavaScriptInjection"/&gt;
                                &lt;L7p:item protectionType="ldapSearchInjection"/&gt;
                            &lt;/L7p:Protections&gt;
                            &lt;L7p:Target target="REQUEST"/&gt;
                        &lt;/L7p:CodeInjectionProtectionAssertion&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check the payload (if HTTP method is POST or PUT)"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Check query string and/or payload including ldap code injection"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${config.ldapCodeInjection.enabled}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="string"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:RightValue stringValue="false"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="dXJsIHN0cmluZyAoJHt1cmwuc3RyaW5nfSk="/&gt;
                        &lt;L7p:VariableToSet stringValue="search.part"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:CodeInjectionProtectionAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check the query string"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:IncludeBody booleanValue="true"/&gt;
                        &lt;L7p:IncludeUrlQueryString booleanValue="true"/&gt;
                        &lt;L7p:OtherTargetMessageVariable stringValue="url.msg"/&gt;
                        &lt;L7p:Protections codeInjectionProtectionTypeArray="included"&gt;
                            &lt;L7p:item protectionType="htmlJavaScriptInjection"/&gt;
                        &lt;/L7p:Protections&gt;
                        &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:CodeInjectionProtectionAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="cGF5bG9hZA=="/&gt;
                        &lt;L7p:VariableToSet stringValue="search.part"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Exit early when method is not POST or PUT"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${request.http.method}"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="POST"/&gt;
                                &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="PUT"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:CodeInjectionProtectionAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check the payload"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:IncludeBody booleanValue="true"/&gt;
                            &lt;L7p:IncludeUrlQueryString booleanValue="true"/&gt;
                            &lt;L7p:Protections codeInjectionProtectionTypeArray="included"&gt;
                                &lt;L7p:item protectionType="htmlJavaScriptInjection"/&gt;
                            &lt;/L7p:Protections&gt;
                            &lt;L7p:Target target="REQUEST"/&gt;
                        &lt;/L7p:CodeInjectionProtectionAssertion&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check the payload (if HTTP method is POST or PUT)"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Check query string and/or payload excluding ldap code injection"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="QmFkIFJlcXVlc3Q="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Bad Request [RFC2616]"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Request denied: Detected Code injection in ${search.part}"/&gt;
                        &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:FalseAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Handle error condition and fail with 400"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Check message for code injection, fail with 400"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${config.documentStructure.enabled}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Exit early when method is not POST or PUT"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.method}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="POST"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="PUT"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Exit early the body size is 0"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${request.mainpart.size}"/&gt;
                    &lt;L7p:Expression2 stringValue="0"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="0"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${contentType}"/&gt;
                            &lt;L7p:Expression2 stringValue="application/json"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="application/json"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:JsonTransformation&gt;
                                    &lt;L7p:DestinationMessageTarget MessageTarget="included"&gt;
                                    &lt;L7p:OtherTargetMessageVariable stringValue="temporary.msg"/&gt;
                                    &lt;L7p:Target target="OTHER"/&gt;
                                    &lt;L7p:TargetModifiedByGateway booleanValue="true"/&gt;
                                    &lt;/L7p:DestinationMessageTarget&gt;
                                    &lt;L7p:RootTagString stringValue="root"/&gt;
                                    &lt;L7p:Target target="REQUEST"/&gt;
                                    &lt;L7p:Transformation transformation="JSON_to_XML"/&gt;
                                &lt;/L7p:JsonTransformation&gt;
                                &lt;L7p:OversizedText&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// JSON"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:LimitAttrChars booleanValue="false"/&gt;
                                    &lt;L7p:LimitAttrNameChars booleanValue="false"/&gt;
                                    &lt;L7p:MaxAttrChars longValue="256"/&gt;
                                    &lt;L7p:MaxAttrNameChars intValue="48"/&gt;
                                    &lt;L7p:MaxNestingDepth intValue="10"/&gt;
                                    &lt;L7p:OtherTargetMessageVariable stringValue="temporary.msg"/&gt;
                                    &lt;L7p:Target target="OTHER"/&gt;
                                &lt;/L7p:OversizedText&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// default DST check, may fail to transform for certain valid JSON payload"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Exit early the body size is 0"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${config.advancedJSONCheck.enabled}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="string"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Commencing advanced JSON Document Structure Threat violation."/&gt;
                                    &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                                &lt;/L7p:AuditDetailAssertion&gt;
                                &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lm1haW5wYXJ0fQ=="/&gt;
                                    &lt;L7p:ContentType stringValue="application/json; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="copyMsg"/&gt;
                                &lt;/L7p:SetVariable&gt;
                                &lt;L7p:Regex&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Replace escaped doublequote (\&amp;quot;) characters with two underscore characters"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                                    &lt;L7p:OtherTargetMessageVariable stringValue="copyMsg"/&gt;
                                    &lt;L7p:Regex stringValue="(\\&amp;quot;)"/&gt;
                                    &lt;L7p:Replace booleanValue="true"/&gt;
                                    &lt;L7p:Replacement stringValue="__"/&gt;
                                    &lt;L7p:Target target="OTHER"/&gt;
                                &lt;/L7p:Regex&gt;
                                &lt;L7p:Regex&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check to see if there are any strings of length greater than 16384, and fail if there are"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                                    &lt;L7p:OtherTargetMessageVariable stringValue="copyMsg"/&gt;
                                    &lt;L7p:ProceedIfPatternMatches booleanValue="false"/&gt;
                                    &lt;L7p:Regex stringValue="[\{|,|:\[\]]\s*&amp;quot;([^&amp;quot;]{16385,})&amp;quot;"/&gt;
                                    &lt;L7p:Replacement stringValue=""/&gt;
                                    &lt;L7p:Target target="OTHER"/&gt;
                                &lt;/L7p:Regex&gt;
                                &lt;L7p:Regex&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check to see if there are any numbers with string length &gt; 16384"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                                    &lt;L7p:OtherTargetMessageVariable stringValue="copyMsg"/&gt;
                                    &lt;L7p:ProceedIfPatternMatches booleanValue="false"/&gt;
                                    &lt;L7p:Regex stringValue="[\[|,|:]\s*([\d|.|\-|+|e|E]+){16385,}"/&gt;
                                    &lt;L7p:Replacement stringValue=""/&gt;
                                    &lt;L7p:Target target="OTHER"/&gt;
                                &lt;/L7p:Regex&gt;
                                &lt;L7p:Regex&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Iteratively replace JSON elements and branches up to the defined limit."/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                                    &lt;L7p:OtherTargetMessageVariable stringValue="copyMsg"/&gt;
                                    &lt;L7p:Regex stringValue="(\{[^\}|^\{]*\})"/&gt;
                                    &lt;L7p:Replace booleanValue="true"/&gt;
                                    &lt;L7p:ReplaceRepeatCount intValue="10"/&gt;
                                    &lt;L7p:Replacement stringValue=""/&gt;
                                    &lt;L7p:Target target="OTHER"/&gt;
                                &lt;/L7p:Regex&gt;
                                &lt;L7p:Regex&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check to see if there are any remaining JSON elements or branches following the reduction in the previous step.  If there are, then fail."/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                                    &lt;L7p:OtherTargetMessageVariable stringValue="copyMsg"/&gt;
                                    &lt;L7p:ProceedIfPatternMatches booleanValue="false"/&gt;
                                    &lt;L7p:Regex stringValue="(\{[^\}|^\{]*\})"/&gt;
                                    &lt;L7p:Replacement stringValue=""/&gt;
                                    &lt;L7p:Target target="OTHER"/&gt;
                                &lt;/L7p:Regex&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// optional advanced DST check. To be replaced in v8.3."/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Handle JSON payload"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${contentType}"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item regex="included"&gt;
                                    &lt;L7p:Pattern stringValue="application/xml|text/xml"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:OversizedText&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// XML"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:LimitNamespaceCount booleanValue="true"/&gt;
                            &lt;L7p:LimitNamespacePrefixCount booleanValue="true"/&gt;
                            &lt;L7p:MaxAttrChars longValue="256"/&gt;
                            &lt;L7p:MaxAttrNameChars intValue="48"/&gt;
                            &lt;L7p:MaxNamespaceCount intValue="15"/&gt;
                            &lt;L7p:MaxNamespacePrefixCount intValue="15"/&gt;
                            &lt;L7p:MaxNestingDepth intValue="10"/&gt;
                        &lt;/L7p:OversizedText&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Handle text/xml or application/xml payload"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${contentType}"/&gt;
                            &lt;L7p:Expression2 stringValue="application/x-www-form-urlencoded"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="application/x-www-form-urlencoded"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="** InfoSec to define checks for HTMLFORM"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Handle HTMLFORM Payload"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Different branches for JSON vs XML payloads"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="QmFkIFJlcXVlc3Q="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Bad Request [RFC2616]"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Request denied: Encountered Document Structure Threat violation"/&gt;
                        &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:FalseAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Handle error condition and fail with 400"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Run document structure threat assertion on POST/PUT requests, fail with 400"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${config.keywordFilter.enabled}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="************************************************************************************"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="** The keyword filter assertions are specific for the Query and Payload. Be sure to configure both."/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="************************************************************************************"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="******************************************************************************"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="** This regexes the whole string. It may be better to loop through the parameters and test each"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="**     one independently so the parameter names are not tested"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="******************************************************************************"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="dXJsIHN0cmluZyAoJHt1cmwuc3RyaW5nfSk="/&gt;
                            &lt;L7p:VariableToSet stringValue="search.part"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:CaptureVar stringValue="keywordMatch"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="url.string"/&gt;
                            &lt;L7p:ProceedIfPatternMatches booleanValue="false"/&gt;
                            &lt;L7p:Regex stringValue="(word1|word2|word3|etc)"/&gt;
                            &lt;L7p:Replacement stringValue=""/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Run the test and set ${search.part} for error reporting"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Exit early when method is not POST or PUT"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${request.http.method}"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="POST"/&gt;
                                &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="PUT"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="cGF5bG9hZA=="/&gt;
                                &lt;L7p:VariableToSet stringValue="search.part"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:Regex&gt;
                                &lt;L7p:AutoTarget booleanValue="false"/&gt;
                                &lt;L7p:CaptureVar stringValue="keywordMatch"/&gt;
                                &lt;L7p:ProceedIfPatternMatches booleanValue="false"/&gt;
                                &lt;L7p:Regex stringValue="(word1|word2|word3|etc)"/&gt;
                                &lt;L7p:Replacement stringValue=""/&gt;
                            &lt;/L7p:Regex&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Run the test and set ${search.part} for error reporting"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Filter Payload (if POST or PUT)"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Run the tests on Query and Payload as required"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="QmFkIFJlcXVlc3Q="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Bad Request [RFC2616]"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Request denied: Found keyword filter hit in ${search.part}"/&gt;
                        &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:FalseAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Handle error condition and fail with 400"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Run Keyword Filters, fail with 400"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${config.rateLimit.enabled}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:RateLimit&gt;
                    &lt;L7p:CounterName stringValue="${service.basePath}"/&gt;
                    &lt;L7p:MaxRequestsPerSecond stringValue="${config.rateLimit.max}"/&gt;
                &lt;/L7p:RateLimit&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="VG9vIE1hbnkgUmVxdWVzdHM="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Too Many Requests [RFC6585]"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="NDI5"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Request denied: Rate limit exceeded (&gt; ${config.rateLimit.max})"/&gt;
                        &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:FalseAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Handle error condition and fail with 429"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Validate rate limit, fail with 429 - this should be done last so bad messages are not part of the rate limit check"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Validate the request"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** If there is any additional &amp;quot;custom&amp;quot; processing that needs to be done (transforms, etc) then do it here."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Set routing path to the request path"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnVybC5wYXRofQ=="/&gt;
                &lt;L7p:VariableToSet stringValue="service.routePath"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${config.routing.rewritePath.enabled}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:Regex&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Rewrite the routing path"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="service.routePath"/&gt;
                    &lt;L7p:Regex stringValue="^\/ChangeMe"/&gt;
                    &lt;L7p:Replace booleanValue="true"/&gt;
                    &lt;L7p:Replacement stringValue="ChangeMe"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:Regex&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Rewrite routing path if enabled"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="JHtzZXJ2aWNlLmhvc3R9JHtzZXJ2aWNlLnJvdXRlUGF0aH0ke3JlcXVlc3QudXJsLnF1ZXJ5fQ=="/&gt;
                &lt;L7p:VariableToSet stringValue="service.endpoint"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Only relevant when config.PassThroughHostHeader.enabled is set to true"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${config.PassThroughOriginalHostHeader.enabled}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Rewriting Host Header with original Host Header"/&gt;
                        &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AddHeader&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Replace host header with original host header"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:HeaderName stringValue="host"/&gt;
                        &lt;L7p:HeaderValue stringValue="${request.http.header.host}"/&gt;
                        &lt;L7p:RemoveExisting booleanValue="true"/&gt;
                    &lt;/L7p:AddHeader&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="//Rewrite Host Header with orignal host header if enabled"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:ConnectionTimeout stringValue="${config.connectionTimeOut.max}"/&gt;
                    &lt;L7p:FailOnErrorStatus booleanValue="false"/&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="${service.endpoint}"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="Cookie"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Rules&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="Set-Cookie"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Rules&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                    &lt;L7p:Timeout stringValue="${config.readTimeOut.max}"/&gt;
                &lt;/L7p:HttpRoutingAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="QmFkIEdhdGV3YXk="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Bad Gateway [RFC2616]"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="NTAy"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Error attempting route to ${service.endpoint}. Returning ${error.code} to client."/&gt;
                        &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:FalseAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Return a Bad Gateway response [RFC2616]"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Route to the service endpoint, fail with 502"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Less than 300 is a success"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${response.http.status}"/&gt;
                    &lt;L7p:Expression2 stringValue="300"/&gt;
                    &lt;L7p:Operator operator="LT"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Operator operator="LT"/&gt;
                            &lt;L7p:RightValue stringValue="300"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// bypass response code check if set to false"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${config.checkResponseCodes.enabled}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:Split&gt;
                        &lt;L7p:InputVariable stringValue="service.knownResponseCodes"/&gt;
                        &lt;L7p:OutputVariable stringValue="service.knownResponseCodes.list"/&gt;
                    &lt;/L7p:Split&gt;
                    &lt;L7p:IndexLookupByItem&gt;
                        &lt;L7p:MultivaluedVariableName stringValue="service.knownResponseCodes.list"/&gt;
                        &lt;L7p:OutputVariableName stringValue="service.knownResponseCodes.index"/&gt;
                        &lt;L7p:ValueToSearchForVariableName stringValue="response.http.status"/&gt;
                    &lt;/L7p:IndexLookupByItem&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// check against known response codes, which can not be *"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="QmFkIEdhdGV3YXk="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Bad Gateway [RFC2616]"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="NTAy"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: ${service.endpoint} returned an unknown response (${response.http.status}). Returning ${error.code} to client."/&gt;
                        &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:FalseAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Return a Bad Gateway response [RFC2616]"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// process response code"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${config.responseCookiePathRewrite.enabled}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue=" // stop Gateway from overwritting the cookie path"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                        &lt;L7p:VariableToSet stringValue="response.cookie.overwritePath"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ManageCookie&gt;
                        &lt;L7p:CookieAttributes mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="path"/&gt;
                                &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="path"/&gt;
                                    &lt;L7p:Value stringValue="${service.basePath}"/&gt;
                                &lt;/L7p:value&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:CookieAttributes&gt;
                        &lt;L7p:CookieCriteria mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="name"/&gt;
                                &lt;L7p:value cookieCriteria="included"&gt;
                                    &lt;L7p:Key stringValue="name"/&gt;
                                    &lt;L7p:Regex booleanValue="true"/&gt;
                                    &lt;L7p:Value stringValue=".*"/&gt;
                                &lt;/L7p:value&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:CookieCriteria&gt;
                        &lt;L7p:Operation operation="UPDATE"/&gt;
                        &lt;L7p:Target target="RESPONSE"/&gt;
                    &lt;/L7p:ManageCookie&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Process Cookie paths. By default, the Gateway overwrites it to the path of request"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Routing"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Service>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Non-blocking Policy Template</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf36708113171c</l7:Id>
            <l7:Type>SERVICE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.975-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Service id="fb3f1ba1a929b3396bcf36708113171c" version="2">
                    <l7:ServiceDetail folderId="fb3f1ba1a929b3396bcf367081131690" id="fb3f1ba1a929b3396bcf36708113171c" version="2">
                        <l7:Name>Non-blocking Policy Template</l7:Name>
                        <l7:Enabled>false</l7:Enabled>
                        <l7:ServiceMappings>
                            <l7:HttpMapping>
                                <l7:UrlPattern>/ChangeMe/*</l7:UrlPattern>
                                <l7:Verbs>
                                    <l7:Verb>GET</l7:Verb>
                                    <l7:Verb>POST</l7:Verb>
                                    <l7:Verb>PUT</l7:Verb>
                                    <l7:Verb>DELETE</l7:Verb>
                                </l7:Verbs>
                            </l7:HttpMapping>
                        </l7:ServiceMappings>
                        <l7:Properties>
                            <l7:Property key="internal">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="policyRevision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="tracingEnabled">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="wssProcessingEnabled">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:ServiceDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy" version="0">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*********************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**        Non-blocking Policy -  ####DO NOT EDIT THIS TEMPLATE.####"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**        "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Description: The purpose of this template is to provide a non-blocking policy for penetration testing. The policy will"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** allow requests to go through WITHOUT ANY security checks. Therefore, we should restrict source IP when it is possible."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** How to usage:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**     1. Make a copy of this Policy. ##DO NOT EDIT THIS TEMPLATE.##"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**     2. In the copy, change variables in &amp;quot;Configuration Block&amp;quot;. By default, only 2 variables needs to be set:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**       1) service.host: this is the target endpoint, most of time referred via cluster-wide property."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**       2) ip.whitelist: source IPs of pen testers, the white list is enabled by default."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**       In addition, we can enable URL rewrite if required."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**       NOTE: the routing assertion uses system default timeout; it may need to be adjusted to accommedate the backend. "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**     3. Save and export the policy."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**     4. On target device, import this policy to the service to be pen tested."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**    "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0 Beiming Wang - 2014.07.22 - Initial release"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.1 Beiming Wang - 2014.07.22 - Fixed source IP extraction bug; added more logging"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.2 Beiming Wang - 2014.08.04 - Added more comments"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Set routing path to the request path"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnVybC5wYXRofQ=="/&gt;
                &lt;L7p:VariableToSet stringValue="service.routePath"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="Q2Fubm90IHJvdXRlIHJlcXVlc3Qu"/&gt;
                &lt;L7p:VariableToSet stringValue="error.message"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Bad Gateway [RFC2616]"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="NTAy"/&gt;
                &lt;L7p:VariableToSet stringValue="error.code"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:CustomizeErrorResponse&gt;
                &lt;L7p:Content stringValue="${error.message} (${requestid})"/&gt;
                &lt;L7p:ExtraHeaders nameValuePairArray="included"/&gt;
                &lt;L7p:HttpStatus stringValue="${error.code}"/&gt;
            &lt;/L7p:CustomizeErrorResponse&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue=" // Initialize. No change needed."/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue=" \\ e.g ${gateway.xxxx.destinationRoot}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="IyNDaGFuZ2VNZSMj"/&gt;
                &lt;L7p:VariableToSet stringValue="service.host"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue=" \\ set to true for URL rewrite"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="flag.rewrite"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue=" \\ set to false to disable IP whitelist"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                &lt;L7p:VariableToSet stringValue="flag.ip.whitelist"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue=" \\ Provide a list of IPs separated by &amp;quot;,&amp;quot;"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="IyNDaGFuZ2VNZSMj"/&gt;
                &lt;L7p:VariableToSet stringValue="ip.whitelist"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${flag.rewrite}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:Regex&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Rewrite the routing path from /incoming to /outgoing"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="service.routePath"/&gt;
                    &lt;L7p:Regex stringValue="^\/incoming ##ChangeMe##"/&gt;
                    &lt;L7p:Replace booleanValue="true"/&gt;
                    &lt;L7p:Replacement stringValue="\/outgoing ##ChangeMe##"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:Regex&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue=" \\ URL Rewrite"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue=" // Configuration -- set configuration here"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${flag.ip.whitelist}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:RightValue stringValue="false"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// put into a string for regex"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAuYWxsaGVhZGVydmFsdWVzfQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="headerString"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:CaseInsensitive booleanValue="true"/&gt;
                            &lt;L7p:IncludeEntireExpressionCapture booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="headerString"/&gt;
                            &lt;L7p:Regex stringValue="X-Forwarded-For:"/&gt;
                            &lt;L7p:RegexName stringValue="header regex test for X-Forwarded-For"/&gt;
                            &lt;L7p:Replacement stringValue=""/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${request.http.header.X-Forwarded-For}"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item stringLength="included"&gt;
                                    &lt;L7p:Max intValue="-1"/&gt;
                                    &lt;L7p:Min intValue="7"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAuaGVhZGVyLlgtRm9yd2FyZGVkLUZvcn0="/&gt;
                            &lt;L7p:VariableToSet stringValue="sourceip"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:Regex&gt;
                                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                                    &lt;L7p:CaseInsensitive booleanValue="true"/&gt;
                                    &lt;L7p:IncludeEntireExpressionCapture booleanValue="false"/&gt;
                                    &lt;L7p:OtherTargetMessageVariable stringValue="headerString"/&gt;
                                    &lt;L7p:Regex stringValue="NS-Client-IP:"/&gt;
                                    &lt;L7p:RegexName stringValue="header regex test for NS-Client-IP"/&gt;
                                    &lt;L7p:Replacement stringValue=""/&gt;
                                    &lt;L7p:Target target="OTHER"/&gt;
                                &lt;/L7p:Regex&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${request.http.header.NS-Client-IP}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item stringLength="included"&gt;
                                    &lt;L7p:Max intValue="-1"/&gt;
                                    &lt;L7p:Min intValue="7"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:Expression1 stringValue="${request.http.header.NS-Client-IP}"/&gt;
                                    &lt;L7p:Expression2 stringValue="${request.http.header.X-Forwarded-For}"/&gt;
                                    &lt;L7p:Negate booleanValue="true"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="${request.http.header.X-Forwarded-For}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: NS-Client-IP is ${request.http.header.NS-Client-IP}"/&gt;
                                    &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                                &lt;/L7p:AuditDetailAssertion&gt;
                            &lt;/wsp:All&gt;
                            &lt;L7p:TrueAssertion/&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// check ns-client-ip as well"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// check x-forwarded-ip first"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:CaseInsensitive booleanValue="true"/&gt;
                            &lt;L7p:IncludeEntireExpressionCapture booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="headerString"/&gt;
                            &lt;L7p:Regex stringValue="NS-Client-IP:"/&gt;
                            &lt;L7p:RegexName stringValue="header regex test for NS-Client-IP"/&gt;
                            &lt;L7p:Replacement stringValue=""/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${request.http.header.NS-Client-IP}"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item stringLength="included"&gt;
                                    &lt;L7p:Max intValue="-1"/&gt;
                                    &lt;L7p:Min intValue="7"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAuaGVhZGVyLk5TLUNsaWVudC1JUH0="/&gt;
                            &lt;L7p:VariableToSet stringValue="sourceip"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:AddHeader&gt;
                            &lt;L7p:HeaderName stringValue="X-Forwarded-For"/&gt;
                            &lt;L7p:HeaderValue stringValue="${request.http.header.NS-Client-IP}"/&gt;
                        &lt;/L7p:AddHeader&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// check  ns-client-ip if xff cannot be found"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnRjcC5yZW1vdGVJUH0="/&gt;
                            &lt;L7p:VariableToSet stringValue="sourceip"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:AddHeader&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// use empty value for xff"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:HeaderName stringValue="X-Forwarded-For"/&gt;
                            &lt;L7p:HeaderValue stringValue=""/&gt;
                        &lt;/L7p:AddHeader&gt;
                    &lt;/wsp:All&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:Split&gt;
                        &lt;L7p:InputVariable stringValue="ip.whitelist"/&gt;
                        &lt;L7p:OutputVariable stringValue="ip.whitelist.list"/&gt;
                    &lt;/L7p:Split&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:IndexLookupByItem&gt;
                            &lt;L7p:MultivaluedVariableName stringValue="ip.whitelist.list"/&gt;
                            &lt;L7p:OutputVariableName stringValue="ip.whitelist.index"/&gt;
                            &lt;L7p:ValueToSearchForVariableName stringValue="sourceip"/&gt;
                        &lt;/L7p:IndexLookupByItem&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="VW5hdXRob3JpemVk"/&gt;
                                &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Unauthorized"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Base64Expression stringValue="NDAx"/&gt;
                                &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:AuditDetailAssertion&gt;
                                &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Request denied: source IP not permitted."/&gt;
                                &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                            &lt;/L7p:AuditDetailAssertion&gt;
                            &lt;L7p:FalseAssertion/&gt;
                        &lt;/wsp:All&gt;
                    &lt;/wsp:OneOrMore&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue=" // detect source ip in order of x-forwarded-for &gt; ns-client-ip &gt; request.tcp.remoteIP, and store in ${sourceip}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Check against Source IP whitelist"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:HttpRoutingAssertion&gt;
                &lt;L7p:CurrentSecurityHeaderHandling intValue="3"/&gt;
                &lt;L7p:FailOnErrorStatus booleanValue="false"/&gt;
                &lt;L7p:ProtectedServiceUrl stringValue="${service.host}${service.routePath}${request.url.query}"/&gt;
                &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:ForwardAll booleanValue="true"/&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"&gt;
                        &lt;L7p:item httpPassthroughRule="included"&gt;
                            &lt;L7p:Name stringValue="Cookie"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item httpPassthroughRule="included"&gt;
                            &lt;L7p:Name stringValue="SOAPAction"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Rules&gt;
                &lt;/L7p:RequestHeaderRules&gt;
                &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:ForwardAll booleanValue="true"/&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                &lt;/L7p:RequestParamRules&gt;
                &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:ForwardAll booleanValue="true"/&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"&gt;
                        &lt;L7p:item httpPassthroughRule="included"&gt;
                            &lt;L7p:Name stringValue="Set-Cookie"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Rules&gt;
                &lt;/L7p:ResponseHeaderRules&gt;
                &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
            &lt;/L7p:HttpRoutingAssertion&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:Detail stringValue="${requestid} (${request.url.path}) ${service.name}: Error attempting route to ${service.host}${service.routePath}${request.url.query}. Returning ${error.code} to client."/&gt;
                    &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Return a Bad Gateway response [RFC2616]"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue=" // Route to the service endpoint. Do not modify."/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Service>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>RBS Global G1 Root Proving CA</l7:Name>
            <l7:Id>1f500b1fb62f4cfe4e9f294e0dd05a44</l7:Id>
            <l7:Type>TRUSTED_CERT</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.982-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:TrustedCertificate id="1f500b1fb62f4cfe4e9f294e0dd05a44" version="0">
                    <l7:Name>RBS Global G1 Root Proving CA</l7:Name>
                    <l7:CertificateData>
                        <l7:IssuerName>CN%3DRBS+Global+G1+Root+Proving+CA%2COU%3DProving+G1+PKI+Service%2CO%3DThe+Royal+Bank+of+Scotland+Group%2CC%3Dgb</l7:IssuerName>
                        <l7:SerialNumber>1486842239</l7:SerialNumber>
                        <l7:SubjectName>CN%3DRBS+Global+G1+Root+Proving+CA%2COU%3DProving+G1+PKI+Service%2CO%3DThe+Royal+Bank+of+Scotland+Group%2CC%3Dgb</l7:SubjectName>
                        <l7:Encoded>MIIGATCCBOmgAwIBAgIEWJ9pfzANBgkqhkiG9w0BAQsFADCBgTELMAkGA1UEBhMCZ2IxKTAnBgNVBAoTIFRoZSBSb3lhbCBCYW5rIG9mIFNjb3RsYW5kIEdyb3VwMR8wHQYDVQQLExZQcm92aW5nIEcxIFBLSSBTZXJ2aWNlMSYwJAYDVQQDEx1SQlMgR2xvYmFsIEcxIFJvb3QgUHJvdmluZyBDQTAeFw0xNzAyMTExOTE0MDBaFw0zNzAyMTExOTQ0MDBaMIGBMQswCQYDVQQGEwJnYjEpMCcGA1UEChMgVGhlIFJveWFsIEJhbmsgb2YgU2NvdGxhbmQgR3JvdXAxHzAdBgNVBAsTFlByb3ZpbmcgRzEgUEtJIFNlcnZpY2UxJjAkBgNVBAMTHVJCUyBHbG9iYWwgRzEgUm9vdCBQcm92aW5nIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1rEGf9yF0Cygc2RFN7CCnBpUPMZ+TQwEINLnVR66+D58Bf/uznrJLYipKs795Z1OvO9Ut2FtquX+KUzJj3B/tG3D4w8ZG07xMH8aNufKZ4xwm91LhgLAqyuLC4SK9kNN1NEycCpG8tlhryHN2xHjfNv23i2YwTtoUhSg24qWQLD5Ibbc6ackBndPrKYpqAunqWDLj0flTbBh9ga4mrbFG+nRlg9bGZ+1phrc9r0VHEV7LbxK2tj/I3CVfThkWCoadFxIojNKGnh1OTiXRPY4s+qz5JzjErEo0YqVuNJrAe5ILbXgjDzzJcwTxM3xXUFyVAg2bBcxbAreeKesmGAjkQIDAQABo4ICfTCCAnkwggIUBgNVHSAEggILMIICBzCCAgMGCiqGOgAChcFIZAEwggHzMIIB7wYIKwYBBQUHAgIwggHhGoIB3VRoaXMgc2VsZi1zaWduZWQgR2VuZXJhdGlvbiBPbmUgUHJvdmluZyBSb290IENBIGNlcnRpZmljYXRlIGlzIGlzc3VlZCB1bmRlciB0aGlzIHBvbGljeSBieSB0aGUgR2VuZXJhdGlvbiBPbmUgUHJvdmluZyBSb290IENBIG9mIFRoZSBSb3lhbCBCYW5rIG9mIFNjb3RsYW5kLiBUaGUgR2VuZXJhdGlvbiBPbmUgUHJvdmluZyBSb290IENBIGlzIGdvdmVybmVkIGFjY29yZGluZyB0byBzdGFuZGFyZHMgYXBwcm92ZWQgdGhlIFJCUyBHcm91cCBQS0kgUG9saWN5IEF1dGhvcml0eSwgcHVibGlzaGVkIGluIGl0cyBDZXJ0aWZpY2F0aW9uIFByYWN0aWNlIFN0YXRlbWVudC4gVGhpcyBjZXJ0aWZpY2F0ZSBtYXkgYmUgdXNlZCB0byB2ZXJpZnkgdGhlIHNpZ25hdHVyZSBvZiB0aGUgR2VuZXJhdGlvbiBPbmUgUHJvdmluZyBSb290IENBIG9uIHRoZSBjZXJ0aWZpY2F0ZXMgYW5kIENlcnRpZmljYXRlIFJldm9jYXRpb24gTGlzdHMgaXQgaXNzdWVzLjAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAfBgNVHSMEGDAWgBTb/LdB9azJqe+iSCfFVnp4rVB1zDAdBgNVHQ4EFgQU2/y3QfWsyanvokgnxVZ6eK1QdcwwDQYJKoZIhvcNAQELBQADggEBAF3b+v9gKNCatmk3F/woHmqtYPg4Itr54HZ6CtUZCql0g9ykpa8nuZRha2Q1v+2g7jxnzPnQ4VHamdr3Vx/jm0VSDDoc4i/dpQW33k7ScT+P5FnMb2/qPJ3Xjbt54HEByTDFWErou4Dtnqy1LULJQ/oHTy8P/UAEh/LAgyMy+oTOHva2o6+OUBtj4Cd1xi2e9POcx55zYhbLbgqZf0a2GYjFPB9ldMHtHxbzAtDPCDes1ju8KjxXZwPqhArOEYiMtno5fCQZ4GTvGHs9/lufw6bU+uXbDk9Y0M99Xqc0h1gTGRZ+/s44vsG0oah15ZaKLsyxdgAhkjsE+epZVdqcWx8=</l7:Encoded>
                    </l7:CertificateData>
                    <l7:Properties>
                        <l7:Property key="revocationCheckingEnabled">
                            <l7:BooleanValue>true</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="trustAnchor">
                            <l7:BooleanValue>true</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="trustedAsSamlAttestingEntity">
                            <l7:BooleanValue>false</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="trustedAsSamlIssuer">
                            <l7:BooleanValue>false</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="trustedForSigningClientCerts">
                            <l7:BooleanValue>false</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="trustedForSigningServerCerts">
                            <l7:BooleanValue>true</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="trustedForSsl">
                            <l7:BooleanValue>false</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="verifyHostname">
                            <l7:BooleanValue>false</l7:BooleanValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:TrustedCertificate>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>RBS Enterprise Private Issuing Test CA1</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf36708113120a</l7:Id>
            <l7:Type>TRUSTED_CERT</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.987-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:TrustedCertificate id="fb3f1ba1a929b3396bcf36708113120a" version="0">
                    <l7:Name>RBS Enterprise Private Issuing Test CA1</l7:Name>
                    <l7:CertificateData>
                        <l7:IssuerName>CN%3DRoyal+Bank+of+Scotland+Root+Test+CA%2COU%3DPre-Production+PKI+Service%2CO%3DThe+Royal+Bank+of+Scotland+Group%2CC%3Dgb</l7:IssuerName>
                        <l7:SerialNumber>1330527433</l7:SerialNumber>
                        <l7:SubjectName>CN%3DRBS+Enterprise+Private+Issuing+Test+CA1%2COU%3DPre-Production+PKI+Service%2CO%3DThe+Royal+Bank+of+Scotland+Group%2CC%3Dgb</l7:SubjectName>
                        <l7:Encoded>MIIHljCCBn6gAwIBAgIET048yTANBgkqhkiG9w0BAQUFADCBizELMAkGA1UEBhMCZ2IxKTAnBgNVBAoTIFRoZSBSb3lhbCBCYW5rIG9mIFNjb3RsYW5kIEdyb3VwMSMwIQYDVQQLExpQcmUtUHJvZHVjdGlvbiBQS0kgU2VydmljZTEsMCoGA1UEAxMjUm95YWwgQmFuayBvZiBTY290bGFuZCBSb290IFRlc3QgQ0EwHhcNMTIwMzAxMTAzMzM0WhcNMzAwMjI4MDAwMDAwWjCBjzELMAkGA1UEBhMCZ2IxKTAnBgNVBAoTIFRoZSBSb3lhbCBCYW5rIG9mIFNjb3RsYW5kIEdyb3VwMSMwIQYDVQQLExpQcmUtUHJvZHVjdGlvbiBQS0kgU2VydmljZTEwMC4GA1UEAxMnUkJTIEVudGVycHJpc2UgUHJpdmF0ZSBJc3N1aW5nIFRlc3QgQ0ExMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0nDYrIZoUCa23E9o3syrbPREvhf3610I9yV6al0R/09BGbDCLMW/9u1FIYDd6eE2hVBGVoro/Qm504UHLsE40vtRjKps9JHOTNih9jG0k9zQbQjOgip9m+CeVX1GJLkxQZNRcX0DwMlraqbRfKQFgJAICtjpL/4yVfptcqRhvXekWvWzn622cdWIzo1p5m4/djyyM8TOMoEFSKlX0iAiS56omeEqjuy9mYqr7hA7/GaJDn87e+sCXnLOGKXdqjOFumrxjFJKmxCQzmZtXZbuN5nPn20M0fuHn8s+Um4tfHcU4lGgvxbNi/7uFbfDwx53u7fKWdJnGDqeJHq66ok7AQIDAQABo4ID+jCCA/YwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wggHUBgNVHSAEggHLMIIBxzCCAcMGCiqGOgAChcFIZAIwggGzMIIBfAYIKwYBBQUHAgIwggFuGoIBakNlcnRpZmljYXRlIEF1dGhvcml0eSBjZXJ0aWZpY2F0ZXMgYXJlIGlzc3VlZCB1bmRlciB0aGlzIHBvbGljeSB0byBDQXMgdGhhdCBvcGVyYXRlIGFzIGEgc3Vib3JkaW5hdGUgQ0EgaW4gcmVsYXRpb24gdG8gdGhlIFJveWFsIEJhbmsgb2YgU2NvdGxhbmQgUm9vdCBUZXN0IENBLiBUaGUgUm95YWwgQmFuayBvZiBTY290bGFuZCBSb290IFRlc3QgQ0EgYW5kIHRoaXMgSXNzdWluZyBDQSBvcGVyYXRlIGFjY29yZGluZyB0byBzdGFuZGFyZHMgYXBwcm92ZWQgYnkgdGhlIFJCUyBHcm91cCBQS0kgUG9saWN5IEF1dGhvcml0eSwgcHVibGlzaGVkIGluIHRoZWlyIHJlc3BlY3RpdmUgQ2VydGlmaWNhdGlvbiBQcmFjdGljZSBTdGF0ZW1lbnQuMDEGCCsGAQUFBwIBFiVodHRwczovL2VudGVycHJpc2V0ZXN0cGtpLnJicy5jb20vcGRzMIIBuQYDVR0fBIIBsDCCAawwggGooIIBpKCCAaCGMGh0dHA6Ly9lbnRlcnByaXNldGVzdHBraS5yYnMuY29tL0NSTC9yYnNyb290LmNybIaBy2xkYXA6Ly9lbnRlcnByaXNlcGtpZGlyLnJicy5jb20vY249Q1JMMSxjbj1Sb3lhbCUyMEJhbmslMjBvZiUyMFNjb3RsYW5kJTIwUm9vdCUyMFRlc3QlMjBDQSxvdT1QcmUtUHJvZHVjdGlvbiUyMFBLSSUyMFNlcnZpY2Usbz1UaGUlMjBSb3lhbCUyMEJhbmslMjBvZiUyMFNjb3RsYW5kJTIwR3JvdXAsYz1nYj9hdXRob3JpdHlSZXZvY2F0aW9uTGlzdD9iYXNlpIGdMIGaMQswCQYDVQQGEwJnYjEpMCcGA1UEChMgVGhlIFJveWFsIEJhbmsgb2YgU2NvdGxhbmQgR3JvdXAxIzAhBgNVBAsTGlByZS1Qcm9kdWN0aW9uIFBLSSBTZXJ2aWNlMSwwKgYDVQQDEyNSb3lhbCBCYW5rIG9mIFNjb3RsYW5kIFJvb3QgVGVzdCBDQTENMAsGA1UEAxMEQ1JMMTAfBgNVHSMEGDAWgBQb/tpLUKEb32ty1mU8WmChIduNSTAdBgNVHQ4EFgQUtAWdBpJ7Fv8iDVkCM7yj02fXZSIwDQYJKoZIhvcNAQEFBQADggEBABDSnriQlPg+7rBvneB+OBoSnxNWJsZqb9+tFvrUVoetueLCsfYXUkl707XtLCxX/R6SX9oTUJhDtbEjgmvrNEEz4Slvx4DUr/viTNED0IFlci0/CNqtnWgZl1+qbIrBBzY0k7jbS2bIXswl7Fg4Sozdnkoj/A4QPiKVJnZn9KKWeGe6YGB6W5woNYQYHa55Ewg0qiAVuy/8uGml5jD5Ns7I1VXXFjAASdL+cH6jr6+pi5Xl1mFsN3ad8OjyZoVW4b6l+zgRZy7fEgjWDnZziNx2oIPkwTYZlXBNNTmHdQDbVRukvni91wlUScHZfYIk2cEaUdTcFu2kR6+NrvJUylc=</l7:Encoded>
                    </l7:CertificateData>
                    <l7:Properties>
                        <l7:Property key="revocationCheckingEnabled">
                            <l7:BooleanValue>true</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="trustAnchor">
                            <l7:BooleanValue>true</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="trustedAsSamlAttestingEntity">
                            <l7:BooleanValue>false</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="trustedAsSamlIssuer">
                            <l7:BooleanValue>false</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="trustedForSigningClientCerts">
                            <l7:BooleanValue>false</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="trustedForSigningServerCerts">
                            <l7:BooleanValue>true</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="trustedForSsl">
                            <l7:BooleanValue>false</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="verifyHostname">
                            <l7:BooleanValue>false</l7:BooleanValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:TrustedCertificate>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>RBS Global G1 Issuing Proving CA</l7:Name>
            <l7:Id>1f500b1fb62f4cfe4e9f294e0dc34333</l7:Id>
            <l7:Type>TRUSTED_CERT</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.992-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:TrustedCertificate id="1f500b1fb62f4cfe4e9f294e0dc34333" version="0">
                    <l7:Name>RBS Global G1 Issuing Proving CA</l7:Name>
                    <l7:CertificateData>
                        <l7:IssuerName>CN%3DRBS+Global+G1+Root+Proving+CA%2COU%3DProving+G1+PKI+Service%2CO%3DThe+Royal+Bank+of+Scotland+Group%2CC%3Dgb</l7:IssuerName>
                        <l7:SerialNumber>1486845569</l7:SerialNumber>
                        <l7:SubjectName>CN%3DRBS+Global+G1+Issuing+Proving+CA%2COU%3DProving+G1+PKI+Service%2CO%3DThe+Royal+Bank+of+Scotland+Group%2CC%3Dgb</l7:SubjectName>
                        <l7:Encoded>MIIHaDCCBlCgAwIBAgIEWJ92gTANBgkqhkiG9w0BAQsFADCBgTELMAkGA1UEBhMCZ2IxKTAnBgNVBAoTIFRoZSBSb3lhbCBCYW5rIG9mIFNjb3RsYW5kIEdyb3VwMR8wHQYDVQQLExZQcm92aW5nIEcxIFBLSSBTZXJ2aWNlMSYwJAYDVQQDEx1SQlMgR2xvYmFsIEcxIFJvb3QgUHJvdmluZyBDQTAeFw0xODAxMDYxMTAyNDFaFw0zMzAxMDYxMTMyNDFaMIGEMQswCQYDVQQGEwJnYjEpMCcGA1UEChMgVGhlIFJveWFsIEJhbmsgb2YgU2NvdGxhbmQgR3JvdXAxHzAdBgNVBAsTFlByb3ZpbmcgRzEgUEtJIFNlcnZpY2UxKTAnBgNVBAMTIFJCUyBHbG9iYWwgRzEgSXNzdWluZyBQcm92aW5nIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0G6EM2j2ftfAweLfK+GCbuAS1Knas8SY407+8arUTbhmbX9Ua+vN1svepfQ30t/ZGQbngG+I7k6VbvULdxOifznCu985d09uiLdIHhc4gnasVtvWxOUL13XpuKD03iNR9weqXmffd0E5KBiaUg+7XNuoBEusEUeQ408Lj0x8P/1GzfKr6dQq2f9iXLDq6PLEC01kn9yrpuPlaYRjZ4TtTeiQKONyzrQcY9sqo0+2tRx8CtWVG2OTBka8TBEfJCr0Fj7+CPc5b1ID/jh1k+81hc5L2zie2EQYEXJvyYwox01GoI/GC6qv6HogG10uDnsozhf8RhntbUO5u6Nkp1oZ5wIDAQABo4ID4TCCA90wDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wggHDBgNVHSAEggG6MIIBtjCCAbIGCiqGOgAChcFIZAEwggGiMIIBngYIKwYBBQUHAgIwggGQGoIBjENlcnRpZmljYXRlIEF1dGhvcml0eSBjZXJ0aWZpY2F0ZXMgYXJlIGlzc3VlZCB1bmRlciB0aGlzIHBvbGljeSB0byBDQXMgdGhhdCBvcGVyYXRlIGFzIGEgc3Vib3JkaW5hdGUgQ0EgaW4gcmVsYXRpb24gdG8gdGhlIEdlbmVyYXRpb24gT25lIFJvb3QgQ0Egb2YgVGhlIFJveWFsIEJhbmsgb2YgU2NvdGxhbmQuIFRoZSBHZW5lcmF0aW9uIE9uZSBSb290IENBIG9mIFRoZSBSb3lhbCBCYW5rIG9mIFNjb3RsYW5kIGFuZCB0aGlzIElzc3VpbmcgQ0Egb3BlcmF0ZSBhY2NvcmRpbmcgdG8gc3RhbmRhcmRzIGFwcHJvdmVkIGJ5IHRoZSBSQlMgR3JvdXAgUEtJIFBvbGljeSBBdXRob3JpdHksIHB1Ymxpc2hlZCBpbiB0aGVpciByZXNwZWN0aXZlIENlcnRpZmljYXRpb24gUHJhY3RpY2UgU3RhdGVtZW50LjCCAbEGA1UdHwSCAagwggGkMIIBoKCCAZygggGYhjpodHRwOi8vZ2VuMXByb3ZpbmdjZXJ0cy53ZWIucmJzZ3JwLm5ldC9DUkwvZ2VuMXByb290YTEuY3JshoHDbGRhcDovL2dsb2JhbGdlbjFwa2lkaXIubGIxLnJic2dycC5uZXQvY249Q1JMMSxjbj1SQlMlMjBHbG9iYWwlMjBHMSUyMFJvb3QlMjBQcm92aW5nJTIwQ0Esb3U9UHJvdmluZyUyMEcxJTIwUEtJJTIwU2VydmljZSxvPVRoZSUyMFJveWFsJTIwQmFuayUyMG9mJTIwU2NvdGxhbmQlMjBHcm91cCxjPWdiP2F1dGhvcml0eVJldm9jYXRpb25MaXN0pIGTMIGQMQswCQYDVQQGEwJnYjEpMCcGA1UEChMgVGhlIFJveWFsIEJhbmsgb2YgU2NvdGxhbmQgR3JvdXAxHzAdBgNVBAsTFlByb3ZpbmcgRzEgUEtJIFNlcnZpY2UxJjAkBgNVBAMTHVJCUyBHbG9iYWwgRzEgUm9vdCBQcm92aW5nIENBMQ0wCwYDVQQDEwRDUkwxMB8GA1UdIwQYMBaAFNv8t0H1rMmp76JIJ8VWenitUHXMMB0GA1UdDgQWBBSLbUpxmP25ZQM5N2gbNoi5nssd5DANBgkqhkiG9w0BAQsFAAOCAQEAD6VMRN7nSeWdNLynxa+l5LuSGlieTZDGJTisiFc9NFAso8eUYOOl021jrxOcKdj+vHXEyHim87EdwUiBh4RWHRL6mNyzPA/7D+DVjQcRQSCqUuYDRuf4qJqF/UvLVUCF3LbVJTaKo5VSZLWkeba3L2IwrRkEa5wd3nal+JroXQYuzbiTu9aGYYmTN3JEnadFf3uQ2nChPVC/y70nQT/82qMlSR+z8a1NYr2l7eEhyu/YIR1sCX9Ugch20z6Yrn3vKR87FJPk6rEwSMtUZff/hT2C7/X6jMtFiZzNbc3hkSDOUySFKwzNF86agpgmHxL+99hl59Z37cgXOmvAGLiuow==</l7:Encoded>
                    </l7:CertificateData>
                    <l7:Properties>
                        <l7:Property key="revocationCheckingEnabled">
                            <l7:BooleanValue>true</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="trustAnchor">
                            <l7:BooleanValue>true</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="trustedAsSamlAttestingEntity">
                            <l7:BooleanValue>false</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="trustedAsSamlIssuer">
                            <l7:BooleanValue>false</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="trustedForSigningClientCerts">
                            <l7:BooleanValue>false</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="trustedForSigningServerCerts">
                            <l7:BooleanValue>true</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="trustedForSsl">
                            <l7:BooleanValue>false</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="verifyHostname">
                            <l7:BooleanValue>false</l7:BooleanValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:TrustedCertificate>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>RBS Enterprise Private Issuing CA1</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf367081131209</l7:Id>
            <l7:Type>TRUSTED_CERT</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.992-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:TrustedCertificate id="fb3f1ba1a929b3396bcf367081131209" version="0">
                    <l7:Name>RBS Enterprise Private Issuing CA1</l7:Name>
                    <l7:CertificateData>
                        <l7:IssuerName>CN%3DRoyal+Bank+of+Scotland+Root+CA%2COU%3DProduction+PKI+Service%2CO%3DThe+Royal+Bank+of+Scotland+Group%2CC%3Dgb</l7:IssuerName>
                        <l7:SerialNumber>1329739332</l7:SerialNumber>
                        <l7:SubjectName>CN%3DRBS+Enterprise+Private+Issuing+CA1%2COU%3DProduction+PKI+Service%2CO%3DThe+Royal+Bank+of+Scotland+Group%2CC%3Dgb</l7:SubjectName>
                        <l7:Encoded>MIIHXjCCBkagAwIBAgIET0I2RDANBgkqhkiG9w0BAQUFADCBgjELMAkGA1UEBhMCZ2IxKTAnBgNVBAoTIFRoZSBSb3lhbCBCYW5rIG9mIFNjb3RsYW5kIEdyb3VwMR8wHQYDVQQLExZQcm9kdWN0aW9uIFBLSSBTZXJ2aWNlMScwJQYDVQQDEx5Sb3lhbCBCYW5rIG9mIFNjb3RsYW5kIFJvb3QgQ0EwHhcNMTIwMjI3MTMxNjU3WhcNMzAxMjE5MDAwMDAwWjCBhjELMAkGA1UEBhMCZ2IxKTAnBgNVBAoTIFRoZSBSb3lhbCBCYW5rIG9mIFNjb3RsYW5kIEdyb3VwMR8wHQYDVQQLExZQcm9kdWN0aW9uIFBLSSBTZXJ2aWNlMSswKQYDVQQDEyJSQlMgRW50ZXJwcmlzZSBQcml2YXRlIElzc3VpbmcgQ0ExMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuOUxlMQxsa38fpeeov/lKOtrE21enwJ9/6Y1YZEt6sgfRU0xbRtsepVvWFjmvBQyJX2e/E1gL4W34fwGqmtAKQ9DH2Niwt4L5qEey/YjfTPy8m2h9rqObmk1HLDs9/odnPPVQY0CRNvqmi6dFzDbDjbvAX3XBLnqs2lTHGI7wHkqDHUIqhvAGb1OqyxkuEs9QfYC8NkNR+Dqgo5h/AucVJ8kvyslKNpiQAhGL2HKwG7dInAqBDI9Vj1p2ORKjPPFZofauzPB6TEMWBYT2kFbKdPIyu5tf2uGaq+AuMKe76LRy3JXGWEnrvRnTYiN5mnLm3aqmqCXw3SQsoeNBxesAQIDAQABo4ID1DCCA9AwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wggHGBgNVHSAEggG9MIIBuTCCAbUGCiqGOgAChcFIZAEwggGlMIIBcgYIKwYBBQUHAgIwggFkGoIBYENlcnRpZmljYXRlIEF1dGhvcml0eSBjZXJ0aWZpY2F0ZXMgYXJlIGlzc3VlZCB1bmRlciB0aGlzIHBvbGljeSB0byBDQXMgdGhhdCBvcGVyYXRlIGFzIGEgc3Vib3JkaW5hdGUgQ0EgaW4gcmVsYXRpb24gdG8gdGhlIFJveWFsIEJhbmsgb2YgU2NvdGxhbmQgUm9vdCBDQS4gVGhlIFJveWFsIEJhbmsgb2YgU2NvdGxhbmQgUm9vdCBDQSBhbmQgdGhpcyBJc3N1aW5nIENBIG9wZXJhdGUgYWNjb3JkaW5nIHRvIHN0YW5kYXJkcyBhcHByb3ZlZCBieSB0aGUgUkJTIEdyb3VwIFBLSSBQb2xpY3kgQXV0aG9yaXR5LCBwdWJsaXNoZWQgaW4gdGhlaXIgcmVzcGVjdGl2ZSBDZXJ0aWZpY2F0aW9uIFByYWN0aWNlIFN0YXRlbWVudC4wLQYIKwYBBQUHAgEWIWh0dHBzOi8vZW50ZXJwcmlzZXBraS5yYnMuY29tL3BkczCCAaEGA1UdHwSCAZgwggGUMIIBkKCCAYygggGIhixodHRwOi8vZW50ZXJwcmlzZXBraS5yYnMuY29tL0NSTC9yYnNyb290LmNybIaBwGxkYXA6Ly9lbnRlcnByaXNlcGtpZGlyLnJicy5jb20vY249Q1JMMSxjbj1Sb3lhbCUyMEJhbmslMjBvZiUyMFNjb3RsYW5kJTIwUm9vdCUyMENBLG91PVByb2R1Y3Rpb24lMjBQS0klMjBTZXJ2aWNlLG89VGhlJTIwUm95YWwlMjBCYW5rJTIwb2YlMjBTY290bGFuZCUyMEdyb3VwLGM9Z2I/YXV0aG9yaXR5UmV2b2NhdGlvbkxpc3Q/YmFzZaSBlDCBkTELMAkGA1UEBhMCZ2IxKTAnBgNVBAoTIFRoZSBSb3lhbCBCYW5rIG9mIFNjb3RsYW5kIEdyb3VwMR8wHQYDVQQLExZQcm9kdWN0aW9uIFBLSSBTZXJ2aWNlMScwJQYDVQQDEx5Sb3lhbCBCYW5rIG9mIFNjb3RsYW5kIFJvb3QgQ0ExDTALBgNVBAMTBENSTDEwHwYDVR0jBBgwFoAUqYuddTpvXLWgF+6td19D/jG6d9EwHQYDVR0OBBYEFMbjuYQfZ/xDu/u0WkUSHctYFLVsMA0GCSqGSIb3DQEBBQUAA4IBAQA6HIvj5H0X6wlkCYxRHIwcCB8IjrL4pF+m11qRIkb+ZbfQYhOMgrhwDMexAntm6Kpc/RtWMXJAMlk0AnzSUHIZbO3/slaOHROLXkvoqvmleyZnzdGS6i6eDD1im/8GwwjstKEUpRbk57BSCanqjs6nnofzXFfwk+mfj5L0D1YUIKBEkE6NAZ+xSUo1FzAfG6yNgtMjKd3iPsMd+GXV8KtgowLuPOaJKZARjnkbGMDwg6wNskp1Ikhn9FvogRbE11N7LAoD4iqHrFClfxR1wV3NqfPaE6vseb9vYsYWjKr1f360zv/nMIqDQp9rW2N50gp9rcEz4pZtaHF0s5hsh8Be</l7:Encoded>
                    </l7:CertificateData>
                    <l7:Properties>
                        <l7:Property key="revocationCheckingEnabled">
                            <l7:BooleanValue>true</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="trustAnchor">
                            <l7:BooleanValue>true</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="trustedAsSamlAttestingEntity">
                            <l7:BooleanValue>false</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="trustedAsSamlIssuer">
                            <l7:BooleanValue>false</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="trustedForSigningClientCerts">
                            <l7:BooleanValue>false</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="trustedForSigningServerCerts">
                            <l7:BooleanValue>true</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="trustedForSsl">
                            <l7:BooleanValue>false</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="verifyHostname">
                            <l7:BooleanValue>false</l7:BooleanValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:TrustedCertificate>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>DigiCert Global CA G2</l7:Name>
            <l7:Id>1f500b1fb62f4cfe4e9f294e0dcf7012</l7:Id>
            <l7:Type>TRUSTED_CERT</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.993-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:TrustedCertificate id="1f500b1fb62f4cfe4e9f294e0dcf7012" version="0">
                    <l7:Name>DigiCert Global CA G2</l7:Name>
                    <l7:CertificateData>
                        <l7:IssuerName>CN%3DDigiCert+Global+Root+G2%2COU%3Dwww.digicert.com%2CO%3DDigiCert+Inc%2CC%3DUS</l7:IssuerName>
                        <l7:SerialNumber>16692601292094917965351216382751144367</l7:SerialNumber>
                        <l7:SubjectName>CN%3DDigiCert+Global+CA+G2%2CO%3DDigiCert+Inc%2CC%3DUS</l7:SubjectName>
                        <l7:Encoded>MIIEizCCA3OgAwIBAgIQDI7gyQ1qiRWIBAYe4kH5rzANBgkqhkiG9w0BAQsFADBhMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBHMjAeFw0xMzA4MDExMjAwMDBaFw0yODA4MDExMjAwMDBaMEQxCzAJBgNVBAYTAlVTMRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxHjAcBgNVBAMTFURpZ2lDZXJ0IEdsb2JhbCBDQSBHMjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANNIfL7zBYZdW9UvhU5L4IatFaxhz1uvPmoKR/uadpFgC4przc/cV35gmAvkVNlW7SHMArZagV+Xau4CLyMnuG3UsOcGAngLH1ypmTb+u6wbBfpXzYEQQGfWMItYNdSWYb7QjHqXnxr5IuYUL6nG6AEfq/gmD6yOTSwyOR2Bm40cZbIc22GoiS9g5+vCShjEbyrpEJIJ7RfRACvmfe8EiRROM6GyD5eHn7OgzS+8LOy4g2gxPR/VSpAQGQuBldYpdlH5NnbQtwl6OErXb4y/E3w57bqukPyV93t4CTZedJMeJfD/1K2uaGvG/w/VNfFVbkhJ+Pi474j48V4Rd6rfArMCAwEAAaOCAVowggFWMBIGA1UdEwEB/wQIMAYBAf8CAQAwDgYDVR0PAQH/BAQDAgGGMDQGCCsGAQUFBwEBBCgwJjAkBggrBgEFBQcwAYYYaHR0cDovL29jc3AuZGlnaWNlcnQuY29tMHsGA1UdHwR0MHIwN6A1oDOGMWh0dHA6Ly9jcmw0LmRpZ2ljZXJ0LmNvbS9EaWdpQ2VydEdsb2JhbFJvb3RHMi5jcmwwN6A1oDOGMWh0dHA6Ly9jcmwzLmRpZ2ljZXJ0LmNvbS9EaWdpQ2VydEdsb2JhbFJvb3RHMi5jcmwwPQYDVR0gBDYwNDAyBgRVHSAAMCowKAYIKwYBBQUHAgEWHGh0dHBzOi8vd3d3LmRpZ2ljZXJ0LmNvbS9DUFMwHQYDVR0OBBYEFCRuKy3QapJRUSVpAaqaR6aJ50AgMB8GA1UdIwQYMBaAFE4iVCAYlebjbuYP+vq5Eu0GF485MA0GCSqGSIb3DQEBCwUAA4IBAQALOYSR+ZfrqoGvhOlaOJL84mxZvzbIRacxAxHhBsCsMsdaVSnaT0AC9aHesO3ewPj2dZ12uYf+QYB6z13jAMZbAuabeGLJ3LhimnftiQjXS8X9Q9ViIyfEBFltcT8jW+rZ8uckJ2/0lYDblizkVIvP6hnZf1WZUXoOLRg9eFhSvGNoVwvdRLNXSmDmyHBwW4coatc7TlJFGa8kBpJIERqLrqwYElesA8u49L3KJg6nwd3jM+/AVTANlVlOnAM2BvjAjxSZnE0qnsHhfTuvcqdFuhOWKU4Z0BqYBvQ3lBetoxi6PrABDJXWKTUgNX31EGDk92hiHuwZ4STyhxGs6QiA</l7:Encoded>
                    </l7:CertificateData>
                    <l7:Properties>
                        <l7:Property key="revocationCheckingEnabled">
                            <l7:BooleanValue>true</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="trustAnchor">
                            <l7:BooleanValue>true</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="trustedAsSamlAttestingEntity">
                            <l7:BooleanValue>false</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="trustedAsSamlIssuer">
                            <l7:BooleanValue>false</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="trustedForSigningClientCerts">
                            <l7:BooleanValue>false</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="trustedForSigningServerCerts">
                            <l7:BooleanValue>true</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="trustedForSsl">
                            <l7:BooleanValue>false</l7:BooleanValue>
                        </l7:Property>
                        <l7:Property key="verifyHostname">
                            <l7:BooleanValue>false</l7:BooleanValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:TrustedCertificate>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>ldap.searchMaxResults</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf367081130c3e</l7:Id>
            <l7:Type>CLUSTER_PROPERTY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.993-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ClusterProperty id="fb3f1ba1a929b3396bcf367081130c3e" version="0">
                    <l7:Name>ldap.searchMaxResults</l7:Name>
                    <l7:Value>500</l7:Value>
                </l7:ClusterProperty>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>cluster.hostname</l7:Name>
            <l7:Id>0000000000000000fffffffffff5519f</l7:Id>
            <l7:Type>CLUSTER_PROPERTY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.993-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ClusterProperty id="0000000000000000fffffffffff5519f" version="1">
                    <l7:Name>cluster.hostname</l7:Name>
                    <l7:Value>ssg_v9_3</l7:Value>
                </l7:ClusterProperty>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>audit.log.service.detailFormat</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf367081130c1f</l7:Id>
            <l7:Type>CLUSTER_PROPERTY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.993-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ClusterProperty id="fb3f1ba1a929b3396bcf367081130c1f" version="0">
                    <l7:Name>audit.log.service.detailFormat</l7:Name>
                    <l7:Value>{0}: ${requestid} (${request.url.path}) ${service.name}: {1}</l7:Value>
                </l7:ClusterProperty>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>principalSessionCache.maxPrincipalGroups</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf367081130c40</l7:Id>
            <l7:Type>CLUSTER_PROPERTY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.993-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ClusterProperty id="fb3f1ba1a929b3396bcf367081130c40" version="0">
                    <l7:Name>principalSessionCache.maxPrincipalGroups</l7:Name>
                    <l7:Value>500</l7:Value>
                </l7:ClusterProperty>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>io.xmlPartMaxBytes</l7:Name>
            <l7:Id>0c5d0eca7f2ebc666ad2161c6a70e139</l7:Id>
            <l7:Type>CLUSTER_PROPERTY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.993-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ClusterProperty id="0c5d0eca7f2ebc666ad2161c6a70e139" version="0">
                    <l7:Name>io.xmlPartMaxBytes</l7:Name>
                    <l7:Value>5120000</l7:Value>
                </l7:ClusterProperty>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>pingServlet.mode</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf367081130c30</l7:Id>
            <l7:Type>CLUSTER_PROPERTY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.993-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ClusterProperty id="fb3f1ba1a929b3396bcf367081130c30" version="0">
                    <l7:Name>pingServlet.mode</l7:Name>
                    <l7:Value>OPEN</l7:Value>
                </l7:ClusterProperty>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>restman.request.message.maxSize</l7:Name>
            <l7:Id>3aa7217dd5bcd4e2a4d5bf6545ef9aa8</l7:Id>
            <l7:Type>CLUSTER_PROPERTY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.995-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ClusterProperty id="3aa7217dd5bcd4e2a4d5bf6545ef9aa8" version="0">
                    <l7:Name>restman.request.message.maxSize</l7:Name>
                    <l7:Value>5120000</l7:Value>
                </l7:ClusterProperty>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>audit.log.service.headerFormat</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf367081130bdd</l7:Id>
            <l7:Type>CLUSTER_PROPERTY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.995-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ClusterProperty id="fb3f1ba1a929b3396bcf367081130bdd" version="0">
                    <l7:Name>audit.log.service.headerFormat</l7:Name>
                    <l7:Value>0000: ${requestid} (${request.url.path}) ${service.name}: Start processing request.</l7:Value>
                </l7:ClusterProperty>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>audit.log.service.footerFormat</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf367081130c21</l7:Id>
            <l7:Type>CLUSTER_PROPERTY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.995-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ClusterProperty id="fb3f1ba1a929b3396bcf367081130c21" version="0">
                    <l7:Name>audit.log.service.footerFormat</l7:Name>
                    <l7:Value>0000: ${requestid} (${request.url.path}) ${service.name}: Completed. {1}</l7:Value>
                </l7:ClusterProperty>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>soapfault.level</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf367081130c32</l7:Id>
            <l7:Type>CLUSTER_PROPERTY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.995-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ClusterProperty id="fb3f1ba1a929b3396bcf367081130c32" version="0">
                    <l7:Name>soapfault.level</l7:Name>
                    <l7:Value>4</l7:Value>
                </l7:ClusterProperty>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>audit.setDetailLevel.INFO</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf367081130c23</l7:Id>
            <l7:Type>CLUSTER_PROPERTY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.995-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ClusterProperty id="fb3f1ba1a929b3396bcf367081130c23" version="0">
                    <l7:Name>audit.setDetailLevel.INFO</l7:Name>
                    <l7:Value>152</l7:Value>
                </l7:ClusterProperty>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>soapfault.template</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf367081130c34</l7:Id>
            <l7:Type>CLUSTER_PROPERTY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.995-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ClusterProperty id="fb3f1ba1a929b3396bcf367081130c34" version="0">
                    <l7:Name>soapfault.template</l7:Name>
                    <l7:Value>&lt;s:Envelope xmlns:s="${request.soap.envelopeNs}"&gt;&lt;s:Body&gt;&lt;s:Fault&gt;&lt;faultcode&gt;s:Server&lt;/faultcode&gt;&lt;faultstring&gt;Access Failed (${requestid})&lt;/faultstring&gt;&lt;faultactor&gt;${request.url}&lt;/faultactor&gt;&lt;/s:Fault&gt;&lt;/s:Body&gt;&lt;/s:Envelope&gt;</l7:Value>
                </l7:ClusterProperty>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>audit.setDetailLevel.WARNING</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf367081130c25</l7:Id>
            <l7:Type>CLUSTER_PROPERTY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.995-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ClusterProperty id="fb3f1ba1a929b3396bcf367081130c25" version="0">
                    <l7:Name>audit.setDetailLevel.WARNING</l7:Name>
                    <l7:Value>6950 6953</l7:Value>
                </l7:ClusterProperty>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>trafficlogger.detail</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf367081130c36</l7:Id>
            <l7:Type>CLUSTER_PROPERTY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.995-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ClusterProperty id="fb3f1ba1a929b3396bcf367081130c36" version="0">
                    <l7:Name>trafficlogger.detail</l7:Name>
                    <l7:Value>${request.time}, ${requestId}, ${request.tcp.remoteIP}, ${request.http.header.X-Forwarded-For}, ${request.url.path}, ${request.elapsedTime}, ${httpRouting.latency}, ${request.shared.messageSize}</l7:Value>
                </l7:ClusterProperty>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>audit.sink.fallbackToInternal</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf367081130c27</l7:Id>
            <l7:Type>CLUSTER_PROPERTY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.995-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ClusterProperty id="fb3f1ba1a929b3396bcf367081130c27" version="0">
                    <l7:Name>audit.sink.fallbackToInternal</l7:Name>
                    <l7:Value>false</l7:Value>
                </l7:ClusterProperty>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>logon.inactivityPeriod</l7:Name>
            <l7:Id>9dc90e9f92e551cb6944328ef5ccdb73</l7:Id>
            <l7:Type>CLUSTER_PROPERTY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.996-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ClusterProperty id="9dc90e9f92e551cb6944328ef5ccdb73" version="0">
                    <l7:Name>logon.inactivityPeriod</l7:Name>
                    <l7:Value>365</l7:Value>
                </l7:ClusterProperty>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>service.wsdlQueryEnabled</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf367081130c3a</l7:Id>
            <l7:Type>CLUSTER_PROPERTY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.996-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ClusterProperty id="fb3f1ba1a929b3396bcf367081130c3a" version="0">
                    <l7:Name>service.wsdlQueryEnabled</l7:Name>
                    <l7:Value>false</l7:Value>
                </l7:ClusterProperty>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>ldap.group.searchMaxResults</l7:Name>
            <l7:Id>fb3f1ba1a929b3396bcf367081130c3c</l7:Id>
            <l7:Type>CLUSTER_PROPERTY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.996-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ClusterProperty id="fb3f1ba1a929b3396bcf367081130c3c" version="0">
                    <l7:Name>ldap.group.searchMaxResults</l7:Name>
                    <l7:Value>500</l7:Value>
                </l7:ClusterProperty>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>loopback</l7:Name>
            <l7:Id>742a7604-699c-368a-a19a-0ddd73085575</l7:Id>
            <l7:Type>INTERFACE_TAG</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.996-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:InterfaceTag id="742a7604-699c-368a-a19a-0ddd73085575">
                    <l7:Name>loopback</l7:Name>
                    <l7:AddressPatterns>
                        <l7:StringValue>127.0.0.1</l7:StringValue>
                    </l7:AddressPatterns>
                </l7:InterfaceTag>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>management</l7:Name>
            <l7:Id>0775603f26bbbffcc957374dbe1f3c4a</l7:Id>
            <l7:Type>SSG_CONNECTOR</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.998-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ListenPort id="0775603f26bbbffcc957374dbe1f3c4a" version="0">
                    <l7:Name>management</l7:Name>
                    <l7:Enabled>true</l7:Enabled>
                    <l7:Protocol>HTTPS</l7:Protocol>
                    <l7:Port>8443</l7:Port>
                    <l7:EnabledFeatures>
                        <l7:StringValue>Published service message input</l7:StringValue>
                        <l7:StringValue>Policy Manager access</l7:StringValue>
                        <l7:StringValue>Enterprise Manager access</l7:StringValue>
                        <l7:StringValue>Browser-based administration</l7:StringValue>
                        <l7:StringValue>Built-in services</l7:StringValue>
                    </l7:EnabledFeatures>
                    <l7:TlsSettings>
                        <l7:ClientAuthentication>Optional</l7:ClientAuthentication>
                        <l7:EnabledVersions>
                            <l7:StringValue>TLSv1.2</l7:StringValue>
                        </l7:EnabledVersions>
                        <l7:EnabledCipherSuites>
                            <l7:StringValue>TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256</l7:StringValue>
                            <l7:StringValue>TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256</l7:StringValue>
                            <l7:StringValue>TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384</l7:StringValue>
                            <l7:StringValue>TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384</l7:StringValue>
                        </l7:EnabledCipherSuites>
                        <l7:Properties>
                            <l7:Property key="usesTLS">
                                <l7:BooleanValue>true</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:TlsSettings>
                    <l7:Properties>
                        <l7:Property key="Server">
                            <l7:StringValue>-</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="threadPoolSize">
                            <l7:StringValue>20</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="useExtendedFtpCommandSet">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:ListenPort>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>ingress-https</l7:Name>
            <l7:Id>0775603f26bbbffcc957374dbe1f3c4c</l7:Id>
            <l7:Type>SSG_CONNECTOR</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.998-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ListenPort id="0775603f26bbbffcc957374dbe1f3c4c" version="0">
                    <l7:Name>ingress-https</l7:Name>
                    <l7:Enabled>true</l7:Enabled>
                    <l7:Protocol>HTTPS</l7:Protocol>
                    <l7:Port>9443</l7:Port>
                    <l7:EnabledFeatures>
                        <l7:StringValue>Published service message input</l7:StringValue>
                        <l7:StringValue>WSDL download service</l7:StringValue>
                    </l7:EnabledFeatures>
                    <l7:TlsSettings>
                        <l7:ClientAuthentication>None</l7:ClientAuthentication>
                        <l7:EnabledVersions>
                            <l7:StringValue>TLSv1.2</l7:StringValue>
                        </l7:EnabledVersions>
                        <l7:EnabledCipherSuites>
                            <l7:StringValue>TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256</l7:StringValue>
                            <l7:StringValue>TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256</l7:StringValue>
                            <l7:StringValue>TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384</l7:StringValue>
                            <l7:StringValue>TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384</l7:StringValue>
                        </l7:EnabledCipherSuites>
                        <l7:Properties>
                            <l7:Property key="usesTLS">
                                <l7:BooleanValue>true</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:TlsSettings>
                    <l7:Properties>
                        <l7:Property key="Server">
                            <l7:StringValue>-</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="useExtendedFtpCommandSet">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:ListenPort>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>management-backup</l7:Name>
            <l7:Id>0775603f26bbbffcc957374dbe1f3c4b</l7:Id>
            <l7:Type>SSG_CONNECTOR</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.998-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ListenPort id="0775603f26bbbffcc957374dbe1f3c4b" version="0">
                    <l7:Name>management-backup</l7:Name>
                    <l7:Enabled>true</l7:Enabled>
                    <l7:Protocol>HTTPS</l7:Protocol>
                    <l7:Port>8444</l7:Port>
                    <l7:EnabledFeatures>
                        <l7:StringValue>Published service message input</l7:StringValue>
                        <l7:StringValue>Policy Manager access</l7:StringValue>
                        <l7:StringValue>Enterprise Manager access</l7:StringValue>
                        <l7:StringValue>Browser-based administration</l7:StringValue>
                        <l7:StringValue>Built-in services</l7:StringValue>
                    </l7:EnabledFeatures>
                    <l7:TlsSettings>
                        <l7:ClientAuthentication>Optional</l7:ClientAuthentication>
                        <l7:EnabledVersions>
                            <l7:StringValue>TLSv1.2</l7:StringValue>
                        </l7:EnabledVersions>
                        <l7:EnabledCipherSuites>
                            <l7:StringValue>TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256</l7:StringValue>
                            <l7:StringValue>TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256</l7:StringValue>
                            <l7:StringValue>TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384</l7:StringValue>
                            <l7:StringValue>TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384</l7:StringValue>
                        </l7:EnabledCipherSuites>
                        <l7:Properties>
                            <l7:Property key="usesTLS">
                                <l7:BooleanValue>true</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:TlsSettings>
                    <l7:Properties>
                        <l7:Property key="threadPoolSize">
                            <l7:StringValue>20</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="useExtendedFtpCommandSet">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:ListenPort>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>sync</l7:Name>
            <l7:Id>0775603f26bbbffcc957374dbe1f3c4d</l7:Id>
            <l7:Type>SSG_CONNECTOR</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.999-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ListenPort id="0775603f26bbbffcc957374dbe1f3c4d" version="0">
                    <l7:Name>sync</l7:Name>
                    <l7:Enabled>true</l7:Enabled>
                    <l7:Protocol>HTTPS</l7:Protocol>
                    <l7:Port>2124</l7:Port>
                    <l7:EnabledFeatures>
                        <l7:StringValue>Node Control</l7:StringValue>
                        <l7:StringValue>Inter-Node Communication</l7:StringValue>
                    </l7:EnabledFeatures>
                    <l7:TlsSettings>
                        <l7:ClientAuthentication>Optional</l7:ClientAuthentication>
                        <l7:EnabledVersions>
                            <l7:StringValue>TLSv1.2</l7:StringValue>
                        </l7:EnabledVersions>
                        <l7:EnabledCipherSuites>
                            <l7:StringValue>TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256</l7:StringValue>
                            <l7:StringValue>TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256</l7:StringValue>
                            <l7:StringValue>TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384</l7:StringValue>
                            <l7:StringValue>TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384</l7:StringValue>
                        </l7:EnabledCipherSuites>
                        <l7:Properties>
                            <l7:Property key="usesTLS">
                                <l7:BooleanValue>true</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:TlsSettings>
                    <l7:Properties>
                        <l7:Property key="threadPoolSize">
                            <l7:StringValue>10</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="useExtendedFtpCommandSet">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:ListenPort>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>local-service</l7:Name>
            <l7:Id>0775603f26bbbffcc957374dbe1f3ddf</l7:Id>
            <l7:Type>SSG_CONNECTOR</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.999-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ListenPort id="0775603f26bbbffcc957374dbe1f3ddf" version="0">
                    <l7:Name>local-service</l7:Name>
                    <l7:Enabled>true</l7:Enabled>
                    <l7:Protocol>HTTPS</l7:Protocol>
                    <l7:Interface>127.0.0.1</l7:Interface>
                    <l7:Port>8445</l7:Port>
                    <l7:EnabledFeatures>
                        <l7:StringValue>Published service message input</l7:StringValue>
                    </l7:EnabledFeatures>
                    <l7:TlsSettings>
                        <l7:ClientAuthentication>Optional</l7:ClientAuthentication>
                        <l7:EnabledVersions>
                            <l7:StringValue>TLSv1.2</l7:StringValue>
                        </l7:EnabledVersions>
                        <l7:EnabledCipherSuites>
                            <l7:StringValue>TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256</l7:StringValue>
                            <l7:StringValue>TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256</l7:StringValue>
                            <l7:StringValue>TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384</l7:StringValue>
                            <l7:StringValue>TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384</l7:StringValue>
                        </l7:EnabledCipherSuites>
                        <l7:Properties>
                            <l7:Property key="usesTLS">
                                <l7:BooleanValue>true</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:TlsSettings>
                    <l7:Properties>
                        <l7:Property key="threadPoolSize">
                            <l7:StringValue>20</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="useExtendedFtpCommandSet">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:ListenPort>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>monitoring-https</l7:Name>
            <l7:Id>0775603f26bbbffcc957374dbe1f3def</l7:Id>
            <l7:Type>SSG_CONNECTOR</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:57.999-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ListenPort id="0775603f26bbbffcc957374dbe1f3def" version="0">
                    <l7:Name>monitoring-https</l7:Name>
                    <l7:Enabled>true</l7:Enabled>
                    <l7:Protocol>HTTPS</l7:Protocol>
                    <l7:Port>9444</l7:Port>
                    <l7:EnabledFeatures>
                        <l7:StringValue>Ping service</l7:StringValue>
                    </l7:EnabledFeatures>
                    <l7:TlsSettings>
                        <l7:ClientAuthentication>None</l7:ClientAuthentication>
                        <l7:EnabledVersions>
                            <l7:StringValue>TLSv1.2</l7:StringValue>
                        </l7:EnabledVersions>
                        <l7:EnabledCipherSuites>
                            <l7:StringValue>TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256</l7:StringValue>
                            <l7:StringValue>TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256</l7:StringValue>
                            <l7:StringValue>TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384</l7:StringValue>
                            <l7:StringValue>TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384</l7:StringValue>
                        </l7:EnabledCipherSuites>
                        <l7:Properties>
                            <l7:Property key="usesTLS">
                                <l7:BooleanValue>true</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:TlsSettings>
                    <l7:Properties>
                        <l7:Property key="useExtendedFtpCommandSet">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:ListenPort>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>View Service Metrics</l7:Name>
            <l7:Id>0000000000000000fffffffffffffe0c</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.062-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000fffffffffffffe0c" version="0">
                    <l7:name>View Service Metrics</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to monitor service metrics in the manager.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage Non-blocking Policy Template Service (#fb3f1ba1a929b3396bcf36708113171c)</l7:Name>
            <l7:Id>17273f26927e10909b73c67c18cb26d9</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.065-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="17273f26927e10909b73c67c18cb26d9" version="0">
                    <l7:name>Manage Non-blocking Policy Template Service (#fb3f1ba1a929b3396bcf36708113171c)</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read, update and delete the {1} service.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>SERVICE</l7:entityType>
                    <l7:entityID>fb3f1ba1a929b3396bcf36708113171c</l7:entityID>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage Secure Passwords</l7:Name>
            <l7:Id>0000000000000000fffffffffffffbe6</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.066-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000fffffffffffffbe6" version="0">
                    <l7:name>Manage Secure Passwords</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read, create, update and delete any stored password.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage Encapsulated Assertions</l7:Name>
            <l7:Id>0000000000000000fffffffffffffaba</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.066-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000fffffffffffffaba" version="0">
                    <l7:name>Manage Encapsulated Assertions</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to create/read/update/delete encapsulated assertions.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>ENCAPSULATED_ASSERTION</l7:entityType>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>View Shared Policies Folder (#fb3f1ba1a929b3396bcf367081131506)</l7:Name>
            <l7:Id>17273f26927e10909b73c67c18cb2475</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.066-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="17273f26927e10909b73c67c18cb2475" version="0">
                    <l7:name>View Shared Policies Folder (#fb3f1ba1a929b3396bcf367081131506)</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to view services and policies within the {1} folder.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>FOLDER</l7:entityType>
                    <l7:entityID>fb3f1ba1a929b3396bcf367081131506</l7:entityID>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage Cluster Status</l7:Name>
            <l7:Id>0000000000000000fffffffffffffdda</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.066-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000fffffffffffffdda" version="0">
                    <l7:name>Manage Cluster Status</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read, create, update and delete cluster status information.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage Password Policies</l7:Name>
            <l7:Id>0000000000000000fffffffffffffb82</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.066-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000fffffffffffffb82" version="0">
                    <l7:name>Manage Password Policies</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read and update any stored password policy and view the identity providers.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage Certificates (truststore)</l7:Name>
            <l7:Id>0000000000000000fffffffffffffda8</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.066-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000fffffffffffffda8" version="0">
                    <l7:name>Manage Certificates (truststore)</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read, create, update and delete trusted certificates and policies for revocation checking.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>View SecurityServices Folder (#fb3f1ba1a929b3396bcf3670811314c5)</l7:Name>
            <l7:Id>17273f26927e10909b73c67c18cb2439</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.067-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="17273f26927e10909b73c67c18cb2439" version="0">
                    <l7:name>View SecurityServices Folder (#fb3f1ba1a929b3396bcf3670811314c5)</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to view services and policies within the {1} folder.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>FOLDER</l7:entityType>
                    <l7:entityID>fb3f1ba1a929b3396bcf3670811314c5</l7:entityID>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage Work Queue</l7:Name>
            <l7:Id>0000000000000000fffffffffffff95c</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.067-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000fffffffffffff95c" version="0">
                    <l7:name>Manage Work Queue</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read, create, update and delete work queues.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>WORK_QUEUE</l7:entityType>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Gateway Maintenance</l7:Name>
            <l7:Id>0000000000000000fffffffffffffcae</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.067-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000fffffffffffffcae" version="0">
                    <l7:name>Gateway Maintenance</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to perform Gateway maintenance tasks.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage Audit Scrubbing Filter Policy (#fb3f1ba1a929b3396bcf367081130f3f)</l7:Name>
            <l7:Id>17273f26927e10909b73c67c18cb2556</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.067-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="17273f26927e10909b73c67c18cb2556" version="0">
                    <l7:name>Manage Audit Scrubbing Filter Policy (#fb3f1ba1a929b3396bcf367081130f3f)</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read, update and delete the {1} policy.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>POLICY</l7:entityType>
                    <l7:entityID>fb3f1ba1a929b3396bcf367081130f3f</l7:entityID>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage Custom Key Value Store</l7:Name>
            <l7:Id>0000000000000000fffffffffffffa56</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.067-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000fffffffffffffa56" version="0">
                    <l7:name>Manage Custom Key Value Store</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read, create, update, and delete key values from custom key value store.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>CUSTOM_KEY_VALUE_STORE</l7:entityType>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage Message Destinations</l7:Name>
            <l7:Id>0000000000000000fffffffffffffd76</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.067-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000fffffffffffffd76" version="0">
                    <l7:name>Manage Message Destinations</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read, create, update and delete message destinations.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage JDBC Connections</l7:Name>
            <l7:Id>0000000000000000fffffffffffffc4a</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.067-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000fffffffffffffc4a" version="0">
                    <l7:name>Manage JDBC Connections</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read, create, update and delete JDBC connections.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Operator</l7:Name>
            <l7:Id>0000000000000000ffffffffffffff6a</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.067-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000ffffffffffffff6a" version="1">
                    <l7:name>Operator</l7:name>
                    <l7:description>Users assigned to the {0} role have read only access to the gateway.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>View System Policies Folder (#fb3f1ba1a929b3396bcf367081130d6b)</l7:Name>
            <l7:Id>17273f26927e10909b73c67c18cb23c1</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.068-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="17273f26927e10909b73c67c18cb23c1" version="0">
                    <l7:name>View System Policies Folder (#fb3f1ba1a929b3396bcf367081130d6b)</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to view services and policies within the {1} folder.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>FOLDER</l7:entityType>
                    <l7:entityID>fb3f1ba1a929b3396bcf367081130d6b</l7:entityID>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage UDDI Registries</l7:Name>
            <l7:Id>0000000000000000fffffffffffffc18</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.068-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000fffffffffffffc18" version="0">
                    <l7:name>Manage UDDI Registries</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read, create, update and delete UDDI Registry connections.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage Internal Users and Groups</l7:Name>
            <l7:Id>0000000000000000ffffffffffffff38</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.068-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000ffffffffffffff38" version="0">
                    <l7:name>Manage Internal Users and Groups</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to create, read, update and delete users and groups in the internal identity provider.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage Service templates Folder (#fb3f1ba1a929b3396bcf367081131690)</l7:Name>
            <l7:Id>17273f26927e10909b73c67c18cb24c8</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.068-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="17273f26927e10909b73c67c18cb24c8" version="0">
                    <l7:name>Manage Service templates Folder (#fb3f1ba1a929b3396bcf367081131690)</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to view, update and delete services and policies within the {1} folder.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>FOLDER</l7:entityType>
                    <l7:entityID>fb3f1ba1a929b3396bcf367081131690</l7:entityID>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage Administrative Accounts Configuration</l7:Name>
            <l7:Id>0000000000000000fffffffffffffb1e</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.068-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000fffffffffffffb1e" version="0">
                    <l7:name>Manage Administrative Accounts Configuration</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to create/read/update cluster properties applicable to administrative accounts configurations.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>View Audit Records</l7:Name>
            <l7:Id>0000000000000000fffffffffffffe3e</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.068-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000fffffffffffffe3e" version="0">
                    <l7:name>View Audit Records</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to view audits in the manager.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage eComm Infra Test Policy Service (#fb3f1ba1a929b3396bcf3670811313c1)</l7:Name>
            <l7:Id>17273f26927e10909b73c67c18cb260a</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.069-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="17273f26927e10909b73c67c18cb260a" version="0">
                    <l7:name>Manage eComm Infra Test Policy Service (#fb3f1ba1a929b3396bcf3670811313c1)</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read, update and delete the {1} service.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>SERVICE</l7:entityType>
                    <l7:entityID>fb3f1ba1a929b3396bcf3670811313c1</l7:entityID>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>ssg</l7:Name>
            <l7:Id>0000000000000000fffffffffffffcd6</l7:Id>
            <l7:Type>LOG_SINK</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.069-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:LogSink id="0000000000000000fffffffffffffcd6" version="0">
                    <l7:Name>ssg</l7:Name>
                    <l7:Description>Main log</l7:Description>
                    <l7:Type>FILE</l7:Type>
                    <l7:Categories>
                        <l7:Category>AUDIT</l7:Category>
                        <l7:Category>LOG</l7:Category>
                    </l7:Categories>
                    <l7:Enabled>true</l7:Enabled>
                    <l7:Severity>INFO</l7:Severity>
                    <l7:SyslogHosts/>
                    <l7:Filters/>
                    <l7:Properties>
                        <l7:Property key="file.format">
                            <l7:StringValue>STANDARD</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="file.logCount">
                            <l7:StringValue>10</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="file.maxSize">
                            <l7:StringValue>20000</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:LogSink>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>View ssg Log Sink (#-1,300)</l7:Name>
            <l7:Id>0000000000000000fffffffffffffaec</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.070-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000fffffffffffffaec" version="0">
                    <l7:name>View ssg Log Sink (#-1,300)</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read the log sink and any associated log files.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>LOG_SINK</l7:entityType>
                    <l7:entityID>0000000000000000fffffffffffffcd6</l7:entityID>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage Generic REST Service Template v3.28 Service (#fb3f1ba1a929b3396bcf3670811316d2)</l7:Name>
            <l7:Id>17273f26927e10909b73c67c18cb2663</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.074-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="17273f26927e10909b73c67c18cb2663" version="0">
                    <l7:name>Manage Generic REST Service Template v3.28 Service (#fb3f1ba1a929b3396bcf3670811316d2)</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read, update and delete the {1} service.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>SERVICE</l7:entityType>
                    <l7:entityID>fb3f1ba1a929b3396bcf3670811316d2</l7:entityID>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage Template Backups Folder (#63805bece54f5987d66ab52a8499463b)</l7:Name>
            <l7:Id>17273f26927e10909b73c67c18cb2504</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.074-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="17273f26927e10909b73c67c18cb2504" version="0">
                    <l7:name>Manage Template Backups Folder (#63805bece54f5987d66ab52a8499463b)</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to view, update and delete services and policies within the {1} folder.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>FOLDER</l7:entityType>
                    <l7:entityID>63805bece54f5987d66ab52a8499463b</l7:entityID>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage Modules Installable via Policy Manager</l7:Name>
            <l7:Id>0000000000000000fffffffffffff98e</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.074-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000fffffffffffff98e" version="0">
                    <l7:name>Manage Modules Installable via Policy Manager</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read, create, update and delete Modules Installable via Policy Manager.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>SERVER_MODULE_FILE</l7:entityType>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage Cassandra Connection</l7:Name>
            <l7:Id>0000000000000000fffffffffffff9c0</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.074-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000fffffffffffff9c0" version="0">
                    <l7:name>Manage Cassandra Connection</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read, create, update and delete Cassandra connection.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>CASSANDRA_CONFIGURATION</l7:entityType>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage Gateway Management Service Service (#3ab0ba38f0101c67d9c46ad05f5b3d73)</l7:Name>
            <l7:Id>17273f26927e10909b73c67c18cb2589</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.074-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="17273f26927e10909b73c67c18cb2589" version="0">
                    <l7:name>Manage Gateway Management Service Service (#3ab0ba38f0101c67d9c46ad05f5b3d73)</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read, update and delete the {1} service.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>SERVICE</l7:entityType>
                    <l7:entityID>3ab0ba38f0101c67d9c46ad05f5b3d73</l7:entityID>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage [Internal Debug Trace Policy] Policy (#fb3f1ba1a929b3396bcf367081130f1d)</l7:Name>
            <l7:Id>17273f26927e10909b73c67c18cb2547</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.074-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="17273f26927e10909b73c67c18cb2547" version="0">
                    <l7:name>Manage [Internal Debug Trace Policy] Policy (#fb3f1ba1a929b3396bcf367081130f1d)</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read, update and delete the {1} policy.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>POLICY</l7:entityType>
                    <l7:entityID>fb3f1ba1a929b3396bcf367081130f1d</l7:entityID>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Administrator</l7:Name>
            <l7:Id>0000000000000000ffffffffffffff9c</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.074-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000ffffffffffffff9c" version="1">
                    <l7:name>Administrator</l7:name>
                    <l7:description>Users assigned to the {0} role have full access to the gateway.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage Generic REST Service Template v3.29 Service (#63805bece54f5987d66ab52a849946f1)</l7:Name>
            <l7:Id>17273f26927e10909b73c67c18cb269e</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.074-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="17273f26927e10909b73c67c18cb269e" version="0">
                    <l7:name>Manage Generic REST Service Template v3.29 Service (#63805bece54f5987d66ab52a849946f1)</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read, update and delete the {1} service.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>SERVICE</l7:entityType>
                    <l7:entityID>63805bece54f5987d66ab52a849946f1</l7:entityID>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage Email Listeners</l7:Name>
            <l7:Id>0000000000000000fffffffffffffc7c</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.074-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000fffffffffffffc7c" version="0">
                    <l7:name>Manage Email Listeners</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read, create, update and delete email listeners.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Publish Webservices</l7:Name>
            <l7:Id>0000000000000000fffffffffffffea2</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.074-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000fffffffffffffea2" version="0">
                    <l7:name>Publish Webservices</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to publish new web services.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage System Policies Folder (#fb3f1ba1a929b3396bcf367081130d6b)</l7:Name>
            <l7:Id>17273f26927e10909b73c67c18cb23d8</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.075-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="17273f26927e10909b73c67c18cb23d8" version="0">
                    <l7:name>Manage System Policies Folder (#fb3f1ba1a929b3396bcf367081130d6b)</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to view, update and delete services and policies within the {1} folder.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>FOLDER</l7:entityType>
                    <l7:entityID>fb3f1ba1a929b3396bcf367081130d6b</l7:entityID>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage Firewall Rules</l7:Name>
            <l7:Id>0000000000000000fffffffffffffa88</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.075-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000fffffffffffffa88" version="0">
                    <l7:name>Manage Firewall Rules</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read, create, update and delete Firewall rules.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>FIREWALL_RULE</l7:entityType>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage Pre Service Global Policy Policy (#fb3f1ba1a929b3396bcf3670811315bf)</l7:Name>
            <l7:Id>17273f26927e10909b73c67c18cb2576</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.075-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="17273f26927e10909b73c67c18cb2576" version="0">
                    <l7:name>Manage Pre Service Global Policy Policy (#fb3f1ba1a929b3396bcf3670811315bf)</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read, update and delete the {1} policy.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>POLICY</l7:entityType>
                    <l7:entityID>fb3f1ba1a929b3396bcf3670811315bf</l7:entityID>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>View Template Backups Folder (#63805bece54f5987d66ab52a8499463b)</l7:Name>
            <l7:Id>17273f26927e10909b73c67c18cb24ed</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.075-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="17273f26927e10909b73c67c18cb24ed" version="0">
                    <l7:name>View Template Backups Folder (#63805bece54f5987d66ab52a8499463b)</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to view services and policies within the {1} folder.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>FOLDER</l7:entityType>
                    <l7:entityID>63805bece54f5987d66ab52a8499463b</l7:entityID>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage RBS DMZ Policy Policy (#fb3f1ba1a929b3396bcf36708113155e)</l7:Name>
            <l7:Id>17273f26927e10909b73c67c18cb2652</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.075-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="17273f26927e10909b73c67c18cb2652" version="0">
                    <l7:name>Manage RBS DMZ Policy Policy (#fb3f1ba1a929b3396bcf36708113155e)</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read, update and delete the {1} policy.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>POLICY</l7:entityType>
                    <l7:entityID>fb3f1ba1a929b3396bcf36708113155e</l7:entityID>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage SecurityServices Folder (#fb3f1ba1a929b3396bcf3670811314c5)</l7:Name>
            <l7:Id>17273f26927e10909b73c67c18cb2450</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.075-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="17273f26927e10909b73c67c18cb2450" version="0">
                    <l7:name>Manage SecurityServices Folder (#fb3f1ba1a929b3396bcf3670811314c5)</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to view, update and delete services and policies within the {1} folder.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>FOLDER</l7:entityType>
                    <l7:entityID>fb3f1ba1a929b3396bcf3670811314c5</l7:entityID>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage [Internal Audit Lookup Policy] Policy (#fb3f1ba1a929b3396bcf367081130e6a)</l7:Name>
            <l7:Id>17273f26927e10909b73c67c18cb2538</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.075-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="17273f26927e10909b73c67c18cb2538" version="0">
                    <l7:name>Manage [Internal Audit Lookup Policy] Policy (#fb3f1ba1a929b3396bcf367081130e6a)</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read, update and delete the {1} policy.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>POLICY</l7:entityType>
                    <l7:entityID>fb3f1ba1a929b3396bcf367081130e6a</l7:entityID>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage Listen Ports</l7:Name>
            <l7:Id>0000000000000000fffffffffffffd12</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.075-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000fffffffffffffd12" version="0">
                    <l7:name>Manage Listen Ports</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read, create, update and delete Gateway listen ports (HTTP(S) and FTP(S)) and to list published services.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage System Statistics Service (#bccde94fe646e21c4ff13b641cb5a0e1)</l7:Name>
            <l7:Id>17273f26927e10909b73c67c18cb25cf</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.075-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="17273f26927e10909b73c67c18cb25cf" version="0">
                    <l7:name>Manage System Statistics Service (#bccde94fe646e21c4ff13b641cb5a0e1)</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read, update and delete the {1} service.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>SERVICE</l7:entityType>
                    <l7:entityID>bccde94fe646e21c4ff13b641cb5a0e1</l7:entityID>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage eCommerce Checks Folder (#fb3f1ba1a929b3396bcf36708113137e)</l7:Name>
            <l7:Id>17273f26927e10909b73c67c18cb2414</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.075-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="17273f26927e10909b73c67c18cb2414" version="0">
                    <l7:name>Manage eCommerce Checks Folder (#fb3f1ba1a929b3396bcf36708113137e)</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to view, update and delete services and policies within the {1} folder.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>FOLDER</l7:entityType>
                    <l7:entityID>fb3f1ba1a929b3396bcf36708113137e</l7:entityID>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage Log Sinks</l7:Name>
            <l7:Id>0000000000000000fffffffffffffce0</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.075-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000fffffffffffffce0" version="0">
                    <l7:name>Manage Log Sinks</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read, create, update and delete log sinks.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage Shared Policies Folder (#fb3f1ba1a929b3396bcf367081131506)</l7:Name>
            <l7:Id>17273f26927e10909b73c67c18cb248c</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.076-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="17273f26927e10909b73c67c18cb248c" version="0">
                    <l7:name>Manage Shared Policies Folder (#fb3f1ba1a929b3396bcf367081131506)</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to view, update and delete services and policies within the {1} folder.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>FOLDER</l7:entityType>
                    <l7:entityID>fb3f1ba1a929b3396bcf367081131506</l7:entityID>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage Private Keys</l7:Name>
            <l7:Id>0000000000000000fffffffffffffbb4</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.076-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000fffffffffffffbb4" version="1">
                    <l7:name>Manage Private Keys</l7:name>
                    <l7:description>Users in this role have the ability to read, create, update, and delete private keys, as well as the ability to change the designated special-purpose keys (eg, the SSL or CA key).</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Search Users and Groups</l7:Name>
            <l7:Id>0000000000000000fffffffffffffed4</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.076-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000fffffffffffffed4" version="0">
                    <l7:name>Search Users and Groups</l7:name>
                    <l7:description>Users assigned to the {0} role have permission to search and view users and groups in all identity providers.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>View eCommerce Checks Folder (#fb3f1ba1a929b3396bcf36708113137e)</l7:Name>
            <l7:Id>17273f26927e10909b73c67c18cb23fd</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.076-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="17273f26927e10909b73c67c18cb23fd" version="0">
                    <l7:name>View eCommerce Checks Folder (#fb3f1ba1a929b3396bcf36708113137e)</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to view services and policies within the {1} folder.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>FOLDER</l7:entityType>
                    <l7:entityID>fb3f1ba1a929b3396bcf36708113137e</l7:entityID>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage Webservices</l7:Name>
            <l7:Id>0000000000000000fffffffffffffe70</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.076-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000fffffffffffffe70" version="1">
                    <l7:name>Manage Webservices</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to publish new services and edit existing ones.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage Message Received Global Policy Policy (#fb3f1ba1a929b3396bcf367081131590)</l7:Name>
            <l7:Id>17273f26927e10909b73c67c18cb2565</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.076-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="17273f26927e10909b73c67c18cb2565" version="0">
                    <l7:name>Manage Message Received Global Policy Policy (#fb3f1ba1a929b3396bcf367081131590)</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read, update and delete the {1} policy.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>POLICY</l7:entityType>
                    <l7:entityID>fb3f1ba1a929b3396bcf367081131590</l7:entityID>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Invoke Audit Viewer Policy</l7:Name>
            <l7:Id>0000000000000000fffffffffffffb50</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.076-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000fffffffffffffb50" version="0">
                    <l7:name>Invoke Audit Viewer Policy</l7:name>
                    <l7:description>Allow the INTERNAL audit-viewer policy to be invoked for an audited message (request / response or detail)</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage Scheduled Task</l7:Name>
            <l7:Id>0000000000000000fffffffffffff92a</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.076-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000fffffffffffff92a" version="0">
                    <l7:name>Manage Scheduled Task</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read, create, update and delete Scheduled Task.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>SCHEDULED_TASK</l7:entityType>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage [Internal Audit Sink Policy] Policy (#fb3f1ba1a929b3396bcf367081130e57)</l7:Name>
            <l7:Id>17273f26927e10909b73c67c18cb2529</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.076-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="17273f26927e10909b73c67c18cb2529" version="0">
                    <l7:name>Manage [Internal Audit Sink Policy] Policy (#fb3f1ba1a929b3396bcf367081130e57)</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read, update and delete the {1} policy.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>POLICY</l7:entityType>
                    <l7:entityID>fb3f1ba1a929b3396bcf367081130e57</l7:entityID>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage Cluster Properties</l7:Name>
            <l7:Id>0000000000000000fffffffffffffd44</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.076-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000fffffffffffffd44" version="0">
                    <l7:name>Manage Cluster Properties</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read, create, update and delete cluster properties.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage Customize Error Message Policy (#fb3f1ba1a929b3396bcf367081131545)</l7:Name>
            <l7:Id>17273f26927e10909b73c67c18cb2643</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.076-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="17273f26927e10909b73c67c18cb2643" version="0">
                    <l7:name>Manage Customize Error Message Policy (#fb3f1ba1a929b3396bcf367081131545)</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read, update and delete the {1} policy.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>POLICY</l7:entityType>
                    <l7:entityID>fb3f1ba1a929b3396bcf367081131545</l7:entityID>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Manage CA Single Sign-On Configuration</l7:Name>
            <l7:Id>0000000000000000fffffffffffffa24</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.076-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000fffffffffffffa24" version="0">
                    <l7:name>Manage CA Single Sign-On Configuration</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to read, create, update and delete CA Single Sign-On configuration.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>SITEMINDER_CONFIGURATION</l7:entityType>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>View Service templates Folder (#fb3f1ba1a929b3396bcf367081131690)</l7:Name>
            <l7:Id>17273f26927e10909b73c67c18cb24b1</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.077-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="17273f26927e10909b73c67c18cb24b1" version="0">
                    <l7:name>View Service templates Folder (#fb3f1ba1a929b3396bcf367081131690)</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to view services and policies within the {1} folder.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                    <l7:entityType>FOLDER</l7:entityType>
                    <l7:entityID>fb3f1ba1a929b3396bcf367081131690</l7:entityID>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Publish External Identity Providers</l7:Name>
            <l7:Id>0000000000000000ffffffffffffff06</l7:Id>
            <l7:Type>RBAC_ROLE</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.077-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Role id="0000000000000000ffffffffffffff06" version="0">
                    <l7:name>Publish External Identity Providers</l7:name>
                    <l7:description>Users assigned to the {0} role have the ability to create new external identity providers.</l7:description>
                    <l7:userCreated>false</l7:userCreated>
                    <l7:assignments/>
                </l7:Role>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>http://www.w3.org/2001/XMLSchema.dtd</l7:Name>
            <l7:Id>0000000000000000fffffffffffffff9</l7:Id>
            <l7:Type>RESOURCE_ENTRY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.085-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ResourceDocument id="0000000000000000fffffffffffffff9" version="0">
                    <l7:Resource sourceUrl="http://www.w3.org/2001/XMLSchema.dtd" type="dtd">&lt;!-- DTD for XML Schemas: Part 1: Structures
     Public Identifier: "-//W3C//DTD XMLSCHEMA 200102//EN"
     Official Location: http://www.w3.org/2001/XMLSchema.dtd --&gt;
&lt;!-- $Id: XMLSchema.dtd,v 1.31 2001/10/24 15:50:16 ht Exp $ --&gt;
&lt;!-- Note this DTD is NOT normative, or even definitive. --&gt;           &lt;!--d--&gt;
&lt;!-- prose copy in the structures REC is the definitive version --&gt;    &lt;!--d--&gt;
&lt;!-- (which shouldn't differ from this one except for this --&gt;         &lt;!--d--&gt;
&lt;!-- comment and entity expansions, but just in case) --&gt;              &lt;!--d--&gt;
&lt;!-- With the exception of cases with multiple namespace
     prefixes for the XML Schema namespace, any XML document which is
     not valid per this DTD given redefinitions in its internal subset of the
     'p' and 's' parameter entities below appropriate to its namespace
     declaration of the XML Schema namespace is almost certainly not
     a valid schema. --&gt;

&lt;!-- The simpleType element and its constituent parts
     are defined in XML Schema: Part 2: Datatypes --&gt;
&lt;!ENTITY % xs-datatypes PUBLIC 'datatypes' 'datatypes.dtd' &gt;

&lt;!ENTITY % p 'xs:'&gt; &lt;!-- can be overriden in the internal subset of a
                         schema document to establish a different
                         namespace prefix --&gt;
&lt;!ENTITY % s ':xs'&gt; &lt;!-- if %p is defined (e.g. as foo:) then you must
                         also define %s as the suffix for the appropriate
                         namespace declaration (e.g. :foo) --&gt;
&lt;!ENTITY % nds 'xmlns%s;'&gt;

&lt;!-- Define all the element names, with optional prefix --&gt;
&lt;!ENTITY % schema "%p;schema"&gt;
&lt;!ENTITY % complexType "%p;complexType"&gt;
&lt;!ENTITY % complexContent "%p;complexContent"&gt;
&lt;!ENTITY % simpleContent "%p;simpleContent"&gt;
&lt;!ENTITY % extension "%p;extension"&gt;
&lt;!ENTITY % element "%p;element"&gt;
&lt;!ENTITY % unique "%p;unique"&gt;
&lt;!ENTITY % key "%p;key"&gt;
&lt;!ENTITY % keyref "%p;keyref"&gt;
&lt;!ENTITY % selector "%p;selector"&gt;
&lt;!ENTITY % field "%p;field"&gt;
&lt;!ENTITY % group "%p;group"&gt;
&lt;!ENTITY % all "%p;all"&gt;
&lt;!ENTITY % choice "%p;choice"&gt;
&lt;!ENTITY % sequence "%p;sequence"&gt;
&lt;!ENTITY % any "%p;any"&gt;
&lt;!ENTITY % anyAttribute "%p;anyAttribute"&gt;
&lt;!ENTITY % attribute "%p;attribute"&gt;
&lt;!ENTITY % attributeGroup "%p;attributeGroup"&gt;
&lt;!ENTITY % include "%p;include"&gt;
&lt;!ENTITY % import "%p;import"&gt;
&lt;!ENTITY % redefine "%p;redefine"&gt;
&lt;!ENTITY % notation "%p;notation"&gt;

&lt;!-- annotation elements --&gt;
&lt;!ENTITY % annotation "%p;annotation"&gt;
&lt;!ENTITY % appinfo "%p;appinfo"&gt;
&lt;!ENTITY % documentation "%p;documentation"&gt;

&lt;!-- Customisation entities for the ATTLIST of each element type.
     Define one of these if your schema takes advantage of the
     anyAttribute='##other' in the schema for schemas --&gt;

&lt;!ENTITY % schemaAttrs ''&gt;
&lt;!ENTITY % complexTypeAttrs ''&gt;
&lt;!ENTITY % complexContentAttrs ''&gt;
&lt;!ENTITY % simpleContentAttrs ''&gt;
&lt;!ENTITY % extensionAttrs ''&gt;
&lt;!ENTITY % elementAttrs ''&gt;
&lt;!ENTITY % groupAttrs ''&gt;
&lt;!ENTITY % allAttrs ''&gt;
&lt;!ENTITY % choiceAttrs ''&gt;
&lt;!ENTITY % sequenceAttrs ''&gt;
&lt;!ENTITY % anyAttrs ''&gt;
&lt;!ENTITY % anyAttributeAttrs ''&gt;
&lt;!ENTITY % attributeAttrs ''&gt;
&lt;!ENTITY % attributeGroupAttrs ''&gt;
&lt;!ENTITY % uniqueAttrs ''&gt;
&lt;!ENTITY % keyAttrs ''&gt;
&lt;!ENTITY % keyrefAttrs ''&gt;
&lt;!ENTITY % selectorAttrs ''&gt;
&lt;!ENTITY % fieldAttrs ''&gt;
&lt;!ENTITY % includeAttrs ''&gt;
&lt;!ENTITY % importAttrs ''&gt;
&lt;!ENTITY % redefineAttrs ''&gt;
&lt;!ENTITY % notationAttrs ''&gt;
&lt;!ENTITY % annotationAttrs ''&gt;
&lt;!ENTITY % appinfoAttrs ''&gt;
&lt;!ENTITY % documentationAttrs ''&gt;

&lt;!ENTITY % complexDerivationSet "CDATA"&gt;
      &lt;!-- #all or space-separated list drawn from derivationChoice --&gt;
&lt;!ENTITY % blockSet "CDATA"&gt;
      &lt;!-- #all or space-separated list drawn from
                      derivationChoice + 'substitution' --&gt;

&lt;!ENTITY % mgs '%all; | %choice; | %sequence;'&gt;
&lt;!ENTITY % cs '%choice; | %sequence;'&gt;
&lt;!ENTITY % formValues '(qualified|unqualified)'&gt;


&lt;!ENTITY % attrDecls    '((%attribute;| %attributeGroup;)*,(%anyAttribute;)?)'&gt;

&lt;!ENTITY % particleAndAttrs '((%mgs; | %group;)?, %attrDecls;)'&gt;

&lt;!-- This is used in part2 --&gt;
&lt;!ENTITY % restriction1 '((%mgs; | %group;)?)'&gt;

%xs-datatypes;

&lt;!-- the duplication below is to produce an unambiguous content model
     which allows annotation everywhere --&gt;
&lt;!ELEMENT %schema; ((%include; | %import; | %redefine; | %annotation;)*,
                    ((%simpleType; | %complexType;
                      | %element; | %attribute;
                      | %attributeGroup; | %group;
                      | %notation; ),
                     (%annotation;)*)* )&gt;
&lt;!ATTLIST %schema;
   targetNamespace      %URIref;               #IMPLIED
   version              CDATA                  #IMPLIED
   %nds;                %URIref;               #FIXED 'http://www.w3.org/2001/XMLSchema'
   xmlns                CDATA                  #IMPLIED
   finalDefault         %complexDerivationSet; ''
   blockDefault         %blockSet;             ''
   id                   ID                     #IMPLIED
   elementFormDefault   %formValues;           'unqualified'
   attributeFormDefault %formValues;           'unqualified'
   xml:lang             CDATA                  #IMPLIED
   %schemaAttrs;&gt;
&lt;!-- Note the xmlns declaration is NOT in the Schema for Schemas,
     because at the Infoset level where schemas operate,
     xmlns(:prefix) is NOT an attribute! --&gt;
&lt;!-- The declaration of xmlns is a convenience for schema authors --&gt;
 
&lt;!-- The id attribute here and below is for use in external references
     from non-schemas using simple fragment identifiers.
     It is NOT used for schema-to-schema reference, internal or
     external. --&gt;

&lt;!-- a type is a named content type specification which allows attribute
     declarations--&gt;
&lt;!-- --&gt;

&lt;!ELEMENT %complexType; ((%annotation;)?,
                         (%simpleContent;|%complexContent;|
                          %particleAndAttrs;))&gt;

&lt;!ATTLIST %complexType;
          name      %NCName;                        #IMPLIED
          id        ID                              #IMPLIED
          abstract  %boolean;                       #IMPLIED
          final     %complexDerivationSet;          #IMPLIED
          block     %complexDerivationSet;          #IMPLIED
          mixed (true|false) 'false'
          %complexTypeAttrs;&gt;

&lt;!-- particleAndAttrs is shorthand for a root type --&gt;
&lt;!-- mixed is disallowed if simpleContent, overriden if complexContent
     has one too. --&gt;

&lt;!-- If anyAttribute appears in one or more referenced attributeGroups
     and/or explicitly, the intersection of the permissions is used --&gt;

&lt;!ELEMENT %complexContent; ((%annotation;)?, (%restriction;|%extension;))&gt;
&lt;!ATTLIST %complexContent;
          mixed (true|false) #IMPLIED
          id    ID           #IMPLIED
          %complexContentAttrs;&gt;

&lt;!-- restriction should use the branch defined above, not the simple
     one from part2; extension should use the full model  --&gt;

&lt;!ELEMENT %simpleContent; ((%annotation;)?, (%restriction;|%extension;))&gt;
&lt;!ATTLIST %simpleContent;
          id    ID           #IMPLIED
          %simpleContentAttrs;&gt;

&lt;!-- restriction should use the simple branch from part2, not the 
     one defined above; extension should have no particle  --&gt;

&lt;!ELEMENT %extension; ((%annotation;)?, (%particleAndAttrs;))&gt;
&lt;!ATTLIST %extension;
          base  %QName;      #REQUIRED
          id    ID           #IMPLIED
          %extensionAttrs;&gt;

&lt;!-- an element is declared by either:
 a name and a type (either nested or referenced via the type attribute)
 or a ref to an existing element declaration --&gt;

&lt;!ELEMENT %element; ((%annotation;)?, (%complexType;| %simpleType;)?,
                     (%unique; | %key; | %keyref;)*)&gt;
&lt;!-- simpleType or complexType only if no type|ref attribute --&gt;
&lt;!-- ref not allowed at top level --&gt;
&lt;!ATTLIST %element;
            name               %NCName;               #IMPLIED
            id                 ID                     #IMPLIED
            ref                %QName;                #IMPLIED
            type               %QName;                #IMPLIED
            minOccurs          %nonNegativeInteger;   #IMPLIED
            maxOccurs          CDATA                  #IMPLIED
            nillable           %boolean;              #IMPLIED
            substitutionGroup  %QName;                #IMPLIED
            abstract           %boolean;              #IMPLIED
            final              %complexDerivationSet; #IMPLIED
            block              %blockSet;             #IMPLIED
            default            CDATA                  #IMPLIED
            fixed              CDATA                  #IMPLIED
            form               %formValues;           #IMPLIED
            %elementAttrs;&gt;
&lt;!-- type and ref are mutually exclusive.
     name and ref are mutually exclusive, one is required --&gt;
&lt;!-- In the absence of type AND ref, type defaults to type of
     substitutionGroup, if any, else the ur-type, i.e. unconstrained --&gt;
&lt;!-- default and fixed are mutually exclusive --&gt;

&lt;!ELEMENT %group; ((%annotation;)?,(%mgs;)?)&gt;
&lt;!ATTLIST %group; 
          name        %NCName;               #IMPLIED
          ref         %QName;                #IMPLIED
          minOccurs   %nonNegativeInteger;   #IMPLIED
          maxOccurs   CDATA                  #IMPLIED
          id          ID                     #IMPLIED
          %groupAttrs;&gt;

&lt;!ELEMENT %all; ((%annotation;)?, (%element;)*)&gt;
&lt;!ATTLIST %all;
          minOccurs   (1)                    #IMPLIED
          maxOccurs   (1)                    #IMPLIED
          id          ID                     #IMPLIED
          %allAttrs;&gt;

&lt;!ELEMENT %choice; ((%annotation;)?, (%element;| %group;| %cs; | %any;)*)&gt;
&lt;!ATTLIST %choice;
          minOccurs   %nonNegativeInteger;   #IMPLIED
          maxOccurs   CDATA                  #IMPLIED
          id          ID                     #IMPLIED
          %choiceAttrs;&gt;

&lt;!ELEMENT %sequence; ((%annotation;)?, (%element;| %group;| %cs; | %any;)*)&gt;
&lt;!ATTLIST %sequence;
          minOccurs   %nonNegativeInteger;   #IMPLIED
          maxOccurs   CDATA                  #IMPLIED
          id          ID                     #IMPLIED
          %sequenceAttrs;&gt;

&lt;!-- an anonymous grouping in a model, or
     a top-level named group definition, or a reference to same --&gt;

&lt;!-- Note that if order is 'all', group is not allowed inside.
     If order is 'all' THIS group must be alone (or referenced alone) at
     the top level of a content model --&gt;
&lt;!-- If order is 'all', minOccurs==maxOccurs==1 on element/any inside --&gt;
&lt;!-- Should allow minOccurs=0 inside order='all' . . . --&gt;

&lt;!ELEMENT %any; (%annotation;)?&gt;
&lt;!ATTLIST %any;
            namespace       CDATA                  '##any'
            processContents (skip|lax|strict)      'strict'
            minOccurs       %nonNegativeInteger;   '1'
            maxOccurs       CDATA                  '1'
            id              ID                     #IMPLIED
            %anyAttrs;&gt;

&lt;!-- namespace is interpreted as follows:
                  ##any      - - any non-conflicting WFXML at all

                  ##other    - - any non-conflicting WFXML from namespace other
                                  than targetNamespace

                  ##local    - - any unqualified non-conflicting WFXML/attribute
                  one or     - - any non-conflicting WFXML from
                  more URI        the listed namespaces
                  references

                  ##targetNamespace ##local may appear in the above list,
                    with the obvious meaning --&gt;

&lt;!ELEMENT %anyAttribute; (%annotation;)?&gt;
&lt;!ATTLIST %anyAttribute;
            namespace       CDATA              '##any'
            processContents (skip|lax|strict)  'strict'
            id              ID                 #IMPLIED
            %anyAttributeAttrs;&gt;
&lt;!-- namespace is interpreted as for 'any' above --&gt;

&lt;!-- simpleType only if no type|ref attribute --&gt;
&lt;!-- ref not allowed at top level, name iff at top level --&gt;
&lt;!ELEMENT %attribute; ((%annotation;)?, (%simpleType;)?)&gt;
&lt;!ATTLIST %attribute;
          name      %NCName;      #IMPLIED
          id        ID            #IMPLIED
          ref       %QName;       #IMPLIED
          type      %QName;       #IMPLIED
          use       (prohibited|optional|required) #IMPLIED
          default   CDATA         #IMPLIED
          fixed     CDATA         #IMPLIED
          form      %formValues;  #IMPLIED
          %attributeAttrs;&gt;
&lt;!-- type and ref are mutually exclusive.
     name and ref are mutually exclusive, one is required --&gt;
&lt;!-- default for use is optional when nested, none otherwise --&gt;
&lt;!-- default and fixed are mutually exclusive --&gt;
&lt;!-- type attr and simpleType content are mutually exclusive --&gt;

&lt;!-- an attributeGroup is a named collection of attribute decls, or a
     reference thereto --&gt;
&lt;!ELEMENT %attributeGroup; ((%annotation;)?,
                       (%attribute; | %attributeGroup;)*,
                       (%anyAttribute;)?) &gt;
&lt;!ATTLIST %attributeGroup;
                 name       %NCName;       #IMPLIED
                 id         ID             #IMPLIED
                 ref        %QName;        #IMPLIED
                 %attributeGroupAttrs;&gt;

&lt;!-- ref iff no content, no name.  ref iff not top level --&gt;

&lt;!-- better reference mechanisms --&gt;
&lt;!ELEMENT %unique; ((%annotation;)?, %selector;, (%field;)+)&gt;
&lt;!ATTLIST %unique;
          name     %NCName;       #REQUIRED
	  id       ID             #IMPLIED
	  %uniqueAttrs;&gt;

&lt;!ELEMENT %key;    ((%annotation;)?, %selector;, (%field;)+)&gt;
&lt;!ATTLIST %key;
          name     %NCName;       #REQUIRED
	  id       ID             #IMPLIED
	  %keyAttrs;&gt;

&lt;!ELEMENT %keyref; ((%annotation;)?, %selector;, (%field;)+)&gt;
&lt;!ATTLIST %keyref;
          name     %NCName;       #REQUIRED
	  refer    %QName;        #REQUIRED
	  id       ID             #IMPLIED
	  %keyrefAttrs;&gt;

&lt;!ELEMENT %selector; ((%annotation;)?)&gt;
&lt;!ATTLIST %selector;
          xpath %XPathExpr; #REQUIRED
          id    ID          #IMPLIED
          %selectorAttrs;&gt;
&lt;!ELEMENT %field; ((%annotation;)?)&gt;
&lt;!ATTLIST %field;
          xpath %XPathExpr; #REQUIRED
          id    ID          #IMPLIED
          %fieldAttrs;&gt;

&lt;!-- Schema combination mechanisms --&gt;
&lt;!ELEMENT %include; (%annotation;)?&gt;
&lt;!ATTLIST %include;
          schemaLocation %URIref; #REQUIRED
          id             ID       #IMPLIED
          %includeAttrs;&gt;

&lt;!ELEMENT %import; (%annotation;)?&gt;
&lt;!ATTLIST %import;
          namespace      %URIref; #IMPLIED
          schemaLocation %URIref; #IMPLIED
          id             ID       #IMPLIED
          %importAttrs;&gt;

&lt;!ELEMENT %redefine; (%annotation; | %simpleType; | %complexType; |
                      %attributeGroup; | %group;)*&gt;
&lt;!ATTLIST %redefine;
          schemaLocation %URIref; #REQUIRED
          id             ID       #IMPLIED
          %redefineAttrs;&gt;

&lt;!ELEMENT %notation; (%annotation;)?&gt;
&lt;!ATTLIST %notation;
	  name        %NCName;    #REQUIRED
	  id          ID          #IMPLIED
	  public      CDATA       #REQUIRED
	  system      %URIref;    #IMPLIED
	  %notationAttrs;&gt;

&lt;!-- Annotation is either application information or documentation --&gt;
&lt;!-- By having these here they are available for datatypes as well
     as all the structures elements --&gt;

&lt;!ELEMENT %annotation; (%appinfo; | %documentation;)*&gt;
&lt;!ATTLIST %annotation; %annotationAttrs;&gt;

&lt;!-- User must define annotation elements in internal subset for this
     to work --&gt;
&lt;!ELEMENT %appinfo; ANY&gt;   &lt;!-- too restrictive --&gt;
&lt;!ATTLIST %appinfo;
          source     %URIref;      #IMPLIED
          id         ID         #IMPLIED
          %appinfoAttrs;&gt;
&lt;!ELEMENT %documentation; ANY&gt;   &lt;!-- too restrictive --&gt;
&lt;!ATTLIST %documentation;
          source     %URIref;   #IMPLIED
          id         ID         #IMPLIED
          xml:lang   CDATA      #IMPLIED
          %documentationAttrs;&gt;

&lt;!NOTATION XMLSchemaStructures PUBLIC
           'structures' 'http://www.w3.org/2001/XMLSchema.xsd' &gt;
&lt;!NOTATION XML PUBLIC
           'REC-xml-1998-0210' 'http://www.w3.org/TR/1998/REC-xml-19980210' &gt;
</l7:Resource>
                    <l7:Properties>
                        <l7:Property key="publicIdentifier">
                            <l7:StringValue>-//W3C//DTD XMLSCHEMA 200102//EN</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:ResourceDocument>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>http://www.w3.org/2003/05/soap-envelope/</l7:Name>
            <l7:Id>0000000000000000fffffffffffffffc</l7:Id>
            <l7:Type>RESOURCE_ENTRY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.088-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ResourceDocument id="0000000000000000fffffffffffffffc" version="0">
                    <l7:Resource sourceUrl="http://www.w3.org/2003/05/soap-envelope/" type="xmlschema">&lt;?xml version='1.0'?&gt;
&lt;!-- Schema defined in the SOAP Version 1.2 Part 1 specification
     Recommendation:
     http://www.w3.org/TR/2003/REC-soap12-part1-20030624/

     Copyright (C)2003 W3C(R) (MIT, ERCIM, Keio), All Rights Reserved.
     W3C viability, trademark, document use and software licensing rules
     apply.
     http://www.w3.org/Consortium/Legal/

     This document is governed by the W3C Software License [1] as
     described in the FAQ [2].

     [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
     [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD
--&gt;

&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:tns="http://www.w3.org/2003/05/soap-envelope"
           targetNamespace="http://www.w3.org/2003/05/soap-envelope" 
		   elementFormDefault="qualified" &gt;

  &lt;xs:import namespace="http://www.w3.org/XML/1998/namespace" 
             schemaLocation="http://www.w3.org/2001/xml.xsd"/&gt;

  &lt;!-- Envelope, header and body --&gt;
  &lt;xs:element name="Envelope" type="tns:Envelope" /&gt;
  &lt;xs:complexType name="Envelope" &gt;
    &lt;xs:sequence&gt;
      &lt;xs:element ref="tns:Header" minOccurs="0" /&gt;
      &lt;xs:element ref="tns:Body" minOccurs="1" /&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:anyAttribute namespace="##other" processContents="lax" /&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:element name="Header" type="tns:Header" /&gt;
  &lt;xs:complexType name="Header" &gt;
    &lt;xs:annotation&gt;
	  &lt;xs:documentation&gt;
	  Elements replacing the wildcard MUST be namespace qualified, but can be in the targetNamespace
	  &lt;/xs:documentation&gt;
	&lt;/xs:annotation&gt;
    &lt;xs:sequence&gt;
      &lt;xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"  /&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:anyAttribute namespace="##other" processContents="lax" /&gt;
  &lt;/xs:complexType&gt;
  
  &lt;xs:element name="Body" type="tns:Body" /&gt;
  &lt;xs:complexType name="Body" &gt;
    &lt;xs:sequence&gt;
      &lt;xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded" /&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:anyAttribute namespace="##other" processContents="lax" /&gt;
  &lt;/xs:complexType&gt;

  &lt;!-- Global Attributes.  The following attributes are intended to be
  usable via qualified attribute names on any complex type referencing
  them.  --&gt;
  &lt;xs:attribute name="mustUnderstand" type="xs:boolean" default="0" /&gt;
  &lt;xs:attribute name="relay" type="xs:boolean" default="0" /&gt;
  &lt;xs:attribute name="role" type="xs:anyURI" /&gt;

  &lt;!-- 'encodingStyle' indicates any canonicalization conventions
  followed in the contents of the containing element.  For example, the
  value 'http://www.w3.org/2003/05/soap-encoding' indicates the pattern
  described in the SOAP Version 1.2 Part 2: Adjuncts Recommendation --&gt;

  &lt;xs:attribute name="encodingStyle" type="xs:anyURI" /&gt;

  &lt;xs:element name="Fault" type="tns:Fault" /&gt;
  &lt;xs:complexType name="Fault" final="extension" &gt;
    &lt;xs:annotation&gt;
	  &lt;xs:documentation&gt;
	    Fault reporting structure
	  &lt;/xs:documentation&gt;
	&lt;/xs:annotation&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="Code" type="tns:faultcode" /&gt;
      &lt;xs:element name="Reason" type="tns:faultreason" /&gt;
      &lt;xs:element name="Node" type="xs:anyURI" minOccurs="0" /&gt;
	  &lt;xs:element name="Role" type="xs:anyURI" minOccurs="0" /&gt;
      &lt;xs:element name="Detail" type="tns:detail" minOccurs="0" /&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:complexType name="faultreason" &gt;
    &lt;xs:sequence&gt;
	  &lt;xs:element name="Text" type="tns:reasontext" 
                  minOccurs="1"  maxOccurs="unbounded" /&gt;
	&lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:complexType name="reasontext" &gt;
    &lt;xs:simpleContent&gt;
	  &lt;xs:extension base="xs:string" &gt;
	    &lt;xs:attribute ref="xml:lang" use="required" /&gt;
	  &lt;/xs:extension&gt;
	&lt;/xs:simpleContent&gt;
  &lt;/xs:complexType&gt;
  
  &lt;xs:complexType name="faultcode"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="Value"
                  type="tns:faultcodeEnum"/&gt;
      &lt;xs:element name="Subcode"
                  type="tns:subcode"
                  minOccurs="0"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:simpleType name="faultcodeEnum"&gt;
    &lt;xs:restriction base="xs:QName"&gt;
      &lt;xs:enumeration value="tns:DataEncodingUnknown"/&gt;
      &lt;xs:enumeration value="tns:MustUnderstand"/&gt;
      &lt;xs:enumeration value="tns:Receiver"/&gt;
      &lt;xs:enumeration value="tns:Sender"/&gt;
      &lt;xs:enumeration value="tns:VersionMismatch"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;

  &lt;xs:complexType name="subcode"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="Value"
                  type="xs:QName"/&gt;
      &lt;xs:element name="Subcode"
                  type="tns:subcode"
                  minOccurs="0"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:complexType name="detail"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"  /&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:anyAttribute namespace="##other" processContents="lax" /&gt; 
  &lt;/xs:complexType&gt;

  &lt;!-- Global element declaration and complex type definition for header entry returned due to a mustUnderstand fault --&gt;
  &lt;xs:element name="NotUnderstood" type="tns:NotUnderstoodType" /&gt;
  &lt;xs:complexType name="NotUnderstoodType" &gt;
    &lt;xs:attribute name="qname" type="xs:QName" use="required" /&gt;
  &lt;/xs:complexType&gt;


  &lt;!-- Global element and associated types for managing version transition as described in Appendix A of the SOAP Version 1.2 Part 1 Recommendation  --&gt;  &lt;xs:complexType name="SupportedEnvType" &gt;
    &lt;xs:attribute name="qname" type="xs:QName" use="required" /&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:element name="Upgrade" type="tns:UpgradeType" /&gt;
  &lt;xs:complexType name="UpgradeType" &gt;
    &lt;xs:sequence&gt;
	  &lt;xs:element name="SupportedEnvelope" type="tns:SupportedEnvType" minOccurs="1" maxOccurs="unbounded" /&gt;
	&lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;


&lt;/xs:schema&gt;</l7:Resource>
                    <l7:Properties>
                        <l7:Property key="targetNamespace">
                            <l7:StringValue>http://www.w3.org/2003/05/soap-envelope</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:ResourceDocument>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>http://schemas.xmlsoap.org/soap/envelope/</l7:Name>
            <l7:Id>0000000000000000fffffffffffffffd</l7:Id>
            <l7:Type>RESOURCE_ENTRY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.088-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ResourceDocument id="0000000000000000fffffffffffffffd" version="0">
                    <l7:Resource sourceUrl="http://schemas.xmlsoap.org/soap/envelope/" type="xmlschema">&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:tns="http://schemas.xmlsoap.org/soap/envelope/"
           targetNamespace="http://schemas.xmlsoap.org/soap/envelope/" &gt;
  &lt;!-- Envelope, header and body --&gt;
  &lt;xs:element name="Envelope" type="tns:Envelope" /&gt;
  &lt;xs:complexType name="Envelope" &gt;
    &lt;xs:sequence&gt;
      &lt;xs:element ref="tns:Header" minOccurs="0" /&gt;
      &lt;xs:element ref="tns:Body" minOccurs="1" /&gt;
      &lt;xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded" processContents="lax" /&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:anyAttribute namespace="##other" processContents="lax" /&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:element name="Header" type="tns:Header" /&gt;
  &lt;xs:complexType name="Header" &gt;
    &lt;xs:sequence&gt;
      &lt;xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded" processContents="lax" /&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:anyAttribute namespace="##other" processContents="lax" /&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:element name="Body" type="tns:Body" /&gt;
  &lt;xs:complexType name="Body" &gt;
    &lt;xs:sequence&gt;
      &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax" /&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:anyAttribute namespace="##any" processContents="lax" &gt;
          &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
                  Prose in the spec does not specify that attributes are allowed on the Body element
                &lt;/xs:documentation&gt;
          &lt;/xs:annotation&gt;
        &lt;/xs:anyAttribute&gt;
  &lt;/xs:complexType&gt;
  &lt;!-- Global Attributes.  The following attributes are intended to be usable via qualified attribute names on any complex type referencing them.  --&gt;
  &lt;xs:attribute name="mustUnderstand" &gt;
     &lt;xs:simpleType&gt;
     &lt;xs:restriction base='xs:boolean'&gt;
           &lt;xs:pattern value='0|1' /&gt;
         &lt;/xs:restriction&gt;
   &lt;/xs:simpleType&gt;
  &lt;/xs:attribute&gt;
  &lt;xs:attribute name="actor" type="xs:anyURI" /&gt;
  &lt;xs:simpleType name="encodingStyle" &gt;
    &lt;xs:annotation&gt;
          &lt;xs:documentation&gt;
            'encodingStyle' indicates any canonicalization conventions followed in the contents of the containing element.  For example, the value 'http://schemas.xmlsoap.org/soap/encoding/' indicates the pattern described in SOAP specification
          &lt;/xs:documentation&gt;
        &lt;/xs:annotation&gt;
    &lt;xs:list itemType="xs:anyURI" /&gt;
  &lt;/xs:simpleType&gt;
  &lt;xs:attribute name="encodingStyle" type="tns:encodingStyle" /&gt;
  &lt;xs:attributeGroup name="encodingStyle" &gt;
    &lt;xs:attribute ref="tns:encodingStyle" /&gt;
  &lt;/xs:attributeGroup&gt;  &lt;xs:element name="Fault" type="tns:Fault" /&gt;
  &lt;xs:complexType name="Fault" final="extension" &gt;
    &lt;xs:annotation&gt;
          &lt;xs:documentation&gt;
            Fault reporting structure
          &lt;/xs:documentation&gt;
        &lt;/xs:annotation&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="faultcode" type="xs:QName" /&gt;
      &lt;xs:element name="faultstring" type="xs:string" /&gt;
      &lt;xs:element name="faultactor" type="xs:anyURI" minOccurs="0" /&gt;
      &lt;xs:element name="detail" type="tns:detail" minOccurs="0" /&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="detail"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax" /&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:anyAttribute namespace="##any" processContents="lax" /&gt;
  &lt;/xs:complexType&gt;
&lt;/xs:schema&gt;</l7:Resource>
                    <l7:Properties>
                        <l7:Property key="targetNamespace">
                            <l7:StringValue>http://schemas.xmlsoap.org/soap/envelope/</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:ResourceDocument>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>http://www.w3.org/2001/datatypes.dtd</l7:Name>
            <l7:Id>0000000000000000fffffffffffffffa</l7:Id>
            <l7:Type>RESOURCE_ENTRY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.088-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ResourceDocument id="0000000000000000fffffffffffffffa" version="0">
                    <l7:Resource sourceUrl="http://www.w3.org/2001/datatypes.dtd" type="dtd">&lt;!--
        DTD for XML Schemas: Part 2: Datatypes
        $Id: datatypes.dtd,v 1.23 2001/03/16 17:36:30 ht Exp $
        Note this DTD is NOT normative, or even definitive. - - the
        prose copy in the datatypes REC is the definitive version
        (which shouldn't differ from this one except for this comment
        and entity expansions, but just in case)
  --&gt;

&lt;!--
        This DTD cannot be used on its own, it is intended
        only for incorporation in XMLSchema.dtd, q.v.
  --&gt;

&lt;!-- Define all the element names, with optional prefix --&gt;
&lt;!ENTITY % simpleType "%p;simpleType"&gt;
&lt;!ENTITY % restriction "%p;restriction"&gt;
&lt;!ENTITY % list "%p;list"&gt;
&lt;!ENTITY % union "%p;union"&gt;
&lt;!ENTITY % maxExclusive "%p;maxExclusive"&gt;
&lt;!ENTITY % minExclusive "%p;minExclusive"&gt;
&lt;!ENTITY % maxInclusive "%p;maxInclusive"&gt;
&lt;!ENTITY % minInclusive "%p;minInclusive"&gt;
&lt;!ENTITY % totalDigits "%p;totalDigits"&gt;
&lt;!ENTITY % fractionDigits "%p;fractionDigits"&gt;
&lt;!ENTITY % length "%p;length"&gt;
&lt;!ENTITY % minLength "%p;minLength"&gt;
&lt;!ENTITY % maxLength "%p;maxLength"&gt;
&lt;!ENTITY % enumeration "%p;enumeration"&gt;
&lt;!ENTITY % whiteSpace "%p;whiteSpace"&gt;
&lt;!ENTITY % pattern "%p;pattern"&gt;

&lt;!--
        Customisation entities for the ATTLIST of each element
        type. Define one of these if your schema takes advantage
        of the anyAttribute='##other' in the schema for schemas
  --&gt;

&lt;!ENTITY % simpleTypeAttrs ""&gt;
&lt;!ENTITY % restrictionAttrs ""&gt;
&lt;!ENTITY % listAttrs ""&gt;
&lt;!ENTITY % unionAttrs ""&gt;
&lt;!ENTITY % maxExclusiveAttrs ""&gt;
&lt;!ENTITY % minExclusiveAttrs ""&gt;
&lt;!ENTITY % maxInclusiveAttrs ""&gt;
&lt;!ENTITY % minInclusiveAttrs ""&gt;
&lt;!ENTITY % totalDigitsAttrs ""&gt;
&lt;!ENTITY % fractionDigitsAttrs ""&gt;
&lt;!ENTITY % lengthAttrs ""&gt;
&lt;!ENTITY % minLengthAttrs ""&gt;
&lt;!ENTITY % maxLengthAttrs ""&gt;
&lt;!ENTITY % enumerationAttrs ""&gt;
&lt;!ENTITY % whiteSpaceAttrs ""&gt;
&lt;!ENTITY % patternAttrs ""&gt;

&lt;!-- Define some entities for informative use as attribute
        types --&gt;
&lt;!ENTITY % URIref "CDATA"&gt;
&lt;!ENTITY % XPathExpr "CDATA"&gt;
&lt;!ENTITY % QName "NMTOKEN"&gt;
&lt;!ENTITY % QNames "NMTOKENS"&gt;
&lt;!ENTITY % NCName "NMTOKEN"&gt;
&lt;!ENTITY % nonNegativeInteger "NMTOKEN"&gt;
&lt;!ENTITY % boolean "(true|false)"&gt;
&lt;!ENTITY % simpleDerivationSet "CDATA"&gt;
&lt;!--
        #all or space-separated list drawn from derivationChoice
  --&gt;

&lt;!--
        Note that the use of 'facet' below is less restrictive
        than is really intended:  There should in fact be no
        more than one of each of minInclusive, minExclusive,
        maxInclusive, maxExclusive, totalDigits, fractionDigits,
        length, maxLength, minLength within datatype,
        and the min- and max- variants of Inclusive and Exclusive
        are mutually exclusive. On the other hand,  pattern and
        enumeration may repeat.
  --&gt;
&lt;!ENTITY % minBound "(%minInclusive; | %minExclusive;)"&gt;
&lt;!ENTITY % maxBound "(%maxInclusive; | %maxExclusive;)"&gt;
&lt;!ENTITY % bounds "%minBound; | %maxBound;"&gt;
&lt;!ENTITY % numeric "%totalDigits; | %fractionDigits;"&gt;
&lt;!ENTITY % ordered "%bounds; | %numeric;"&gt;
&lt;!ENTITY % unordered
   "%pattern; | %enumeration; | %whiteSpace; | %length; |
   %maxLength; | %minLength;"&gt;
&lt;!ENTITY % facet "%ordered; | %unordered;"&gt;
&lt;!ENTITY % facetAttr 
        "value CDATA #REQUIRED
        id ID #IMPLIED"&gt;
&lt;!ENTITY % fixedAttr "fixed %boolean; #IMPLIED"&gt;
&lt;!ENTITY % facetModel "(%annotation;)?"&gt;
&lt;!ELEMENT %simpleType;
        ((%annotation;)?, (%restriction; | %list; | %union;))&gt;
&lt;!ATTLIST %simpleType;
    name      %NCName; #IMPLIED
    final     %simpleDerivationSet; #IMPLIED
    id        ID       #IMPLIED
    %simpleTypeAttrs;&gt;
&lt;!-- name is required at top level --&gt;
&lt;!ELEMENT %restriction; ((%annotation;)?,
                         (%restriction1; |
                          ((%simpleType;)?,(%facet;)*)),
                         (%attrDecls;))&gt;
&lt;!ATTLIST %restriction;
    base      %QName;                  #IMPLIED
    id        ID       #IMPLIED
    %restrictionAttrs;&gt;
&lt;!--
        base and simpleType child are mutually exclusive,
        one is required.

        restriction is shared between simpleType and
        simpleContent and complexContent (in XMLSchema.xsd).
        restriction1 is for the latter cases, when this
        is restricting a complex type, as is attrDecls.
  --&gt;
&lt;!ELEMENT %list; ((%annotation;)?,(%simpleType;)?)&gt;
&lt;!ATTLIST %list;
    itemType      %QName;             #IMPLIED
    id        ID       #IMPLIED
    %listAttrs;&gt;
&lt;!--
        itemType and simpleType child are mutually exclusive,
        one is required
  --&gt;
&lt;!ELEMENT %union; ((%annotation;)?,(%simpleType;)*)&gt;
&lt;!ATTLIST %union;
    id            ID       #IMPLIED
    memberTypes   %QNames;            #IMPLIED
    %unionAttrs;&gt;
&lt;!--
        At least one item in memberTypes or one simpleType
        child is required
  --&gt;

&lt;!ELEMENT %maxExclusive; %facetModel;&gt;
&lt;!ATTLIST %maxExclusive;
        %facetAttr;
        %fixedAttr;
        %maxExclusiveAttrs;&gt;
&lt;!ELEMENT %minExclusive; %facetModel;&gt;
&lt;!ATTLIST %minExclusive;
        %facetAttr;
        %fixedAttr;
        %minExclusiveAttrs;&gt;

&lt;!ELEMENT %maxInclusive; %facetModel;&gt;
&lt;!ATTLIST %maxInclusive;
        %facetAttr;
        %fixedAttr;
        %maxInclusiveAttrs;&gt;
&lt;!ELEMENT %minInclusive; %facetModel;&gt;
&lt;!ATTLIST %minInclusive;
        %facetAttr;
        %fixedAttr;
        %minInclusiveAttrs;&gt;

&lt;!ELEMENT %totalDigits; %facetModel;&gt;
&lt;!ATTLIST %totalDigits;
        %facetAttr;
        %fixedAttr;
        %totalDigitsAttrs;&gt;
&lt;!ELEMENT %fractionDigits; %facetModel;&gt;
&lt;!ATTLIST %fractionDigits;
        %facetAttr;
        %fixedAttr;
        %fractionDigitsAttrs;&gt;

&lt;!ELEMENT %length; %facetModel;&gt;
&lt;!ATTLIST %length;
        %facetAttr;
        %fixedAttr;
        %lengthAttrs;&gt;
&lt;!ELEMENT %minLength; %facetModel;&gt;
&lt;!ATTLIST %minLength;
        %facetAttr;
        %fixedAttr;
        %minLengthAttrs;&gt;
&lt;!ELEMENT %maxLength; %facetModel;&gt;
&lt;!ATTLIST %maxLength;
        %facetAttr;
        %fixedAttr;
        %maxLengthAttrs;&gt;

&lt;!-- This one can be repeated --&gt;
&lt;!ELEMENT %enumeration; %facetModel;&gt;
&lt;!ATTLIST %enumeration;
        %facetAttr;
        %enumerationAttrs;&gt;

&lt;!ELEMENT %whiteSpace; %facetModel;&gt;
&lt;!ATTLIST %whiteSpace;
        %facetAttr;
        %fixedAttr;
        %whiteSpaceAttrs;&gt;

&lt;!-- This one can be repeated --&gt;
&lt;!ELEMENT %pattern; %facetModel;&gt;
&lt;!ATTLIST %pattern;
        %facetAttr;
        %patternAttrs;&gt;
</l7:Resource>
                    <l7:Properties>
                        <l7:Property key="publicIdentifier">
                            <l7:StringValue>datatypes</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:ResourceDocument>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>http://www.w3.org/2001/xml.xsd</l7:Name>
            <l7:Id>0000000000000000fffffffffffffffb</l7:Id>
            <l7:Type>RESOURCE_ENTRY</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.088-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:ResourceDocument id="0000000000000000fffffffffffffffb" version="0">
                    <l7:Resource sourceUrl="http://www.w3.org/2001/xml.xsd" type="xmlschema">&lt;?xml version='1.0'?&gt;
&lt;xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xmlns:xs="http://www.w3.org/2001/XMLSchema" xml:lang="en"&gt;

 &lt;xs:annotation&gt;
  &lt;xs:documentation&gt;
   See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.

    This schema document describes the XML namespace, in a form
    suitable for import by other schema documents.

    Note that local names in this namespace are intended to be defined
    only by the World Wide Web Consortium or its subgroups.  The
    following names are currently defined in this namespace and should
    not be used with conflicting semantics by any Working Group,
    specification, or document instance:

    base (as an attribute name): denotes an attribute whose value
         provides a URI to be used as the base for interpreting any
         relative URIs in the scope of the element on which it
         appears; its value is inherited.  This name is reserved
         by virtue of its definition in the XML Base specification.

    id   (as an attribute name): denotes an attribute whose value
         should be interpreted as if declared to be of type ID.
         This name is reserved by virtue of its definition in the
         xml:id specification.

    lang (as an attribute name): denotes an attribute whose value
         is a language code for the natural language of the content of
         any element; its value is inherited.  This name is reserved
         by virtue of its definition in the XML specification.

    space (as an attribute name): denotes an attribute whose
         value is a keyword indicating what whitespace processing
         discipline is intended for the content of the element; its
         value is inherited.  This name is reserved by virtue of its
         definition in the XML specification.

    Father (in any context at all): denotes Jon Bosak, the chair of
         the original XML Working Group.  This name is reserved by
         the following decision of the W3C XML Plenary and
         XML Coordination groups:

             In appreciation for his vision, leadership and dedication
             the W3C XML Plenary on this 10th day of February, 2000
             reserves for Jon Bosak in perpetuity the XML name
             xml:Father
  &lt;/xs:documentation&gt;
 &lt;/xs:annotation&gt;

 &lt;xs:annotation&gt;
  &lt;xs:documentation&gt;This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang, xml:space or xml:id
        attributes on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &amp;lt;schema . . .&gt;
         . . .
         &amp;lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/xml.xsd"/&gt;

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &amp;lt;type . . .&gt;
         . . .
         &amp;lt;attributeGroup ref="xml:specialAttrs"/&gt;
 
         will define a type which will schema-validate an instance
         element with any of those attributes&lt;/xs:documentation&gt;
 &lt;/xs:annotation&gt;

 &lt;xs:annotation&gt;
  &lt;xs:documentation&gt;In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2007/08/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself, or with the XML namespace itself.  In other words, if the XML
   Schema or XML namespaces change, the version of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2007/08/xml.xsd will not change.
  &lt;/xs:documentation&gt;
 &lt;/xs:annotation&gt;

 &lt;xs:attribute name="lang"&gt;
  &lt;xs:annotation&gt;
   &lt;xs:documentation&gt;Attempting to install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values is probably never
         going to be a realistic possibility.  See
         RFC 3066 at http://www.ietf.org/rfc/rfc3066.txt and the IANA registry
         at http://www.iana.org/assignments/lang-tag-apps.htm for
         further information.

         The union allows for the 'un-declaration' of xml:lang with
         the empty string.&lt;/xs:documentation&gt;
  &lt;/xs:annotation&gt;
  &lt;xs:simpleType&gt;
   &lt;xs:union memberTypes="xs:language"&gt;
    &lt;xs:simpleType&gt;
     &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value=""/&gt;
     &lt;/xs:restriction&gt;
    &lt;/xs:simpleType&gt;
   &lt;/xs:union&gt;
  &lt;/xs:simpleType&gt;
 &lt;/xs:attribute&gt;

 &lt;xs:attribute name="space"&gt;
  &lt;xs:simpleType&gt;
   &lt;xs:restriction base="xs:NCName"&gt;
    &lt;xs:enumeration value="default"/&gt;
    &lt;xs:enumeration value="preserve"/&gt;
   &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
 &lt;/xs:attribute&gt;

 &lt;xs:attribute name="base" type="xs:anyURI"&gt;
  &lt;xs:annotation&gt;
   &lt;xs:documentation&gt;See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.&lt;/xs:documentation&gt;
  &lt;/xs:annotation&gt;
 &lt;/xs:attribute&gt;

 &lt;xs:attribute name="id" type="xs:ID"&gt;
  &lt;xs:annotation&gt;
   &lt;xs:documentation&gt;See http://www.w3.org/TR/xml-id/ for
                     information about this attribute.&lt;/xs:documentation&gt;
  &lt;/xs:annotation&gt;
 &lt;/xs:attribute&gt;

 &lt;xs:attributeGroup name="specialAttrs"&gt;
  &lt;xs:attribute ref="xml:base"/&gt;
  &lt;xs:attribute ref="xml:lang"/&gt;
  &lt;xs:attribute ref="xml:space"/&gt;
  &lt;xs:attribute ref="xml:id"/&gt;
 &lt;/xs:attributeGroup&gt;

&lt;/xs:schema&gt;</l7:Resource>
                    <l7:Properties>
                        <l7:Property key="targetNamespace">
                            <l7:StringValue>http://www.w3.org/XML/1998/namespace</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:ResourceDocument>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>sspc</l7:Name>
            <l7:Id>0000000000000000fffffffffffffcd5</l7:Id>
            <l7:Type>LOG_SINK</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.088-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:LogSink id="0000000000000000fffffffffffffcd5" version="0">
                    <l7:Name>sspc</l7:Name>
                    <l7:Description>Process Controller Log</l7:Description>
                    <l7:Type>FILE</l7:Type>
                    <l7:Categories>
                        <l7:Category>SSPC</l7:Category>
                    </l7:Categories>
                    <l7:Enabled>false</l7:Enabled>
                    <l7:Severity>FINEST</l7:Severity>
                    <l7:SyslogHosts/>
                    <l7:Filters/>
                    <l7:Properties>
                        <l7:Property key="file.format">
                            <l7:StringValue>STANDARD</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="file.logCount">
                            <l7:StringValue>10</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="file.maxSize">
                            <l7:StringValue>20000</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:LogSink>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>AuditConfig</l7:Name>
            <l7:Id>00000000000000040000000000000001</l7:Id>
            <l7:Type>AUDIT_CONFIG</l7:Type>
            <l7:TimeStamp>2018-05-25T03:38:58.089-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:AuditConfiguration>
                    <l7:AlwaysSaveInternal>true</l7:AlwaysSaveInternal>
                </l7:AuditConfiguration>
            </l7:Resource>
        </l7:Item>
    </l7:References>
    <l7:Mappings>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000ffffffffffffec76" srcUri="https://ssg_v9_3:8443/restman/1.0/folders/0000000000000000ffffffffffffec76" type="FOLDER">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf367081130d6b" srcUri="https://ssg_v9_3:8443/restman/1.0/folders/fb3f1ba1a929b3396bcf367081130d6b" type="FOLDER"/>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf36708113137e" srcUri="https://ssg_v9_3:8443/restman/1.0/folders/fb3f1ba1a929b3396bcf36708113137e" type="FOLDER"/>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf3670811314c5" srcUri="https://ssg_v9_3:8443/restman/1.0/folders/fb3f1ba1a929b3396bcf3670811314c5" type="FOLDER"/>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf367081131506" srcUri="https://ssg_v9_3:8443/restman/1.0/folders/fb3f1ba1a929b3396bcf367081131506" type="FOLDER"/>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf367081131690" srcUri="https://ssg_v9_3:8443/restman/1.0/folders/fb3f1ba1a929b3396bcf367081131690" type="FOLDER"/>
        <l7:Mapping action="NewOrExisting" srcId="63805bece54f5987d66ab52a8499463b" srcUri="https://ssg_v9_3:8443/restman/1.0/folders/63805bece54f5987d66ab52a8499463b" type="FOLDER"/>
        <l7:Mapping action="Ignore" type="CLUSTER_PROPERTY">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>name</l7:StringValue>
                </l7:Property>
                <l7:Property key="MapTo">
                    <l7:StringValue>audit.sink.url</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf367081130e57" srcUri="https://ssg_v9_3:8443/restman/1.0/policies/fb3f1ba1a929b3396bcf367081130e57" type="POLICY"/>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf367081130e6a" srcUri="https://ssg_v9_3:8443/restman/1.0/policies/fb3f1ba1a929b3396bcf367081130e6a" type="POLICY"/>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf367081130f1d" srcUri="https://ssg_v9_3:8443/restman/1.0/policies/fb3f1ba1a929b3396bcf367081130f1d" type="POLICY"/>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf367081130f3f" srcUri="https://ssg_v9_3:8443/restman/1.0/policies/fb3f1ba1a929b3396bcf367081130f3f" type="POLICY"/>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf367081130c2a" srcUri="https://ssg_v9_3:8443/restman/1.0/clusterProperties/fb3f1ba1a929b3396bcf367081130c2a" type="CLUSTER_PROPERTY">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>name</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf367081131590" srcUri="https://ssg_v9_3:8443/restman/1.0/policies/fb3f1ba1a929b3396bcf367081131590" type="POLICY"/>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf3670811315bf" srcUri="https://ssg_v9_3:8443/restman/1.0/policies/fb3f1ba1a929b3396bcf3670811315bf" type="POLICY"/>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffffe" srcUri="https://ssg_v9_3:8443/restman/1.0/identityProviders/0000000000000000fffffffffffffffe" type="ID_PROVIDER_CONFIG">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="3ab0ba38f0101c67d9c46ad05f5b3d73" srcUri="https://ssg_v9_3:8443/restman/1.0/services/3ab0ba38f0101c67d9c46ad05f5b3d73" type="SERVICE"/>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf367081130c38" srcUri="https://ssg_v9_3:8443/restman/1.0/clusterProperties/fb3f1ba1a929b3396bcf367081130c38" type="CLUSTER_PROPERTY">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>name</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="843587c40009fff17b4945b27796ffc4" srcUri="https://ssg_v9_3:8443/restman/1.0/serverModuleFiles/843587c40009fff17b4945b27796ffc4" type="SERVER_MODULE_FILE">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>moduleSha256</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="bccde94fe646e21c4ff13b641cb5a0e1" srcUri="https://ssg_v9_3:8443/restman/1.0/services/bccde94fe646e21c4ff13b641cb5a0e1" type="SERVICE"/>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf3670811313c1" srcUri="https://ssg_v9_3:8443/restman/1.0/services/fb3f1ba1a929b3396bcf3670811313c1" type="SERVICE"/>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf367081131545" srcUri="https://ssg_v9_3:8443/restman/1.0/policies/fb3f1ba1a929b3396bcf367081131545" type="POLICY"/>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf367081130c2c" srcUri="https://ssg_v9_3:8443/restman/1.0/clusterProperties/fb3f1ba1a929b3396bcf367081130c2c" type="CLUSTER_PROPERTY">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>name</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf367081130c2e" srcUri="https://ssg_v9_3:8443/restman/1.0/clusterProperties/fb3f1ba1a929b3396bcf367081130c2e" type="CLUSTER_PROPERTY">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>name</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf36708113155e" srcUri="https://ssg_v9_3:8443/restman/1.0/policies/fb3f1ba1a929b3396bcf36708113155e" type="POLICY"/>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf3670811316d2" srcUri="https://ssg_v9_3:8443/restman/1.0/services/fb3f1ba1a929b3396bcf3670811316d2" type="SERVICE"/>
        <l7:Mapping action="NewOrExisting" srcId="63805bece54f5987d66ab52a849946f1" srcUri="https://ssg_v9_3:8443/restman/1.0/services/63805bece54f5987d66ab52a849946f1" type="SERVICE"/>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf36708113171c" srcUri="https://ssg_v9_3:8443/restman/1.0/services/fb3f1ba1a929b3396bcf36708113171c" type="SERVICE"/>
        <l7:Mapping action="NewOrExisting" srcId="1f500b1fb62f4cfe4e9f294e0dd05a44" srcUri="https://ssg_v9_3:8443/restman/1.0/trustedCertificates/1f500b1fb62f4cfe4e9f294e0dd05a44" type="TRUSTED_CERT"/>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf36708113120a" srcUri="https://ssg_v9_3:8443/restman/1.0/trustedCertificates/fb3f1ba1a929b3396bcf36708113120a" type="TRUSTED_CERT"/>
        <l7:Mapping action="NewOrExisting" srcId="1f500b1fb62f4cfe4e9f294e0dc34333" srcUri="https://ssg_v9_3:8443/restman/1.0/trustedCertificates/1f500b1fb62f4cfe4e9f294e0dc34333" type="TRUSTED_CERT"/>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf367081131209" srcUri="https://ssg_v9_3:8443/restman/1.0/trustedCertificates/fb3f1ba1a929b3396bcf367081131209" type="TRUSTED_CERT"/>
        <l7:Mapping action="NewOrExisting" srcId="1f500b1fb62f4cfe4e9f294e0dcf7012" srcUri="https://ssg_v9_3:8443/restman/1.0/trustedCertificates/1f500b1fb62f4cfe4e9f294e0dcf7012" type="TRUSTED_CERT"/>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf367081130c3e" srcUri="https://ssg_v9_3:8443/restman/1.0/clusterProperties/fb3f1ba1a929b3396bcf367081130c3e" type="CLUSTER_PROPERTY">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>name</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffff5519f" srcUri="https://ssg_v9_3:8443/restman/1.0/clusterProperties/0000000000000000fffffffffff5519f" type="CLUSTER_PROPERTY">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>name</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf367081130c1f" srcUri="https://ssg_v9_3:8443/restman/1.0/clusterProperties/fb3f1ba1a929b3396bcf367081130c1f" type="CLUSTER_PROPERTY">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>name</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf367081130c40" srcUri="https://ssg_v9_3:8443/restman/1.0/clusterProperties/fb3f1ba1a929b3396bcf367081130c40" type="CLUSTER_PROPERTY">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>name</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0c5d0eca7f2ebc666ad2161c6a70e139" srcUri="https://ssg_v9_3:8443/restman/1.0/clusterProperties/0c5d0eca7f2ebc666ad2161c6a70e139" type="CLUSTER_PROPERTY">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>name</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf367081130c30" srcUri="https://ssg_v9_3:8443/restman/1.0/clusterProperties/fb3f1ba1a929b3396bcf367081130c30" type="CLUSTER_PROPERTY">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>name</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="3aa7217dd5bcd4e2a4d5bf6545ef9aa8" srcUri="https://ssg_v9_3:8443/restman/1.0/clusterProperties/3aa7217dd5bcd4e2a4d5bf6545ef9aa8" type="CLUSTER_PROPERTY">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>name</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf367081130bdd" srcUri="https://ssg_v9_3:8443/restman/1.0/clusterProperties/fb3f1ba1a929b3396bcf367081130bdd" type="CLUSTER_PROPERTY">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>name</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf367081130c21" srcUri="https://ssg_v9_3:8443/restman/1.0/clusterProperties/fb3f1ba1a929b3396bcf367081130c21" type="CLUSTER_PROPERTY">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>name</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf367081130c32" srcUri="https://ssg_v9_3:8443/restman/1.0/clusterProperties/fb3f1ba1a929b3396bcf367081130c32" type="CLUSTER_PROPERTY">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>name</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf367081130c23" srcUri="https://ssg_v9_3:8443/restman/1.0/clusterProperties/fb3f1ba1a929b3396bcf367081130c23" type="CLUSTER_PROPERTY">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>name</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf367081130c34" srcUri="https://ssg_v9_3:8443/restman/1.0/clusterProperties/fb3f1ba1a929b3396bcf367081130c34" type="CLUSTER_PROPERTY">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>name</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf367081130c25" srcUri="https://ssg_v9_3:8443/restman/1.0/clusterProperties/fb3f1ba1a929b3396bcf367081130c25" type="CLUSTER_PROPERTY">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>name</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf367081130c36" srcUri="https://ssg_v9_3:8443/restman/1.0/clusterProperties/fb3f1ba1a929b3396bcf367081130c36" type="CLUSTER_PROPERTY">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>name</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf367081130c27" srcUri="https://ssg_v9_3:8443/restman/1.0/clusterProperties/fb3f1ba1a929b3396bcf367081130c27" type="CLUSTER_PROPERTY">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>name</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="9dc90e9f92e551cb6944328ef5ccdb73" srcUri="https://ssg_v9_3:8443/restman/1.0/clusterProperties/9dc90e9f92e551cb6944328ef5ccdb73" type="CLUSTER_PROPERTY">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>name</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf367081130c3a" srcUri="https://ssg_v9_3:8443/restman/1.0/clusterProperties/fb3f1ba1a929b3396bcf367081130c3a" type="CLUSTER_PROPERTY">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>name</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="fb3f1ba1a929b3396bcf367081130c3c" srcUri="https://ssg_v9_3:8443/restman/1.0/clusterProperties/fb3f1ba1a929b3396bcf367081130c3c" type="CLUSTER_PROPERTY">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>name</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="742a7604-699c-368a-a19a-0ddd73085575" srcUri="https://ssg_v9_3:8443/restman/1.0/interfaceTags/742a7604-699c-368a-a19a-0ddd73085575" type="INTERFACE_TAG"/>
        <l7:Mapping action="NewOrExisting" srcId="0775603f26bbbffcc957374dbe1f3c4a" srcUri="https://ssg_v9_3:8443/restman/1.0/listenPorts/0775603f26bbbffcc957374dbe1f3c4a" type="SSG_CONNECTOR"/>
        <l7:Mapping action="NewOrExisting" srcId="0775603f26bbbffcc957374dbe1f3c4c" srcUri="https://ssg_v9_3:8443/restman/1.0/listenPorts/0775603f26bbbffcc957374dbe1f3c4c" type="SSG_CONNECTOR"/>
        <l7:Mapping action="NewOrExisting" srcId="0775603f26bbbffcc957374dbe1f3c4b" srcUri="https://ssg_v9_3:8443/restman/1.0/listenPorts/0775603f26bbbffcc957374dbe1f3c4b" type="SSG_CONNECTOR"/>
        <l7:Mapping action="NewOrExisting" srcId="0775603f26bbbffcc957374dbe1f3c4d" srcUri="https://ssg_v9_3:8443/restman/1.0/listenPorts/0775603f26bbbffcc957374dbe1f3c4d" type="SSG_CONNECTOR"/>
        <l7:Mapping action="NewOrExisting" srcId="0775603f26bbbffcc957374dbe1f3ddf" srcUri="https://ssg_v9_3:8443/restman/1.0/listenPorts/0775603f26bbbffcc957374dbe1f3ddf" type="SSG_CONNECTOR"/>
        <l7:Mapping action="NewOrExisting" srcId="0775603f26bbbffcc957374dbe1f3def" srcUri="https://ssg_v9_3:8443/restman/1.0/listenPorts/0775603f26bbbffcc957374dbe1f3def" type="SSG_CONNECTOR"/>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffe0c" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000fffffffffffffe0c" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="17273f26927e10909b73c67c18cb26d9" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/17273f26927e10909b73c67c18cb26d9" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
                <l7:Property key="MapBy">
                    <l7:StringValue>mapByRoleEntity</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffbe6" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000fffffffffffffbe6" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffaba" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000fffffffffffffaba" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="17273f26927e10909b73c67c18cb2475" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/17273f26927e10909b73c67c18cb2475" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
                <l7:Property key="MapBy">
                    <l7:StringValue>mapByRoleEntity</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffdda" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000fffffffffffffdda" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffb82" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000fffffffffffffb82" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffda8" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000fffffffffffffda8" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="17273f26927e10909b73c67c18cb2439" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/17273f26927e10909b73c67c18cb2439" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
                <l7:Property key="MapBy">
                    <l7:StringValue>mapByRoleEntity</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffff95c" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000fffffffffffff95c" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffcae" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000fffffffffffffcae" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="17273f26927e10909b73c67c18cb2556" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/17273f26927e10909b73c67c18cb2556" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
                <l7:Property key="MapBy">
                    <l7:StringValue>mapByRoleEntity</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffa56" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000fffffffffffffa56" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffd76" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000fffffffffffffd76" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffc4a" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000fffffffffffffc4a" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000ffffffffffffff6a" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000ffffffffffffff6a" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="17273f26927e10909b73c67c18cb23c1" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/17273f26927e10909b73c67c18cb23c1" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
                <l7:Property key="MapBy">
                    <l7:StringValue>mapByRoleEntity</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffc18" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000fffffffffffffc18" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000ffffffffffffff38" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000ffffffffffffff38" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="17273f26927e10909b73c67c18cb24c8" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/17273f26927e10909b73c67c18cb24c8" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
                <l7:Property key="MapBy">
                    <l7:StringValue>mapByRoleEntity</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffb1e" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000fffffffffffffb1e" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffe3e" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000fffffffffffffe3e" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="17273f26927e10909b73c67c18cb260a" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/17273f26927e10909b73c67c18cb260a" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
                <l7:Property key="MapBy">
                    <l7:StringValue>mapByRoleEntity</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffcd6" srcUri="https://ssg_v9_3:8443/restman/1.0/logSinks/0000000000000000fffffffffffffcd6" type="LOG_SINK"/>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffaec" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000fffffffffffffaec" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
                <l7:Property key="MapBy">
                    <l7:StringValue>mapByRoleEntity</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="17273f26927e10909b73c67c18cb2663" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/17273f26927e10909b73c67c18cb2663" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
                <l7:Property key="MapBy">
                    <l7:StringValue>mapByRoleEntity</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="17273f26927e10909b73c67c18cb2504" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/17273f26927e10909b73c67c18cb2504" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
                <l7:Property key="MapBy">
                    <l7:StringValue>mapByRoleEntity</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffff98e" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000fffffffffffff98e" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffff9c0" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000fffffffffffff9c0" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="17273f26927e10909b73c67c18cb2589" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/17273f26927e10909b73c67c18cb2589" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
                <l7:Property key="MapBy">
                    <l7:StringValue>mapByRoleEntity</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="17273f26927e10909b73c67c18cb2547" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/17273f26927e10909b73c67c18cb2547" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
                <l7:Property key="MapBy">
                    <l7:StringValue>mapByRoleEntity</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000ffffffffffffff9c" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000ffffffffffffff9c" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="17273f26927e10909b73c67c18cb269e" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/17273f26927e10909b73c67c18cb269e" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
                <l7:Property key="MapBy">
                    <l7:StringValue>mapByRoleEntity</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffc7c" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000fffffffffffffc7c" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffea2" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000fffffffffffffea2" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="17273f26927e10909b73c67c18cb23d8" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/17273f26927e10909b73c67c18cb23d8" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
                <l7:Property key="MapBy">
                    <l7:StringValue>mapByRoleEntity</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffa88" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000fffffffffffffa88" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="17273f26927e10909b73c67c18cb2576" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/17273f26927e10909b73c67c18cb2576" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
                <l7:Property key="MapBy">
                    <l7:StringValue>mapByRoleEntity</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="17273f26927e10909b73c67c18cb24ed" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/17273f26927e10909b73c67c18cb24ed" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
                <l7:Property key="MapBy">
                    <l7:StringValue>mapByRoleEntity</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="17273f26927e10909b73c67c18cb2652" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/17273f26927e10909b73c67c18cb2652" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
                <l7:Property key="MapBy">
                    <l7:StringValue>mapByRoleEntity</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="17273f26927e10909b73c67c18cb2450" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/17273f26927e10909b73c67c18cb2450" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
                <l7:Property key="MapBy">
                    <l7:StringValue>mapByRoleEntity</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="17273f26927e10909b73c67c18cb2538" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/17273f26927e10909b73c67c18cb2538" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
                <l7:Property key="MapBy">
                    <l7:StringValue>mapByRoleEntity</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffd12" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000fffffffffffffd12" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="17273f26927e10909b73c67c18cb25cf" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/17273f26927e10909b73c67c18cb25cf" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
                <l7:Property key="MapBy">
                    <l7:StringValue>mapByRoleEntity</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="17273f26927e10909b73c67c18cb2414" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/17273f26927e10909b73c67c18cb2414" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
                <l7:Property key="MapBy">
                    <l7:StringValue>mapByRoleEntity</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffce0" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000fffffffffffffce0" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="17273f26927e10909b73c67c18cb248c" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/17273f26927e10909b73c67c18cb248c" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
                <l7:Property key="MapBy">
                    <l7:StringValue>mapByRoleEntity</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffbb4" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000fffffffffffffbb4" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffed4" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000fffffffffffffed4" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="17273f26927e10909b73c67c18cb23fd" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/17273f26927e10909b73c67c18cb23fd" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
                <l7:Property key="MapBy">
                    <l7:StringValue>mapByRoleEntity</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffe70" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000fffffffffffffe70" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="17273f26927e10909b73c67c18cb2565" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/17273f26927e10909b73c67c18cb2565" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
                <l7:Property key="MapBy">
                    <l7:StringValue>mapByRoleEntity</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffb50" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000fffffffffffffb50" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffff92a" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000fffffffffffff92a" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="17273f26927e10909b73c67c18cb2529" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/17273f26927e10909b73c67c18cb2529" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
                <l7:Property key="MapBy">
                    <l7:StringValue>mapByRoleEntity</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffd44" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000fffffffffffffd44" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="17273f26927e10909b73c67c18cb2643" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/17273f26927e10909b73c67c18cb2643" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
                <l7:Property key="MapBy">
                    <l7:StringValue>mapByRoleEntity</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffa24" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000fffffffffffffa24" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="17273f26927e10909b73c67c18cb24b1" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/17273f26927e10909b73c67c18cb24b1" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
                <l7:Property key="MapBy">
                    <l7:StringValue>mapByRoleEntity</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000ffffffffffffff06" srcUri="https://ssg_v9_3:8443/restman/1.0/roles/0000000000000000ffffffffffffff06" type="RBAC_ROLE">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffff9" srcUri="https://ssg_v9_3:8443/restman/1.0/resources/0000000000000000fffffffffffffff9" type="RESOURCE_ENTRY"/>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffffc" srcUri="https://ssg_v9_3:8443/restman/1.0/resources/0000000000000000fffffffffffffffc" type="RESOURCE_ENTRY"/>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffffd" srcUri="https://ssg_v9_3:8443/restman/1.0/resources/0000000000000000fffffffffffffffd" type="RESOURCE_ENTRY"/>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffffa" srcUri="https://ssg_v9_3:8443/restman/1.0/resources/0000000000000000fffffffffffffffa" type="RESOURCE_ENTRY"/>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffffb" srcUri="https://ssg_v9_3:8443/restman/1.0/resources/0000000000000000fffffffffffffffb" type="RESOURCE_ENTRY"/>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffcd5" srcUri="https://ssg_v9_3:8443/restman/1.0/logSinks/0000000000000000fffffffffffffcd5" type="LOG_SINK"/>
        <l7:Mapping action="NewOrExisting" srcId="00000000000000040000000000000001" srcUri="https://ssg_v9_3:8443/restman/1.0/auditConfiguration/default" type="AUDIT_CONFIG">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
    </l7:Mappings>
</l7:Bundle>
